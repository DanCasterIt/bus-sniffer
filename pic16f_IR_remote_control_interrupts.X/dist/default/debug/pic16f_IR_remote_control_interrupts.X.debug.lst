

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr 14 18:05:09 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.45
    36                           ; Generated 16/11/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F876A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125                           
   126                           	psect	stringtext
   127  0800                     __pstringtext:	
   128  0800                     stringtab:	
   129  0800                     __stringtab:	
   130                           
   131                           ;	String table - string pointers are 2 bytes each
   132  0800  1BFF               	btfsc	btemp+1,7
   133  0801  280A               	ljmp	stringcode
   134  0802  1383               	bcf	3,7
   135  0803  187F               	btfsc	btemp+1,0
   136  0804  1783               	bsf	3,7
   137  0805  0800               	movf	0,w
   138  0806  0A84               	incf	4,f
   139  0807  1903               	skipnz
   140  0808  0AFF               	incf	btemp+1,f
   141  0809  0008               	return
   142  080A                     stringcode:	
   143  080A  087F               	movf	btemp+1,w
   144  080B  397F               	andlw	127
   145  080C  008A               	movwf	10
   146  080D  0804               	movf	4,w
   147  080E  0A84               	incf	4,f
   148  080F  1903               	skipnz
   149  0810  0AFF               	incf	btemp+1,f
   150  0811  0082               	movwf	2
   151  0812                     __stringbase:	
   152  0812                     __end_of__stringtab:	
   153  0812                     _dpowers:	
   154  0812  3401               	retlw	1
   155  0813  3400               	retlw	0
   156  0814  340A               	retlw	10
   157  0815  3400               	retlw	0
   158  0816  3464               	retlw	100
   159  0817  3400               	retlw	0
   160  0818  34E8               	retlw	232
   161  0819  3403               	retlw	3
   162  081A  3410               	retlw	16
   163  081B  3427               	retlw	39
   164  081C                     __end_of_dpowers:	
   165  000E                     _TMR1	set	14
   166  001A                     _RCREG	set	26
   167  0019                     _TXREG	set	25
   168  0018                     _RCSTAbits	set	24
   169  0007                     _PORTCbits	set	7
   170  0005                     _PORTA	set	5
   171  0006                     _PORTBbits	set	6
   172  0010                     _T1CONbits	set	16
   173  000C                     _PIR1bits	set	12
   174  000B                     _INTCONbits	set	11
   175  0005                     _PORTAbits	set	5
   176  008C                     _PIE1bits	set	140
   177  0099                     _SPBRG	set	153
   178  0098                     _TXSTAbits	set	152
   179  0087                     _TRISCbits	set	135
   180  0087                     _TRISC	set	135
   181  0086                     _TRISB	set	134
   182  0085                     _TRISA	set	133
   183  009F                     _ADCON1bits	set	159
   184  081C                     STR_12:	
   185  081C  3444               	retlw	68	;'D'
   186  081D  3469               	retlw	105	;'i'
   187  081E  3467               	retlw	103	;'g'
   188  081F  3469               	retlw	105	;'i'
   189  0820  3474               	retlw	116	;'t'
   190  0821  3461               	retlw	97	;'a'
   191  0822  3472               	retlw	114	;'r'
   192  0823  3465               	retlw	101	;'e'
   193  0824  3420               	retlw	32	;' '
   194  0825  3471               	retlw	113	;'q'
   195  0826  3475               	retlw	117	;'u'
   196  0827  3461               	retlw	97	;'a'
   197  0828  346E               	retlw	110	;'n'
   198  0829  3474               	retlw	116	;'t'
   199  082A  3465               	retlw	101	;'e'
   200  082B  3420               	retlw	32	;' '
   201  082C  3476               	retlw	118	;'v'
   202  082D  346F               	retlw	111	;'o'
   203  082E  346C               	retlw	108	;'l'
   204  082F  3474               	retlw	116	;'t'
   205  0830  3465               	retlw	101	;'e'
   206  0831  3420               	retlw	32	;' '
   207  0832  3472               	retlw	114	;'r'
   208  0833  3469               	retlw	105	;'i'
   209  0834  3470               	retlw	112	;'p'
   210  0835  3472               	retlw	114	;'r'
   211  0836  346F               	retlw	111	;'o'
   212  0837  3464               	retlw	100	;'d'
   213  0838  3475               	retlw	117	;'u'
   214  0839  3472               	retlw	114	;'r'
   215  083A  3472               	retlw	114	;'r'
   216  083B  3465               	retlw	101	;'e'
   217  083C  3420               	retlw	32	;' '
   218  083D  346C               	retlw	108	;'l'
   219  083E  3461               	retlw	97	;'a'
   220  083F  3420               	retlw	32	;' '
   221  0840  3473               	retlw	115	;'s'
   222  0841  3465               	retlw	101	;'e'
   223  0842  3471               	retlw	113	;'q'
   224  0843  3475               	retlw	117	;'u'
   225  0844  3465               	retlw	101	;'e'
   226  0845  346E               	retlw	110	;'n'
   227  0846  347A               	retlw	122	;'z'
   228  0847  3461               	retlw	97	;'a'
   229  0848  343A               	retlw	58	;':'
   230  0849  3420               	retlw	32	;' '
   231  084A  3400               	retlw	0
   232  084B                     STR_2:	
   233  084B  3452               	retlw	82	;'R'
   234  084C  3465               	retlw	101	;'e'
   235  084D  3467               	retlw	103	;'g'
   236  084E  3469               	retlw	105	;'i'
   237  084F  3473               	retlw	115	;'s'
   238  0850  3474               	retlw	116	;'t'
   239  0851  3472               	retlw	114	;'r'
   240  0852  3461               	retlw	97	;'a'
   241  0853  3472               	retlw	114	;'r'
   242  0854  3465               	retlw	101	;'e'
   243  0855  3428               	retlw	40	;'('
   244  0856  3465               	retlw	101	;'e'
   245  0857  3429               	retlw	41	;')'
   246  0858  342C               	retlw	44	;','
   247  0859  3420               	retlw	32	;' '
   248  085A  3472               	retlw	114	;'r'
   249  085B  3469               	retlw	105	;'i'
   250  085C  3470               	retlw	112	;'p'
   251  085D  3472               	retlw	114	;'r'
   252  085E  346F               	retlw	111	;'o'
   253  085F  3464               	retlw	100	;'d'
   254  0860  3475               	retlw	117	;'u'
   255  0861  3472               	retlw	114	;'r'
   256  0862  3472               	retlw	114	;'r'
   257  0863  3465               	retlw	101	;'e'
   258  0864  3428               	retlw	40	;'('
   259  0865  3469               	retlw	105	;'i'
   260  0866  3429               	retlw	41	;')'
   261  0867  3420               	retlw	32	;' '
   262  0868  346F               	retlw	111	;'o'
   263  0869  3420               	retlw	32	;' '
   264  086A  3474               	retlw	116	;'t'
   265  086B  3465               	retlw	101	;'e'
   266  086C  3473               	retlw	115	;'s'
   267  086D  3474               	retlw	116	;'t'
   268  086E  3428               	retlw	40	;'('
   269  086F  3474               	retlw	116	;'t'
   270  0870  3429               	retlw	41	;')'
   271  0871  343A               	retlw	58	;':'
   272  0872  3420               	retlw	32	;' '
   273  0873  3400               	retlw	0
   274  0874                     STR_16:	
   275  0874  3445               	retlw	69	;'E'
   276  0875  3452               	retlw	82	;'R'
   277  0876  3452               	retlw	82	;'R'
   278  0877  344F               	retlw	79	;'O'
   279  0878  3452               	retlw	82	;'R'
   280  0879  3445               	retlw	69	;'E'
   281  087A  343A               	retlw	58	;':'
   282  087B  3420               	retlw	32	;' '
   283  087C  3464               	retlw	100	;'d'
   284  087D  3469               	retlw	105	;'i'
   285  087E  3467               	retlw	103	;'g'
   286  087F  3469               	retlw	105	;'i'
   287  0880  3474               	retlw	116	;'t'
   288  0881  3461               	retlw	97	;'a'
   289  0882  3472               	retlw	114	;'r'
   290  0883  3465               	retlw	101	;'e'
   291  0884  3420               	retlw	32	;' '
   292  0885  3427               	retlw	39	;'''
   293  0886  3465               	retlw	101	;'e'
   294  0887  3427               	retlw	39	;'''
   295  0888  342C               	retlw	44	;','
   296  0889  3420               	retlw	32	;' '
   297  088A  3427               	retlw	39	;'''
   298  088B  3469               	retlw	105	;'i'
   299  088C  3427               	retlw	39	;'''
   300  088D  3420               	retlw	32	;' '
   301  088E  346F               	retlw	111	;'o'
   302  088F  3420               	retlw	32	;' '
   303  0890  3427               	retlw	39	;'''
   304  0891  3474               	retlw	116	;'t'
   305  0892  3427               	retlw	39	;'''
   306  0893  342E               	retlw	46	;'.'
   307  0894  340A               	retlw	10
   308  0895  340D               	retlw	13
   309  0896  3400               	retlw	0
   310  0897                     STR_7:	
   311  0897  3453               	retlw	83	;'S'
   312  0898  3465               	retlw	101	;'e'
   313  0899  346C               	retlw	108	;'l'
   314  089A  3465               	retlw	101	;'e'
   315  089B  347A               	retlw	122	;'z'
   316  089C  3469               	retlw	105	;'i'
   317  089D  346F               	retlw	111	;'o'
   318  089E  3461               	retlw	97	;'a'
   319  089F  3472               	retlw	114	;'r'
   320  08A0  3465               	retlw	101	;'e'
   321  08A1  3420               	retlw	32	;' '
   322  08A2  3469               	retlw	105	;'i'
   323  08A3  346C               	retlw	108	;'l'
   324  08A4  3420               	retlw	32	;' '
   325  08A5  3470               	retlw	112	;'p'
   326  08A6  3465               	retlw	101	;'e'
   327  08A7  3472               	retlw	114	;'r'
   328  08A8  3469               	retlw	105	;'i'
   329  08A9  346F               	retlw	111	;'o'
   330  08AA  3464               	retlw	100	;'d'
   331  08AB  346F               	retlw	111	;'o'
   332  08AC  342E               	retlw	46	;'.'
   333  08AD  340A               	retlw	10
   334  08AE  340D               	retlw	13
   335  08AF  3400               	retlw	0
   336  08B0                     STR_15:	
   337  08B0  3452               	retlw	82	;'R'
   338  08B1  3465               	retlw	101	;'e'
   339  08B2  3473               	retlw	115	;'s'
   340  08B3  3465               	retlw	101	;'e'
   341  08B4  3474               	retlw	116	;'t'
   342  08B5  3474               	retlw	116	;'t'
   343  08B6  3461               	retlw	97	;'a'
   344  08B7  3472               	retlw	114	;'r'
   345  08B8  3465               	retlw	101	;'e'
   346  08B9  3420               	retlw	32	;' '
   347  08BA  3470               	retlw	112	;'p'
   348  08BB  3465               	retlw	101	;'e'
   349  08BC  3472               	retlw	114	;'r'
   350  08BD  3420               	retlw	32	;' '
   351  08BE  3475               	retlw	117	;'u'
   352  08BF  3473               	retlw	115	;'s'
   353  08C0  3463               	retlw	99	;'c'
   354  08C1  3469               	retlw	105	;'i'
   355  08C2  3472               	retlw	114	;'r'
   356  08C3  3465               	retlw	101	;'e'
   357  08C4  342E               	retlw	46	;'.'
   358  08C5  340A               	retlw	10
   359  08C6  340D               	retlw	13
   360  08C7  3400               	retlw	0
   361  08C8                     STR_13:	
   362  08C8  3452               	retlw	82	;'R'
   363  08C9  3469               	retlw	105	;'i'
   364  08CA  3470               	retlw	112	;'p'
   365  08CB  3472               	retlw	114	;'r'
   366  08CC  346F               	retlw	111	;'o'
   367  08CD  3464               	retlw	100	;'d'
   368  08CE  3475               	retlw	117	;'u'
   369  08CF  3463               	retlw	99	;'c'
   370  08D0  3465               	retlw	101	;'e'
   371  08D1  346E               	retlw	110	;'n'
   372  08D2  3464               	retlw	100	;'d'
   373  08D3  346F               	retlw	111	;'o'
   374  08D4  342E               	retlw	46	;'.'
   375  08D5  342E               	retlw	46	;'.'
   376  08D6  342E               	retlw	46	;'.'
   377  08D7  340A               	retlw	10
   378  08D8  340D               	retlw	13
   379  08D9  3400               	retlw	0
   380  08DA                     STR_4:	
   381  08DA  3452               	retlw	82	;'R'
   382  08DB  3465               	retlw	101	;'e'
   383  08DC  3467               	retlw	103	;'g'
   384  08DD  3469               	retlw	105	;'i'
   385  08DE  3473               	retlw	115	;'s'
   386  08DF  3474               	retlw	116	;'t'
   387  08E0  3472               	retlw	114	;'r'
   388  08E1  3461               	retlw	97	;'a'
   389  08E2  346E               	retlw	110	;'n'
   390  08E3  3464               	retlw	100	;'d'
   391  08E4  346F               	retlw	111	;'o'
   392  08E5  342E               	retlw	46	;'.'
   393  08E6  342E               	retlw	46	;'.'
   394  08E7  342E               	retlw	46	;'.'
   395  08E8  340A               	retlw	10
   396  08E9  340D               	retlw	13
   397  08EA  3400               	retlw	0
   398  08EB                     STR_17:	
   399  08EB  3469               	retlw	105	;'i'
   400  08EC  3420               	retlw	32	;' '
   401  08ED  343D               	retlw	61	;'='
   402  08EE  3420               	retlw	32	;' '
   403  08EF  3425               	retlw	37	;'%'
   404  08F0  3475               	retlw	117	;'u'
   405  08F1  342C               	retlw	44	;','
   406  08F2  3420               	retlw	32	;' '
   407  08F3  3462               	retlw	98	;'b'
   408  08F4  3420               	retlw	32	;' '
   409  08F5  343D               	retlw	61	;'='
   410  08F6  3420               	retlw	32	;' '
   411  08F7  3425               	retlw	37	;'%'
   412  08F8  3475               	retlw	117	;'u'
   413  08F9  340A               	retlw	10
   414  08FA  340D               	retlw	13
   415  08FB  3400               	retlw	0
   416  08FC                     STR_5:	
   417  08FC  345B               	retlw	91	;'['
   418  08FD  3425               	retlw	37	;'%'
   419  08FE  3432               	retlw	50	;'2'
   420  08FF  3475               	retlw	117	;'u'
   421  0900  345D               	retlw	93	;']'
   422  0901  3420               	retlw	32	;' '
   423  0902  3425               	retlw	37	;'%'
   424  0903  3435               	retlw	53	;'5'
   425  0904  3475               	retlw	117	;'u'
   426  0905  342D               	retlw	45	;'-'
   427  0906  3425               	retlw	37	;'%'
   428  0907  3475               	retlw	117	;'u'
   429  0908  342C               	retlw	44	;','
   430  0909  3409               	retlw	9
   431  090A  3409               	retlw	9
   432  090B  3400               	retlw	0
   433  090C                     STR_14:	
   434  090C  3446               	retlw	70	;'F'
   435  090D  3469               	retlw	105	;'i'
   436  090E  346E               	retlw	110	;'n'
   437  090F  3465               	retlw	101	;'e'
   438  0910  3420               	retlw	32	;' '
   439  0911  3463               	retlw	99	;'c'
   440  0912  3469               	retlw	105	;'i'
   441  0913  3463               	retlw	99	;'c'
   442  0914  346C               	retlw	108	;'l'
   443  0915  346F               	retlw	111	;'o'
   444  0916  3420               	retlw	32	;' '
   445  0917  340A               	retlw	10
   446  0918  340D               	retlw	13
   447  0919  3400               	retlw	0
   448  091A                     STR_6:	
   449  091A  3425               	retlw	37	;'%'
   450  091B  3435               	retlw	53	;'5'
   451  091C  3475               	retlw	117	;'u'
   452  091D  342D               	retlw	45	;'-'
   453  091E  3425               	retlw	37	;'%'
   454  091F  3475               	retlw	117	;'u'
   455  0920  342C               	retlw	44	;','
   456  0921  340A               	retlw	10
   457  0922  340D               	retlw	13
   458  0923  3400               	retlw	0
   459  0924                     STR_8:	
   460  0924  3449               	retlw	73	;'I'
   461  0925  346E               	retlw	110	;'n'
   462  0926  3469               	retlw	105	;'i'
   463  0927  347A               	retlw	122	;'z'
   464  0928  3469               	retlw	105	;'i'
   465  0929  346F               	retlw	111	;'o'
   466  092A  343A               	retlw	58	;':'
   467  092B  3420               	retlw	32	;' '
   468  092C  3400               	retlw	0
   469  092D                     STR_1:	
   470  092D  3452               	retlw	82	;'R'
   471  092E  3445               	retlw	69	;'E'
   472  092F  3453               	retlw	83	;'S'
   473  0930  3445               	retlw	69	;'E'
   474  0931  3454               	retlw	84	;'T'
   475  0932  340A               	retlw	10
   476  0933  340D               	retlw	13
   477  0934  3400               	retlw	0
   478  0935                     STR_9:	
   479  0935  3446               	retlw	70	;'F'
   480  0936  3469               	retlw	105	;'i'
   481  0937  346E               	retlw	110	;'n'
   482  0938  3465               	retlw	101	;'e'
   483  0939  343A               	retlw	58	;':'
   484  093A  3420               	retlw	32	;' '
   485  093B  3400               	retlw	0
   486  093C                     STR_18:	
   487  093C  3449               	retlw	73	;'I'
   488  093D  3453               	retlw	83	;'S'
   489  093E  3452               	retlw	82	;'R'
   490  093F  340A               	retlw	10
   491  0940  340D               	retlw	13
   492  0941  3400               	retlw	0
   493  0942                     STR_3:	
   494  0942  3425               	retlw	37	;'%'
   495  0943  3463               	retlw	99	;'c'
   496  0944  340A               	retlw	10
   497  0945  340D               	retlw	13
   498  0946  3400               	retlw	0
   499  08FC                     
   500                           ; #config settings
   501  0000                     
   502                           	psect	cinit
   503  07E1                     start_initialization:	
   504  07E1                     __initialization:	
   505                           
   506                           ; Clear objects allocated to BANK0
   507  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   508  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   509  07E3  01CE               	clrf	__pbssBANK0& (0+127)
   510                           
   511                           ; Clear objects allocated to BANK1
   512  07E4  1383               	bcf	3,7	;select IRP bank0
   513  07E5  30BE               	movlw	low __pbssBANK1
   514  07E6  0084               	movwf	4
   515  07E7  30CE               	movlw	low (__pbssBANK1+16)
   516  07E8  120A  118A  2016  120A  118A  	fcall	clear_ram0
   517                           
   518                           ; Clear objects allocated to BANK3
   519  07ED  1783               	bsf	3,7	;select IRP bank2
   520  07EE  3090               	movlw	low __pbssBANK3
   521  07EF  0084               	movwf	4
   522  07F0  30C0               	movlw	low (__pbssBANK3+48)
   523  07F1  120A  118A  2016  120A  118A  	fcall	clear_ram0
   524                           
   525                           ; Clear objects allocated to BANK2
   526  07F6  3010               	movlw	low __pbssBANK2
   527  07F7  0084               	movwf	4
   528  07F8  3070               	movlw	low (__pbssBANK2+96)
   529  07F9  120A  118A  2016   	fcall	clear_ram0
   530  07FC                     end_of_initialization:	
   531                           ;End of C runtime variable initialization code
   532                           
   533  07FC                     __end_of__initialization:	
   534  07FC  0183               	clrf	3
   535  07FD  120A  118A  2D86   	ljmp	_main	;jump to C main() function
   536                           
   537                           	psect	bssBANK0
   538  004E                     __pbssBANK0:	
   539  004E                     _val:	
   540  004E                     	ds	1
   541                           
   542                           	psect	bssBANK1
   543  00BE                     __pbssBANK1:	
   544  00BE                     _cycles:	
   545  00BE                     	ds	1
   546  00BF                     _b:	
   547  00BF                     	ds	1
   548  00C0                     _a:	
   549  00C0                     	ds	1
   550  00C1                     _e:	
   551  00C1                     	ds	1
   552  00C2                     _i:	
   553  00C2                     	ds	1
   554  00C3                     _c:	
   555  00C3                     	ds	1
   556  00C4                     _number:	
   557  00C4                     	ds	10
   558                           
   559                           	psect	bssBANK3
   560  0190                     __pbssBANK3:	
   561  0190                     _array:	
   562  0190                     	ds	48
   563                           
   564                           	psect	bssBANK2
   565  0110                     __pbssBANK2:	
   566  0110                     _arrayv:	
   567  0110                     	ds	96
   568                           
   569                           	psect	clrtext
   570  0016                     clear_ram0:	
   571                           ;	Called with FSR containing the base address, and
   572                           ;	W with the last address+1
   573                           
   574  0016  0064               	clrwdt	;clear the watchdog before getting into this loop
   575  0017                     clrloop0:	
   576  0017  0180               	clrf	0	;clear RAM location pointed to by FSR
   577  0018  0A84               	incf	4,f	;increment pointer
   578  0019  0604               	xorwf	4,w	;XOR with final address
   579  001A  1903               	btfsc	3,2	;have we reached the end yet?
   580  001B  3400               	retlw	0	;all done for this memory range, return
   581  001C  0604               	xorwf	4,w	;XOR again to restore value
   582  001D  2817               	goto	clrloop0	;do the next byte
   583                           
   584                           	psect	cstackBANK1
   585  00A0                     __pcstackBANK1:	
   586  00A0                     ?_printf:	
   587  00A0                     printf@f:	
   588                           ; 2 bytes @ 0x0
   589                           
   590                           
   591                           ; 2 bytes @ 0x0
   592  00A0                     	ds	8
   593  00A8                     printf@flag:	
   594                           
   595                           ; 1 bytes @ 0x8
   596  00A8                     	ds	1
   597  00A9                     printf@cp:	
   598                           
   599                           ; 1 bytes @ 0x9
   600  00A9                     	ds	1
   601  00AA                     printf@val:	
   602                           
   603                           ; 2 bytes @ 0xA
   604  00AA                     	ds	2
   605  00AC                     printf@prec:	
   606                           
   607                           ; 1 bytes @ 0xC
   608  00AC                     	ds	1
   609  00AD                     printf@ap:	
   610                           
   611                           ; 1 bytes @ 0xD
   612  00AD                     	ds	1
   613  00AE                     printf@len:	
   614                           
   615                           ; 2 bytes @ 0xE
   616  00AE                     	ds	2
   617  00B0                     printf@width:	
   618                           
   619                           ; 2 bytes @ 0x10
   620  00B0                     	ds	2
   621  00B2                     printf@c:	
   622                           
   623                           ; 1 bytes @ 0x12
   624  00B2                     	ds	1
   625  00B3                     ?_main:	
   626  00B3                     main@argc:	
   627                           ; 2 bytes @ 0x13
   628                           
   629                           
   630                           ; 2 bytes @ 0x13
   631  00B3                     	ds	2
   632  00B5                     main@argv:	
   633                           
   634                           ; 2 bytes @ 0x15
   635  00B5                     	ds	2
   636  00B7                     ??_main:	
   637                           
   638                           ; 1 bytes @ 0x17
   639  00B7                     	ds	7
   640                           
   641                           	psect	cstackCOMMON
   642  0071                     __pcstackCOMMON:	
   643  0071                     ?_isdigit:	
   644  0071                     ?i1_isdigit:	
   645                           ; 1 bit 
   646                           
   647  0071                     ?_setup_peripheals:	
   648                           ; 1 bit 
   649                           
   650  0071                     ?_read_char:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0071                     ?_putch:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0071                     ?_ISR:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0071                     ?i1_putch:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0071                     ??i1_putch:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0071                     ??i1_isdigit:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0071                     ?i1___wmul:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0071                     ?i1___lwdiv:	
   672                           ; 2 bytes @ 0x0
   673                           
   674  0071                     i1putch@c:	
   675                           ; 2 bytes @ 0x0
   676                           
   677  0071                     i1_isdigit$694:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0071                     i1___wmul@multiplier:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0071                     i1___lwdiv@divisor:	
   684                           ; 2 bytes @ 0x0
   685                           
   686                           
   687                           ; 2 bytes @ 0x0
   688  0071                     	ds	1
   689  0072                     i1isdigit@c:	
   690                           
   691                           ; 1 bytes @ 0x1
   692  0072                     	ds	1
   693  0073                     i1___wmul@multiplicand:	
   694  0073                     i1___lwdiv@dividend:	
   695                           ; 2 bytes @ 0x2
   696                           
   697                           
   698                           ; 2 bytes @ 0x2
   699  0073                     	ds	2
   700  0075                     ??i1___wmul:	
   701  0075                     ??i1___lwdiv:	
   702                           ; 1 bytes @ 0x4
   703                           
   704  0075                     i1___wmul@product:	
   705                           ; 1 bytes @ 0x4
   706                           
   707                           
   708                           ; 2 bytes @ 0x4
   709  0075                     	ds	1
   710  0076                     i1___lwdiv@quotient:	
   711                           
   712                           ; 2 bytes @ 0x5
   713  0076                     	ds	2
   714  0078                     i1___lwdiv@counter:	
   715                           
   716                           ; 1 bytes @ 0x7
   717  0078                     	ds	1
   718  0079                     ?i1___lwmod:	
   719  0079                     i1___lwmod@divisor:	
   720                           ; 2 bytes @ 0x8
   721                           
   722                           
   723                           ; 2 bytes @ 0x8
   724  0079                     	ds	2
   725  007B                     i1___lwmod@dividend:	
   726                           
   727                           ; 2 bytes @ 0xA
   728  007B                     	ds	2
   729  007D                     ??i1___lwmod:	
   730                           
   731                           ; 1 bytes @ 0xC
   732  007D                     	ds	1
   733                           
   734                           	psect	cstackBANK0
   735  0020                     __pcstackBANK0:	
   736  0020                     i1___lwmod@counter:	
   737                           
   738                           ; 1 bytes @ 0x0
   739  0020                     	ds	1
   740  0021                     ?i1_printf:	
   741  0021                     i1printf@f:	
   742                           ; 2 bytes @ 0x1
   743                           
   744                           
   745                           ; 2 bytes @ 0x1
   746  0021                     	ds	6
   747  0027                     ??i1_printf:	
   748                           
   749                           ; 1 bytes @ 0x7
   750  0027                     	ds	3
   751  002A                     i1printf@flag:	
   752                           
   753                           ; 1 bytes @ 0xA
   754  002A                     	ds	1
   755  002B                     i1printf@cp:	
   756                           
   757                           ; 1 bytes @ 0xB
   758  002B                     	ds	1
   759  002C                     i1printf@val:	
   760                           
   761                           ; 2 bytes @ 0xC
   762  002C                     	ds	2
   763  002E                     i1printf@prec:	
   764                           
   765                           ; 1 bytes @ 0xE
   766  002E                     	ds	1
   767  002F                     i1printf@ap:	
   768                           
   769                           ; 1 bytes @ 0xF
   770  002F                     	ds	1
   771  0030                     i1printf@len:	
   772                           
   773                           ; 2 bytes @ 0x10
   774  0030                     	ds	2
   775  0032                     i1printf@width:	
   776                           
   777                           ; 2 bytes @ 0x12
   778  0032                     	ds	2
   779  0034                     i1printf@c:	
   780                           
   781                           ; 1 bytes @ 0x14
   782  0034                     	ds	1
   783  0035                     ??_ISR:	
   784                           
   785                           ; 1 bytes @ 0x15
   786  0035                     	ds	8
   787  003D                     ??_setup_peripheals:	
   788  003D                     ??_read_char:	
   789                           ; 1 bytes @ 0x1D
   790                           
   791  003D                     ??_isdigit:	
   792                           ; 1 bytes @ 0x1D
   793                           
   794  003D                     ??_putch:	
   795                           ; 1 bytes @ 0x1D
   796                           
   797  003D                     ?___wmul:	
   798                           ; 1 bytes @ 0x1D
   799                           
   800  003D                     ?___lwdiv:	
   801                           ; 2 bytes @ 0x1D
   802                           
   803  003D                     putch@c:	
   804                           ; 2 bytes @ 0x1D
   805                           
   806  003D                     _isdigit$694:	
   807                           ; 1 bytes @ 0x1D
   808                           
   809  003D                     ___wmul@multiplier:	
   810                           ; 1 bytes @ 0x1D
   811                           
   812  003D                     ___lwdiv@divisor:	
   813                           ; 2 bytes @ 0x1D
   814                           
   815                           
   816                           ; 2 bytes @ 0x1D
   817  003D                     	ds	1
   818  003E                     ?_read_line:	
   819  003E                     isdigit@c:	
   820                           ; 1 bytes @ 0x1E
   821                           
   822  003E                     read_line@max_len:	
   823                           ; 1 bytes @ 0x1E
   824                           
   825                           
   826                           ; 2 bytes @ 0x1E
   827  003E                     	ds	1
   828  003F                     ___wmul@multiplicand:	
   829  003F                     ___lwdiv@dividend:	
   830                           ; 2 bytes @ 0x1F
   831                           
   832                           
   833                           ; 2 bytes @ 0x1F
   834  003F                     	ds	1
   835  0040                     ??_read_line:	
   836                           
   837                           ; 1 bytes @ 0x20
   838  0040                     	ds	1
   839  0041                     ??___wmul:	
   840  0041                     ??___lwdiv:	
   841                           ; 1 bytes @ 0x21
   842                           
   843  0041                     ___wmul@product:	
   844                           ; 1 bytes @ 0x21
   845                           
   846                           
   847                           ; 2 bytes @ 0x21
   848  0041                     	ds	1
   849  0042                     read_line@s:	
   850  0042                     ___lwdiv@quotient:	
   851                           ; 1 bytes @ 0x22
   852                           
   853                           
   854                           ; 2 bytes @ 0x22
   855  0042                     	ds	1
   856  0043                     ?_atoi:	
   857  0043                     read_line@i:	
   858                           ; 2 bytes @ 0x23
   859                           
   860                           
   861                           ; 2 bytes @ 0x23
   862  0043                     	ds	1
   863  0044                     ___lwdiv@counter:	
   864                           
   865                           ; 1 bytes @ 0x24
   866  0044                     	ds	1
   867  0045                     ??_atoi:	
   868  0045                     ?___lwmod:	
   869                           ; 1 bytes @ 0x25
   870                           
   871  0045                     read_line@c:	
   872                           ; 2 bytes @ 0x25
   873                           
   874  0045                     ___lwmod@divisor:	
   875                           ; 1 bytes @ 0x25
   876                           
   877                           
   878                           ; 2 bytes @ 0x25
   879  0045                     	ds	2
   880  0047                     atoi@sign:	
   881  0047                     ___lwmod@dividend:	
   882                           ; 1 bytes @ 0x27
   883                           
   884                           
   885                           ; 2 bytes @ 0x27
   886  0047                     	ds	1
   887  0048                     atoi@a:	
   888                           
   889                           ; 2 bytes @ 0x28
   890  0048                     	ds	1
   891  0049                     ??___lwmod:	
   892                           
   893                           ; 1 bytes @ 0x29
   894  0049                     	ds	1
   895  004A                     atoi@s:	
   896  004A                     ___lwmod@counter:	
   897                           ; 1 bytes @ 0x2A
   898                           
   899                           
   900                           ; 1 bytes @ 0x2A
   901  004A                     	ds	1
   902  004B                     ??_printf:	
   903                           
   904                           ; 1 bytes @ 0x2B
   905  004B                     	ds	3
   906                           
   907                           	psect	maintext
   908  0586                     __pmaintext:	
   909 ;;
   910 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   911 ;;
   912 ;; *************** function _main *****************
   913 ;; Defined at:
   914 ;;		line 32 in file "main.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  argc            2   19[BANK1 ] int 
   917 ;;  argv            2   21[BANK1 ] PTR PTR unsigned char 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  2   19[BANK1 ] int 
   922 ;; Registers used:
   923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : B00/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       4       0       0
   930 ;;      Locals:         0       0       0       0       0
   931 ;;      Temps:          0       0       7       0       0
   932 ;;      Totals:         0       0      11       0       0
   933 ;;Total ram usage:       11 bytes
   934 ;; Hardware stack levels required when called:    5
   935 ;; This function calls:
   936 ;;		_atoi
   937 ;;		_printf
   938 ;;		_read_char
   939 ;;		_read_line
   940 ;;		_setup_peripheals
   941 ;; This function is called by:
   942 ;;		Startup code after reset
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _main
   948  0586                     _main:	
   949                           
   950                           ;main.c: 33: setup_peripheals();
   951                           
   952                           ;incstack = 0
   953                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   954  0586  120A  158A  2718  120A  118A  	fcall	_setup_peripheals
   955                           
   956                           ;main.c: 34: printf("RESET\n\r");
   957  058B  302D               	movlw	low (STR_1| (0+32768))
   958  058C  1683               	bsf	3,5	;RP0=1, select bank1
   959  058D  1303               	bcf	3,6	;RP1=0, select bank1
   960  058E  00A0               	movwf	printf@f^(0+128)
   961  058F  3089               	movlw	high (STR_1| (0+32768))
   962  0590                     L1:	
   963  0590  00A1               	movwf	(printf@f^(0+128)+1)
   964  0591  120A  118A  2349  120A  118A  	fcall	_printf
   965  0596                     l1983:	
   966                           ;main.c: 35: while (1) {
   967                           
   968                           
   969                           ;main.c: 36: PORTAbits.RA1 = 0;
   970  0596  1283               	bcf	3,5	;RP0=0, select bank0
   971  0597  1303               	bcf	3,6	;RP1=0, select bank0
   972  0598  1085               	bcf	5,1	;volatile
   973                           
   974                           ;main.c: 37: PORTAbits.RA2 = 0;
   975  0599  1105               	bcf	5,2	;volatile
   976                           
   977                           ;main.c: 38: printf("Registrare(e), riprodurre(i) o test(t): ");
   978  059A  304B               	movlw	low (STR_2| (0+32768))
   979  059B  1683               	bsf	3,5	;RP0=1, select bank1
   980  059C  1303               	bcf	3,6	;RP1=0, select bank1
   981  059D  00A0               	movwf	printf@f^(0+128)
   982  059E  3088               	movlw	high (STR_2| (0+32768))
   983  059F  00A1               	movwf	(printf@f^(0+128)+1)
   984  05A0  120A  118A  2349  120A  118A  	fcall	_printf
   985                           
   986                           ;main.c: 39: c = read_char();
   987  05A5  120A  158A  2642  120A  118A  	fcall	_read_char
   988  05AA  1683               	bsf	3,5	;RP0=1, select bank1
   989  05AB  1303               	bcf	3,6	;RP1=0, select bank1
   990  05AC  00B7               	movwf	??_main^(0+128)
   991  05AD  0837               	movf	??_main^(0+128),w
   992  05AE  00C3               	movwf	_c^(0+128)
   993                           
   994                           ;main.c: 40: printf("%c\n\r", c);
   995  05AF  3042               	movlw	low (STR_3| (0+32768))
   996  05B0  00A0               	movwf	printf@f^(0+128)
   997  05B1  3089               	movlw	high (STR_3| (0+32768))
   998  05B2  00A1               	movwf	(printf@f^(0+128)+1)
   999  05B3  0843               	movf	_c^(0+128),w
  1000  05B4  00B7               	movwf	??_main^(0+128)
  1001  05B5  01B8               	clrf	(??_main^(0+128)+1)
  1002  05B6  0837               	movf	??_main^(0+128),w
  1003  05B7  00A2               	movwf	(?_printf^(0+128)+2)
  1004  05B8  0838               	movf	(??_main+1)^(0+128),w
  1005  05B9  00A3               	movwf	((?_printf+1)^(0+128)+2)
  1006  05BA  120A  118A  2349  120A  118A  	fcall	_printf
  1007                           
  1008                           ;main.c: 41: if (c == 'e' || c == 'i' || c == 't') {
  1009  05BF  3065               	movlw	101
  1010  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  1011  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  1012  05C2  0643               	xorwf	_c^(0+128),w
  1013  05C3  1903               	btfsc	3,2
  1014  05C4  2DCD               	goto	l1999
  1015  05C5  3069               	movlw	105
  1016  05C6  0643               	xorwf	_c^(0+128),w
  1017  05C7  1903               	btfsc	3,2
  1018  05C8  2DCD               	goto	l1999
  1019  05C9  3074               	movlw	116
  1020  05CA  0643               	xorwf	_c^(0+128),w
  1021  05CB  1D03               	btfss	3,2
  1022  05CC  2FDB               	goto	l2095
  1023  05CD                     l1999:	
  1024                           
  1025                           ;main.c: 42: if (c == 'e') {
  1026  05CD  3065               	movlw	101
  1027  05CE  0643               	xorwf	_c^(0+128),w
  1028  05CF  1D03               	btfss	3,2
  1029  05D0  2F63               	goto	l2063
  1030                           
  1031                           ;main.c: 43: printf("Registrando...\n\r");
  1032  05D1  30DA               	movlw	low (STR_4| (0+32768))
  1033  05D2  00A0               	movwf	printf@f^(0+128)
  1034  05D3  3088               	movlw	high (STR_4| (0+32768))
  1035  05D4  00A1               	movwf	(printf@f^(0+128)+1)
  1036  05D5  120A  118A  2349  120A  118A  	fcall	_printf
  1037                           
  1038                           ;main.c: 44: i = 0;
  1039  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  1040  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  1041  05DC  01C2               	clrf	_i^(0+128)
  1042                           
  1043                           ;main.c: 45: TMR1 = 0;
  1044  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1045  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1046  05DF  018E               	clrf	14	;volatile
  1047  05E0  018F               	clrf	15	;volatile
  1048                           
  1049                           ;main.c: 46: INTCONbits.RBIF = 0;
  1050  05E1  100B               	bcf	11,0	;volatile
  1051                           
  1052                           ;main.c: 47: INTCONbits.RBIE = 1;
  1053  05E2  158B               	bsf	11,3	;volatile
  1054                           
  1055                           ;main.c: 48: PIR1bits.TMR1IF = 0;
  1056  05E3  100C               	bcf	12,0	;volatile
  1057                           
  1058                           ;main.c: 49: T1CONbits.TMR1ON = 1;
  1059  05E4  1410               	bsf	16,0	;volatile
  1060                           
  1061                           ;main.c: 50: array[i] = !PORTBbits.RB4;
  1062  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  1063  05E6  1303               	bcf	3,6	;RP1=0, select bank1
  1064  05E7  0842               	movf	_i^(0+128),w
  1065  05E8  3E90               	addlw	(low (_array| (0+256)))& (0+255)
  1066  05E9  0084               	movwf	4
  1067  05EA  1003               	clrc
  1068  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1069  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1070  05ED  1E06               	btfss	6,4	;volatile
  1071  05EE  1403               	setc
  1072  05EF  3000               	movlw	0
  1073  05F0  1803               	btfsc	3,0
  1074  05F1  3001               	movlw	1
  1075  05F2  1783               	bsf	3,7	;select IRP bank3
  1076  05F3  0080               	movwf	0
  1077                           
  1078                           ;main.c: 51: PORTAbits.RA1 = !PORTBbits.RB4;
  1079  05F4  1003               	clrc
  1080  05F5  1E06               	btfss	6,4	;volatile
  1081  05F6  1403               	setc
  1082  05F7  1C03               	btfss	3,0
  1083  05F8  2DFD               	goto	u2370
  1084  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1085  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1086  05FB  1485               	bsf	5,1	;volatile
  1087  05FC  2E00               	goto	l2019
  1088  05FD                     u2370:	
  1089  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  1090  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  1091  05FF  1085               	bcf	5,1	;volatile
  1092  0600                     l2019:	
  1093                           
  1094                           ;main.c: 52: PORTAbits.RA2 = !PORTBbits.RB4;
  1095  0600  1003               	clrc
  1096  0601  1E06               	btfss	6,4	;volatile
  1097  0602  1403               	setc
  1098  0603  1C03               	btfss	3,0
  1099  0604  2E09               	goto	u2390
  1100  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1101  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1102  0607  1505               	bsf	5,2	;volatile
  1103  0608  2E0C               	goto	l2021
  1104  0609                     u2390:	
  1105  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1106  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1107  060B  1105               	bcf	5,2	;volatile
  1108  060C                     l2021:	
  1109                           ;main.c: 53: while (i < 48);
  1110                           
  1111  060C  3030               	movlw	48
  1112  060D  1683               	bsf	3,5	;RP0=1, select bank1
  1113  060E  1303               	bcf	3,6	;RP1=0, select bank1
  1114  060F  0242               	subwf	_i^(0+128),w
  1115  0610  1C03               	skipc
  1116  0611  2E0C               	goto	l2021
  1117                           
  1118                           ;main.c: 54: PORTAbits.RA1 = 0;
  1119  0612  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0613  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0614  1085               	bcf	5,1	;volatile
  1122                           
  1123                           ;main.c: 55: PORTAbits.RA2 = 0;
  1124  0615  1105               	bcf	5,2	;volatile
  1125                           
  1126                           ;main.c: 56: for (i = 0; i < 48; i++) {
  1127  0616  1683               	bsf	3,5	;RP0=1, select bank1
  1128  0617  1303               	bcf	3,6	;RP1=0, select bank1
  1129  0618  01C2               	clrf	_i^(0+128)
  1130  0619  3030               	movlw	48
  1131  061A  0242               	subwf	_i^(0+128),w
  1132  061B  1803               	btfsc	3,0
  1133  061C  2E8D               	goto	l2039
  1134  061D                     l2029:	
  1135                           
  1136                           ;main.c: 57: printf("[%2u] %5u-%u,\t\t", i, arrayv[i], array[i]);
  1137  061D  30FC               	movlw	low (STR_5| (0+32768))
  1138  061E  00A0               	movwf	printf@f^(0+128)
  1139  061F  3088               	movlw	high (STR_5| (0+32768))
  1140  0620  00A1               	movwf	(printf@f^(0+128)+1)
  1141  0621  0842               	movf	_i^(0+128),w
  1142  0622  00B7               	movwf	??_main^(0+128)
  1143  0623  01B8               	clrf	(??_main^(0+128)+1)
  1144  0624  0837               	movf	??_main^(0+128),w
  1145  0625  00A2               	movwf	(?_printf^(0+128)+2)
  1146  0626  0838               	movf	(??_main+1)^(0+128),w
  1147  0627  00A3               	movwf	((?_printf+1)^(0+128)+2)
  1148  0628  0842               	movf	_i^(0+128),w
  1149  0629  00B9               	movwf	(??_main+2)^(0+128)
  1150  062A  0739               	addwf	(??_main+2)^(0+128),w
  1151  062B  3E10               	addlw	(low (_arrayv| (0+256)))& (0+255)
  1152  062C  0084               	movwf	4
  1153  062D  1783               	bsf	3,7	;select IRP bank2
  1154  062E  0800               	movf	0,w
  1155  062F  00A4               	movwf	(?_printf^(0+128)+4)
  1156  0630  0A84               	incf	4,f
  1157  0631  0800               	movf	0,w
  1158  0632  00A5               	movwf	((?_printf+1)^(0+128)+4)
  1159  0633  0842               	movf	_i^(0+128),w
  1160  0634  3E90               	addlw	(low (_array| (0+256)))& (0+255)
  1161  0635  0084               	movwf	4
  1162  0636  0800               	movf	0,w
  1163  0637  00BA               	movwf	(??_main+3)^(0+128)
  1164  0638  01BB               	clrf	((??_main+3)^(0+128)+1)
  1165  0639  083A               	movf	(??_main+3)^(0+128),w
  1166  063A  00A6               	movwf	(?_printf^(0+128)+6)
  1167  063B  083B               	movf	(??_main+4)^(0+128),w
  1168  063C  00A7               	movwf	((?_printf+1)^(0+128)+6)
  1169  063D  120A  118A  2349  120A  118A  	fcall	_printf
  1170                           
  1171                           ;main.c: 58: arrayv[i] = 0xFFFF - arrayv[i];
  1172  0642  1683               	bsf	3,5	;RP0=1, select bank1
  1173  0643  1303               	bcf	3,6	;RP1=0, select bank1
  1174  0644  0842               	movf	_i^(0+128),w
  1175  0645  00B7               	movwf	??_main^(0+128)
  1176  0646  0737               	addwf	??_main^(0+128),w
  1177  0647  3E10               	addlw	(low (_arrayv| (0+256)))& (0+255)
  1178  0648  0084               	movwf	4
  1179  0649  1783               	bsf	3,7	;select IRP bank2
  1180  064A  0800               	movf	0,w
  1181  064B  00B8               	movwf	(??_main+1)^(0+128)
  1182  064C  0A84               	incf	4,f
  1183  064D  0800               	movf	0,w
  1184  064E  00B9               	movwf	((??_main+1)^(0+128)+1)
  1185  064F  09B8               	comf	(??_main+1)^(0+128),f
  1186  0650  09B9               	comf	((??_main+1)^(0+128)+1),f
  1187  0651  0AB8               	incf	(??_main+1)^(0+128),f
  1188  0652  1903               	skipnz
  1189  0653  0AB9               	incf	((??_main+1)^(0+128)+1),f
  1190  0654  0838               	movf	(??_main+1)^(0+128),w
  1191  0655  3EFF               	addlw	255
  1192  0656  00BA               	movwf	(??_main+3)^(0+128)
  1193  0657  0839               	movf	(??_main+2)^(0+128),w
  1194  0658  1803               	skipnc
  1195  0659  3E01               	addlw	1
  1196  065A  3EFF               	addlw	255
  1197  065B  00BB               	movwf	(??_main+4)^(0+128)
  1198  065C  0842               	movf	_i^(0+128),w
  1199  065D  00BC               	movwf	(??_main+5)^(0+128)
  1200  065E  073C               	addwf	(??_main+5)^(0+128),w
  1201  065F  3E10               	addlw	(low (_arrayv| (0+256)))& (0+255)
  1202  0660  0084               	movwf	4
  1203  0661  083A               	movf	(??_main+3)^(0+128),w
  1204  0662  0080               	movwf	0
  1205  0663  0A84               	incf	4,f
  1206  0664  083B               	movf	(??_main+4)^(0+128),w
  1207  0665  0080               	movwf	0
  1208                           
  1209                           ;main.c: 59: printf("%5u-%u,\n\r", arrayv[i], array[i]);
  1210  0666  301A               	movlw	low (STR_6| (0+32768))
  1211  0667  00A0               	movwf	printf@f^(0+128)
  1212  0668  3089               	movlw	high (STR_6| (0+32768))
  1213  0669  00A1               	movwf	(printf@f^(0+128)+1)
  1214  066A  0842               	movf	_i^(0+128),w
  1215  066B  00B7               	movwf	??_main^(0+128)
  1216  066C  0737               	addwf	??_main^(0+128),w
  1217  066D  3E10               	addlw	(low (_arrayv| (0+256)))& (0+255)
  1218  066E  0084               	movwf	4
  1219  066F  0800               	movf	0,w
  1220  0670  00A2               	movwf	(?_printf^(0+128)+2)
  1221  0671  0A84               	incf	4,f
  1222  0672  0800               	movf	0,w
  1223  0673  00A3               	movwf	((?_printf+1)^(0+128)+2)
  1224  0674  0842               	movf	_i^(0+128),w
  1225  0675  3E90               	addlw	(low (_array| (0+256)))& (0+255)
  1226  0676  0084               	movwf	4
  1227  0677  0800               	movf	0,w
  1228  0678  00B8               	movwf	(??_main+1)^(0+128)
  1229  0679  01B9               	clrf	((??_main+1)^(0+128)+1)
  1230  067A  0838               	movf	(??_main+1)^(0+128),w
  1231  067B  00A4               	movwf	(?_printf^(0+128)+4)
  1232  067C  0839               	movf	(??_main+2)^(0+128),w
  1233  067D  00A5               	movwf	((?_printf+1)^(0+128)+4)
  1234  067E  120A  118A  2349  120A  118A  	fcall	_printf
  1235  0683  3001               	movlw	1
  1236  0684  1683               	bsf	3,5	;RP0=1, select bank1
  1237  0685  1303               	bcf	3,6	;RP1=0, select bank1
  1238  0686  00B7               	movwf	??_main^(0+128)
  1239  0687  0837               	movf	??_main^(0+128),w
  1240  0688  07C2               	addwf	_i^(0+128),f
  1241  0689  3030               	movlw	48
  1242  068A  0242               	subwf	_i^(0+128),w
  1243  068B  1C03               	skipc
  1244  068C  2E1D               	goto	l2029
  1245  068D                     l2039:	
  1246                           
  1247                           ;main.c: 60: }
  1248                           ;main.c: 61: printf("Selezioare il periodo.\n\r");
  1249  068D  3097               	movlw	low (STR_7| (0+32768))
  1250  068E  00A0               	movwf	printf@f^(0+128)
  1251  068F  3088               	movlw	high (STR_7| (0+32768))
  1252  0690  00A1               	movwf	(printf@f^(0+128)+1)
  1253  0691  120A  118A  2349  120A  118A  	fcall	_printf
  1254                           
  1255                           ;main.c: 62: printf("Inizio: ");
  1256  0696  3024               	movlw	low (STR_8| (0+32768))
  1257  0697  1683               	bsf	3,5	;RP0=1, select bank1
  1258  0698  1303               	bcf	3,6	;RP1=0, select bank1
  1259  0699  00A0               	movwf	printf@f^(0+128)
  1260  069A  3089               	movlw	high (STR_8| (0+32768))
  1261  069B  00A1               	movwf	(printf@f^(0+128)+1)
  1262  069C  120A  118A  2349  120A  118A  	fcall	_printf
  1263                           
  1264                           ;main.c: 63: read_line(number, 10);
  1265  06A1  300A               	movlw	10
  1266  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1267  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1268  06A4  00BE               	movwf	read_line@max_len
  1269  06A5  3000               	movlw	0
  1270  06A6  00BF               	movwf	read_line@max_len+1
  1271  06A7  30C4               	movlw	(low (_number| 0))& (0+255)
  1272  06A8  120A  118A  205C  120A  118A  	fcall	_read_line
  1273                           
  1274                           ;main.c: 64: a = atoi(number);
  1275  06AD  30C4               	movlw	(low (_number| 0))& (0+255)
  1276  06AE  120A  158A  278F  120A  118A  	fcall	_atoi
  1277  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1278  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  1279  06B5  0843               	movf	?_atoi,w
  1280  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  1281  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  1282  06B8  00B7               	movwf	??_main^(0+128)
  1283  06B9  0837               	movf	??_main^(0+128),w
  1284  06BA  00C0               	movwf	_a^(0+128)
  1285                           
  1286                           ;main.c: 65: printf("Fine: ");
  1287  06BB  3035               	movlw	low (STR_9| (0+32768))
  1288  06BC  00A0               	movwf	printf@f^(0+128)
  1289  06BD  3089               	movlw	high (STR_9| (0+32768))
  1290  06BE  00A1               	movwf	(printf@f^(0+128)+1)
  1291  06BF  120A  118A  2349  120A  118A  	fcall	_printf
  1292                           
  1293                           ;main.c: 66: read_line(number, 10);
  1294  06C4  300A               	movlw	10
  1295  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1296  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1297  06C7  00BE               	movwf	read_line@max_len
  1298  06C8  3000               	movlw	0
  1299  06C9  00BF               	movwf	read_line@max_len+1
  1300  06CA  30C4               	movlw	(low (_number| 0))& (0+255)
  1301  06CB  120A  118A  205C  120A  118A  	fcall	_read_line
  1302                           
  1303                           ;main.c: 67: b = atoi(number);
  1304  06D0  30C4               	movlw	(low (_number| 0))& (0+255)
  1305  06D1  120A  158A  278F  120A  118A  	fcall	_atoi
  1306  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1307  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1308  06D8  0843               	movf	?_atoi,w
  1309  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  1310  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  1311  06DB  00B7               	movwf	??_main^(0+128)
  1312  06DC  0837               	movf	??_main^(0+128),w
  1313  06DD  00BF               	movwf	_b^(0+128)
  1314                           
  1315                           ;main.c: 68: b = b - a + 1;
  1316  06DE  0340               	decf	_a^(0+128),w
  1317  06DF  3AFF               	xorlw	255
  1318  06E0  073F               	addwf	_b^(0+128),w
  1319  06E1  3E01               	addlw	1
  1320  06E2  00B7               	movwf	??_main^(0+128)
  1321  06E3  0837               	movf	??_main^(0+128),w
  1322  06E4  00BF               	movwf	_b^(0+128)
  1323                           
  1324                           ;main.c: 69: for (i = 0; i < b; i++) {
  1325  06E5  01C2               	clrf	_i^(0+128)
  1326  06E6                     l2061:	
  1327  06E6  083F               	movf	_b^(0+128),w
  1328  06E7  0242               	subwf	_i^(0+128),w
  1329  06E8  1803               	btfsc	3,0
  1330  06E9  2F63               	goto	l2063
  1331                           
  1332                           ;main.c: 70: array[i] = array[i + a];
  1333  06EA  0840               	movf	_a^(0+128),w
  1334  06EB  0742               	addwf	_i^(0+128),w
  1335  06EC  3E90               	addlw	(low (_array| (0+256)))& (0+255)
  1336  06ED  0084               	movwf	4
  1337  06EE  1783               	bsf	3,7	;select IRP bank3
  1338  06EF  0800               	movf	0,w
  1339  06F0  00B7               	movwf	??_main^(0+128)
  1340  06F1  0842               	movf	_i^(0+128),w
  1341  06F2  3E90               	addlw	(low (_array| (0+256)))& (0+255)
  1342  06F3  0084               	movwf	4
  1343  06F4  0837               	movf	??_main^(0+128),w
  1344  06F5  0080               	movwf	0
  1345                           
  1346                           ;main.c: 71: arrayv[i] = arrayv[i + a];
  1347  06F6  0840               	movf	_a^(0+128),w
  1348  06F7  0742               	addwf	_i^(0+128),w
  1349  06F8  00B7               	movwf	??_main^(0+128)
  1350  06F9  0737               	addwf	??_main^(0+128),w
  1351  06FA  3E10               	addlw	(low (_arrayv| (0+256)))& (0+255)
  1352  06FB  0084               	movwf	4
  1353  06FC  0800               	movf	0,w
  1354  06FD  00B8               	movwf	(??_main+1)^(0+128)
  1355  06FE  0A84               	incf	4,f
  1356  06FF  0800               	movf	0,w
  1357  0700  00B9               	movwf	((??_main+1)^(0+128)+1)
  1358  0701  0842               	movf	_i^(0+128),w
  1359  0702  00BA               	movwf	(??_main+3)^(0+128)
  1360  0703  073A               	addwf	(??_main+3)^(0+128),w
  1361  0704  3E10               	addlw	(low (_arrayv| (0+256)))& (0+255)
  1362  0705  0084               	movwf	4
  1363  0706  0838               	movf	(??_main+1)^(0+128),w
  1364  0707  0080               	movwf	0
  1365  0708  0A84               	incf	4,f
  1366  0709  0839               	movf	(??_main+2)^(0+128),w
  1367  070A  0080               	movwf	0
  1368                           
  1369                           ;main.c: 72: printf("[%2u] %5u-%u,\t\t", i, 0xFFFF - arrayv[i], array[i]);
  1370  070B  30FC               	movlw	low (STR_5| (0+32768))
  1371  070C  00A0               	movwf	printf@f^(0+128)
  1372  070D  3088               	movlw	high (STR_5| (0+32768))
  1373  070E  00A1               	movwf	(printf@f^(0+128)+1)
  1374  070F  0842               	movf	_i^(0+128),w
  1375  0710  00B7               	movwf	??_main^(0+128)
  1376  0711  01B8               	clrf	(??_main^(0+128)+1)
  1377  0712  0837               	movf	??_main^(0+128),w
  1378  0713  00A2               	movwf	(?_printf^(0+128)+2)
  1379  0714  0838               	movf	(??_main+1)^(0+128),w
  1380  0715  00A3               	movwf	((?_printf+1)^(0+128)+2)
  1381  0716  0842               	movf	_i^(0+128),w
  1382  0717  00B9               	movwf	(??_main+2)^(0+128)
  1383  0718  0739               	addwf	(??_main+2)^(0+128),w
  1384  0719  3E10               	addlw	(low (_arrayv| (0+256)))& (0+255)
  1385  071A  0084               	movwf	4
  1386  071B  0800               	movf	0,w
  1387  071C  00BA               	movwf	(??_main+3)^(0+128)
  1388  071D  0A84               	incf	4,f
  1389  071E  0800               	movf	0,w
  1390  071F  00BB               	movwf	((??_main+3)^(0+128)+1)
  1391  0720  09BA               	comf	(??_main+3)^(0+128),f
  1392  0721  09BB               	comf	((??_main+3)^(0+128)+1),f
  1393  0722  0ABA               	incf	(??_main+3)^(0+128),f
  1394  0723  1903               	skipnz
  1395  0724  0ABB               	incf	((??_main+3)^(0+128)+1),f
  1396  0725  083A               	movf	(??_main+3)^(0+128),w
  1397  0726  3EFF               	addlw	255
  1398  0727  00A4               	movwf	(?_printf^(0+128)+4)
  1399  0728  083B               	movf	(??_main+4)^(0+128),w
  1400  0729  1803               	skipnc
  1401  072A  3E01               	addlw	1
  1402  072B  3EFF               	addlw	255
  1403  072C  00A5               	movwf	((?_printf+1)^(0+128)+4)
  1404  072D  0842               	movf	_i^(0+128),w
  1405  072E  3E90               	addlw	(low (_array| (0+256)))& (0+255)
  1406  072F  0084               	movwf	4
  1407  0730  0800               	movf	0,w
  1408  0731  00BC               	movwf	(??_main+5)^(0+128)
  1409  0732  01BD               	clrf	((??_main+5)^(0+128)+1)
  1410  0733  083C               	movf	(??_main+5)^(0+128),w
  1411  0734  00A6               	movwf	(?_printf^(0+128)+6)
  1412  0735  083D               	movf	(??_main+6)^(0+128),w
  1413  0736  00A7               	movwf	((?_printf+1)^(0+128)+6)
  1414  0737  120A  118A  2349  120A  118A  	fcall	_printf
  1415                           
  1416                           ;main.c: 73: printf("%5u-%u,\n\r", arrayv[i], array[i]);
  1417  073C  301A               	movlw	low (STR_6| (0+32768))
  1418  073D  1683               	bsf	3,5	;RP0=1, select bank1
  1419  073E  1303               	bcf	3,6	;RP1=0, select bank1
  1420  073F  00A0               	movwf	printf@f^(0+128)
  1421  0740  3089               	movlw	high (STR_6| (0+32768))
  1422  0741  00A1               	movwf	(printf@f^(0+128)+1)
  1423  0742  0842               	movf	_i^(0+128),w
  1424  0743  00B7               	movwf	??_main^(0+128)
  1425  0744  0737               	addwf	??_main^(0+128),w
  1426  0745  3E10               	addlw	(low (_arrayv| (0+256)))& (0+255)
  1427  0746  0084               	movwf	4
  1428  0747  1783               	bsf	3,7	;select IRP bank2
  1429  0748  0800               	movf	0,w
  1430  0749  00A2               	movwf	(?_printf^(0+128)+2)
  1431  074A  0A84               	incf	4,f
  1432  074B  0800               	movf	0,w
  1433  074C  00A3               	movwf	((?_printf+1)^(0+128)+2)
  1434  074D  0842               	movf	_i^(0+128),w
  1435  074E  3E90               	addlw	(low (_array| (0+256)))& (0+255)
  1436  074F  0084               	movwf	4
  1437  0750  0800               	movf	0,w
  1438  0751  00B8               	movwf	(??_main+1)^(0+128)
  1439  0752  01B9               	clrf	((??_main+1)^(0+128)+1)
  1440  0753  0838               	movf	(??_main+1)^(0+128),w
  1441  0754  00A4               	movwf	(?_printf^(0+128)+4)
  1442  0755  0839               	movf	(??_main+2)^(0+128),w
  1443  0756  00A5               	movwf	((?_printf+1)^(0+128)+4)
  1444  0757  120A  118A  2349  120A  118A  	fcall	_printf
  1445  075C  3001               	movlw	1
  1446  075D  1683               	bsf	3,5	;RP0=1, select bank1
  1447  075E  1303               	bcf	3,6	;RP1=0, select bank1
  1448  075F  00B7               	movwf	??_main^(0+128)
  1449  0760  0837               	movf	??_main^(0+128),w
  1450  0761  07C2               	addwf	_i^(0+128),f
  1451  0762  2EE6               	goto	l2061
  1452  0763                     l2063:	
  1453                           
  1454                           ;main.c: 74: }
  1455                           ;main.c: 75: }
  1456                           ;main.c: 76: if (c == 'i') {
  1457  0763  3069               	movlw	105
  1458  0764  0643               	xorwf	_c^(0+128),w
  1459  0765  1D03               	btfss	3,2
  1460  0766  2FB3               	goto	l2087
  1461                           
  1462                           ;main.c: 77: printf("Digitare quante volte riprodurre la sequenza: ");
  1463  0767  301C               	movlw	low (STR_12| (0+32768))
  1464  0768  00A0               	movwf	printf@f^(0+128)
  1465  0769  3088               	movlw	high (STR_12| (0+32768))
  1466  076A  00A1               	movwf	(printf@f^(0+128)+1)
  1467  076B  120A  118A  2349  120A  118A  	fcall	_printf
  1468                           
  1469                           ;main.c: 78: read_line(number, 10);
  1470  0770  300A               	movlw	10
  1471  0771  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0772  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0773  00BE               	movwf	read_line@max_len
  1474  0774  3000               	movlw	0
  1475  0775  00BF               	movwf	read_line@max_len+1
  1476  0776  30C4               	movlw	(low (_number| 0))& (0+255)
  1477  0777  120A  118A  205C  120A  118A  	fcall	_read_line
  1478                           
  1479                           ;main.c: 79: cycles = atoi(number);
  1480  077C  30C4               	movlw	(low (_number| 0))& (0+255)
  1481  077D  120A  158A  278F  120A  118A  	fcall	_atoi
  1482  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1483  0783  1303               	bcf	3,6	;RP1=0, select bank0
  1484  0784  0843               	movf	?_atoi,w
  1485  0785  1683               	bsf	3,5	;RP0=1, select bank1
  1486  0786  1303               	bcf	3,6	;RP1=0, select bank1
  1487  0787  00B7               	movwf	??_main^(0+128)
  1488  0788  0837               	movf	??_main^(0+128),w
  1489  0789  00BE               	movwf	_cycles^(0+128)
  1490                           
  1491                           ;main.c: 80: printf("Riproducendo...\n\r");
  1492  078A  30C8               	movlw	low (STR_13| (0+32768))
  1493  078B  00A0               	movwf	printf@f^(0+128)
  1494  078C  3088               	movlw	high (STR_13| (0+32768))
  1495  078D  00A1               	movwf	(printf@f^(0+128)+1)
  1496  078E  120A  118A  2349  120A  118A  	fcall	_printf
  1497                           
  1498                           ;main.c: 81: PIR1bits.TMR1IF = 0;
  1499  0793  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0794  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0795  100C               	bcf	12,0	;volatile
  1502                           
  1503                           ;main.c: 82: T1CONbits.TMR1ON = 1;
  1504  0796  1410               	bsf	16,0	;volatile
  1505                           
  1506                           ;main.c: 83: for (e = 0; e < cycles; e++) {
  1507  0797  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0798  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0799  01C1               	clrf	_e^(0+128)
  1510  079A                     l2085:	
  1511  079A  083E               	movf	_cycles^(0+128),w
  1512  079B  0241               	subwf	_e^(0+128),w
  1513  079C  1803               	btfsc	3,0
  1514  079D  2FB3               	goto	l2087
  1515                           
  1516                           ;main.c: 84: i = 0;
  1517  079E  01C2               	clrf	_i^(0+128)
  1518  079F                     l2079:	
  1519                           ;main.c: 85: while (i < b);
  1520                           
  1521  079F  083F               	movf	_b^(0+128),w
  1522  07A0  0242               	subwf	_i^(0+128),w
  1523  07A1  1C03               	skipc
  1524  07A2  2F9F               	goto	l2079
  1525                           
  1526                           ;main.c: 86: printf("Fine ciclo \n\r");
  1527  07A3  300C               	movlw	low (STR_14| (0+32768))
  1528  07A4  00A0               	movwf	printf@f^(0+128)
  1529  07A5  3089               	movlw	high (STR_14| (0+32768))
  1530  07A6  00A1               	movwf	(printf@f^(0+128)+1)
  1531  07A7  120A  118A  2349  120A  118A  	fcall	_printf
  1532  07AC  3001               	movlw	1
  1533  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  1534  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  1535  07AF  00B7               	movwf	??_main^(0+128)
  1536  07B0  0837               	movf	??_main^(0+128),w
  1537  07B1  07C1               	addwf	_e^(0+128),f
  1538  07B2  2F9A               	goto	l2085
  1539  07B3                     l2087:	
  1540                           
  1541                           ;main.c: 87: }
  1542                           ;main.c: 88: }
  1543                           ;main.c: 89: if (c == 't') {
  1544  07B3  3074               	movlw	116
  1545  07B4  0643               	xorwf	_c^(0+128),w
  1546  07B5  1D03               	btfss	3,2
  1547  07B6  2D96               	goto	l1983
  1548                           
  1549                           ;main.c: 90: printf("Resettare per uscire.\n\r");
  1550  07B7  30B0               	movlw	low (STR_15| (0+32768))
  1551  07B8  00A0               	movwf	printf@f^(0+128)
  1552  07B9  3088               	movlw	high (STR_15| (0+32768))
  1553  07BA  00A1               	movwf	(printf@f^(0+128)+1)
  1554  07BB  120A  118A  2349  120A  118A  	fcall	_printf
  1555  07C0                     l2091:	
  1556                           ;main.c: 91: while (1) {
  1557                           
  1558                           
  1559                           ;main.c: 92: PORTAbits.RA1 = !PORTBbits.RB4;
  1560  07C0  1003               	clrc
  1561  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1562  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1563  07C3  1E06               	btfss	6,4	;volatile
  1564  07C4  1403               	setc
  1565  07C5  1C03               	btfss	3,0
  1566  07C6  2FCB               	goto	u2490
  1567  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1568  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1569  07C9  1485               	bsf	5,1	;volatile
  1570  07CA  2FCE               	goto	l2093
  1571  07CB                     u2490:	
  1572  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1573  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1574  07CD  1085               	bcf	5,1	;volatile
  1575  07CE                     l2093:	
  1576                           
  1577                           ;main.c: 93: PORTAbits.RA2 = !PORTBbits.RB4;
  1578  07CE  1003               	clrc
  1579  07CF  1E06               	btfss	6,4	;volatile
  1580  07D0  1403               	setc
  1581  07D1  1C03               	btfss	3,0
  1582  07D2  2FD7               	goto	u2510
  1583  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1584  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1585  07D5  1505               	bsf	5,2	;volatile
  1586  07D6  2FC0               	goto	l2091
  1587  07D7                     u2510:	
  1588  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1589  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1590  07D9  1105               	bcf	5,2	;volatile
  1591  07DA  2FC0               	goto	l2091
  1592  07DB                     l2095:	
  1593                           ;main.c: 94: }
  1594                           ;main.c: 95: }
  1595                           ;main.c: 96: } else printf("ERRORE: digitare 'e', 'i' o 't'.\n\r");
  1596                           
  1597  07DB  3074               	movlw	low (STR_16| (0+32768))
  1598  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  1599  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  1600  07DE  00A0               	movwf	printf@f^(0+128)
  1601  07DF  3088               	movlw	high (STR_16| (0+32768))
  1602  07E0  2D90               	goto	L1
  1603  07E1                     __end_of_main:	
  1604                           
  1605                           	psect	text1
  1606  0F18                     __ptext1:	
  1607 ;; *************** function _setup_peripheals *****************
  1608 ;; Defined at:
  1609 ;;		line 100 in file "main.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         0       0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0
  1626 ;;      Totals:         0       0       0       0       0
  1627 ;;Total ram usage:        0 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    3
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _setup_peripheals
  1639  0F18                     _setup_peripheals:	
  1640                           
  1641                           ;main.c: 102: PORTA = 0;
  1642                           
  1643                           ;incstack = 0
  1644                           ; Regs used in _setup_peripheals: [wreg+status,2+status,0]
  1645  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  1647  0F1A  0185               	clrf	5	;volatile
  1648                           
  1649                           ;main.c: 103: ADCON1bits.PCFG = 0x06;
  1650  0F1B  1683               	bsf	3,5	;RP0=1, select bank1
  1651  0F1C  1303               	bcf	3,6	;RP1=0, select bank1
  1652  0F1D  081F               	movf	31,w	;volatile
  1653  0F1E  39F0               	andlw	-16
  1654  0F1F  3806               	iorlw	6
  1655  0F20  009F               	movwf	31	;volatile
  1656                           
  1657                           ;main.c: 105: TRISA = 0;
  1658  0F21  0185               	clrf	5	;volatile
  1659                           
  1660                           ;main.c: 106: TRISB = 0x10;
  1661  0F22  3010               	movlw	16
  1662  0F23  0086               	movwf	6	;volatile
  1663                           
  1664                           ;main.c: 107: TRISC = 0;
  1665  0F24  0187               	clrf	7	;volatile
  1666                           
  1667                           ;main.c: 110: INTCONbits.GIE = 1;
  1668  0F25  178B               	bsf	11,7	;volatile
  1669                           
  1670                           ;main.c: 111: INTCONbits.PEIE = 1;
  1671  0F26  170B               	bsf	11,6	;volatile
  1672                           
  1673                           ;main.c: 114: INTCONbits.RBIF = 0;
  1674  0F27  100B               	bcf	11,0	;volatile
  1675                           
  1676                           ;main.c: 115: INTCONbits.RBIE = 0;
  1677  0F28  118B               	bcf	11,3	;volatile
  1678                           
  1679                           ;main.c: 118: TRISCbits.TRISC6 = 0;
  1680  0F29  1307               	bcf	7,6	;volatile
  1681                           
  1682                           ;main.c: 119: TRISCbits.TRISC7 = 1;
  1683  0F2A  1787               	bsf	7,7	;volatile
  1684                           
  1685                           ;main.c: 120: PORTCbits.RC6 = 1;
  1686  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0F2D  1707               	bsf	7,6	;volatile
  1689                           
  1690                           ;main.c: 122: TXSTAbits.SYNC = 0;
  1691  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  1692  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  1693  0F30  1218               	bcf	24,4	;volatile
  1694                           
  1695                           ;main.c: 123: TXSTAbits.TX9 = 0;
  1696  0F31  1318               	bcf	24,6	;volatile
  1697                           
  1698                           ;main.c: 124: TXSTAbits.TXEN = 1;
  1699  0F32  1698               	bsf	24,5	;volatile
  1700                           
  1701                           ;main.c: 125: RCSTAbits.RC9 = 0;
  1702  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  1703  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  1704  0F35  1318               	bcf	24,6	;volatile
  1705                           
  1706                           ;main.c: 127: TXSTAbits.BRGH = 0;
  1707  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  1708  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  1709  0F38  1118               	bcf	24,2	;volatile
  1710                           
  1711                           ;main.c: 128: SPBRG = 15;
  1712  0F39  300F               	movlw	15
  1713  0F3A  0099               	movwf	25	;volatile
  1714                           
  1715                           ;main.c: 130: RCSTAbits.CREN = 1;
  1716  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  1717  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0F3D  1618               	bsf	24,4	;volatile
  1719                           
  1720                           ;main.c: 131: RCSTAbits.SPEN = 1;
  1721  0F3E  1798               	bsf	24,7	;volatile
  1722                           
  1723                           ;main.c: 133: PIE1bits.TXIE = 0;
  1724  0F3F  1683               	bsf	3,5	;RP0=1, select bank1
  1725  0F40  1303               	bcf	3,6	;RP1=0, select bank1
  1726  0F41  120C               	bcf	12,4	;volatile
  1727                           
  1728                           ;main.c: 134: PIE1bits.RCIE = 0;
  1729  0F42  128C               	bcf	12,5	;volatile
  1730                           
  1731                           ;main.c: 137: T1CONbits.T1CKPS = 0b11;
  1732  0F43  3030               	movlw	48
  1733  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  1734  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  1735  0F46  0490               	iorwf	16,f	;volatile
  1736                           
  1737                           ;main.c: 138: T1CONbits.T1OSCEN = 1;
  1738  0F47  1590               	bsf	16,3	;volatile
  1739                           
  1740                           ;main.c: 139: T1CONbits.TMR1CS = 0;
  1741  0F48  1090               	bcf	16,1	;volatile
  1742                           
  1743                           ;main.c: 140: T1CONbits.TMR1ON = 0;
  1744  0F49  1010               	bcf	16,0	;volatile
  1745                           
  1746                           ;main.c: 141: TMR1 = 0;
  1747  0F4A  018E               	clrf	14	;volatile
  1748  0F4B  018F               	clrf	15	;volatile
  1749                           
  1750                           ;main.c: 143: PIE1bits.TMR1IE = 1;
  1751  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  1752  0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  1753  0F4E  140C               	bsf	12,0	;volatile
  1754                           
  1755                           ;main.c: 144: PIR1bits.TMR1IF = 0;
  1756  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  1757  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  1758  0F51  100C               	bcf	12,0	;volatile
  1759  0F52  0008               	return
  1760  0F53                     __end_of_setup_peripheals:	
  1761                           
  1762                           	psect	text2
  1763  005C                     __ptext2:	
  1764 ;; *************** function _read_line *****************
  1765 ;; Defined at:
  1766 ;;		line 165 in file "main.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  s               1    wreg     PTR unsigned char 
  1769 ;;		 -> number(10), 
  1770 ;;  max_len         2   30[BANK0 ] int 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  s               1   34[BANK0 ] PTR unsigned char 
  1773 ;;		 -> number(10), 
  1774 ;;  c               1   37[BANK0 ] unsigned char 
  1775 ;;  i               2   35[BANK0 ] int 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1785 ;;      Params:         0       2       0       0       0
  1786 ;;      Locals:         0       4       0       0       0
  1787 ;;      Temps:          0       2       0       0       0
  1788 ;;      Totals:         0       8       0       0       0
  1789 ;;Total ram usage:        8 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    4
  1792 ;; This function calls:
  1793 ;;		_putch
  1794 ;;		_read_char
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function _read_line
  1802  005C                     _read_line:	
  1803                           
  1804                           ;incstack = 0
  1805                           ; Regs used in _read_line: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1806                           ;read_line@s stored from wreg
  1807  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1808  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1809  005E  00C2               	movwf	read_line@s
  1810                           
  1811                           ;main.c: 166: int i = 0;
  1812  005F  01C3               	clrf	read_line@i
  1813  0060  01C4               	clrf	read_line@i+1
  1814  0061  2876               	goto	l1591
  1815  0062                     l1595:	
  1816                           
  1817                           ;main.c: 170: putch(c);
  1818  0062  0845               	movf	read_line@c,w
  1819  0063  120A  158A  2636  120A  118A  	fcall	_putch
  1820                           
  1821                           ;main.c: 171: putch(10);
  1822  0068  300A               	movlw	10
  1823  0069  120A  158A  2636   	fcall	_putch
  1824                           
  1825                           ;main.c: 172: s[i] = 0;
  1826  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1827  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1828  006E  0843               	movf	read_line@i,w
  1829  006F  0742               	addwf	read_line@s,w
  1830  0070  00C0               	movwf	??_read_line
  1831  0071  0840               	movf	??_read_line,w
  1832  0072  0084               	movwf	4
  1833  0073  1383               	bcf	3,7	;select IRP bank0
  1834  0074  0180               	clrf	0
  1835                           
  1836                           ;main.c: 173: return;
  1837  0075  0008               	return
  1838  0076                     l1591:	
  1839                           ;main.c: 167: for (;;) {
  1840                           
  1841                           ;main.c: 174: } else if (c == 127 || c == 8) {
  1842                           
  1843                           
  1844                           ;main.c: 168: char c = read_char();
  1845  0076  120A  158A  2642  120A  118A  	fcall	_read_char
  1846  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1847  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1848  007D  00C0               	movwf	??_read_line
  1849  007E  0840               	movf	??_read_line,w
  1850  007F  00C5               	movwf	read_line@c
  1851                           
  1852                           ;main.c: 169: if (c == 13) {
  1853  0080  300D               	movlw	13
  1854  0081  0645               	xorwf	read_line@c,w
  1855  0082  1903               	btfsc	3,2
  1856  0083  2862               	goto	l1595
  1857  0084  307F               	movlw	127
  1858  0085  0645               	xorwf	read_line@c,w
  1859  0086  1903               	btfsc	3,2
  1860  0087  288C               	goto	l1607
  1861  0088  3008               	movlw	8
  1862  0089  0645               	xorwf	read_line@c,w
  1863  008A  1D03               	btfss	3,2
  1864  008B  28B5               	goto	l1613
  1865  008C                     l1607:	
  1866                           
  1867                           ;main.c: 175: if (i > 0) {
  1868  008C  0844               	movf	read_line@i+1,w
  1869  008D  3A80               	xorlw	128
  1870  008E  00FF               	movwf	127
  1871  008F  3080               	movlw	128
  1872  0090  027F               	subwf	127,w
  1873  0091  1D03               	skipz
  1874  0092  2895               	goto	u1695
  1875  0093  3001               	movlw	1
  1876  0094  0243               	subwf	read_line@i,w
  1877  0095                     u1695:	
  1878  0095  1C03               	skipc
  1879  0096  2876               	goto	l1591
  1880                           
  1881                           ;main.c: 176: putch(c);
  1882  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0099  0845               	movf	read_line@c,w
  1885  009A  120A  158A  2636  120A  118A  	fcall	_putch
  1886                           
  1887                           ;main.c: 177: putch(' ');
  1888  009F  3020               	movlw	32
  1889  00A0  120A  158A  2636  120A  118A  	fcall	_putch
  1890                           
  1891                           ;main.c: 178: putch(c);
  1892  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1893  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1894  00A7  0845               	movf	read_line@c,w
  1895  00A8  120A  158A  2636  120A  118A  	fcall	_putch
  1896                           
  1897                           ;main.c: 179: --i;
  1898  00AD  30FF               	movlw	255
  1899  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1900  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1901  00B0  07C3               	addwf	read_line@i,f
  1902  00B1  1803               	skipnc
  1903  00B2  0AC4               	incf	read_line@i+1,f
  1904  00B3  30FF               	movlw	255
  1905  00B4  28DE               	goto	L2
  1906  00B5                     l1613:	
  1907                           ;main.c: 180: }
  1908                           ;main.c: 181: } else if (c >= 32) {
  1909                           
  1910  00B5  3020               	movlw	32
  1911  00B6  0245               	subwf	read_line@c,w
  1912  00B7  1C03               	skipc
  1913  00B8  2876               	goto	l1591
  1914                           
  1915                           ;main.c: 182: if (i < max_len) {
  1916  00B9  0844               	movf	read_line@i+1,w
  1917  00BA  3A80               	xorlw	128
  1918  00BB  00C0               	movwf	??_read_line
  1919  00BC  083F               	movf	read_line@max_len+1,w
  1920  00BD  3A80               	xorlw	128
  1921  00BE  0240               	subwf	??_read_line,w
  1922  00BF  1D03               	skipz
  1923  00C0  28C3               	goto	u1715
  1924  00C1  083E               	movf	read_line@max_len,w
  1925  00C2  0243               	subwf	read_line@i,w
  1926  00C3                     u1715:	
  1927  00C3  1803               	skipnc
  1928  00C4  2876               	goto	l1591
  1929                           
  1930                           ;main.c: 183: putch(c);
  1931  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1932  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1933  00C7  0845               	movf	read_line@c,w
  1934  00C8  120A  158A  2636  120A  118A  	fcall	_putch
  1935                           
  1936                           ;main.c: 184: s[i] = c;
  1937  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1938  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1939  00CF  0845               	movf	read_line@c,w
  1940  00D0  00C0               	movwf	??_read_line
  1941  00D1  0843               	movf	read_line@i,w
  1942  00D2  0742               	addwf	read_line@s,w
  1943  00D3  00C1               	movwf	??_read_line+1
  1944  00D4  0841               	movf	??_read_line+1,w
  1945  00D5  0084               	movwf	4
  1946  00D6  0840               	movf	??_read_line,w
  1947  00D7  1383               	bcf	3,7	;select IRP bank0
  1948  00D8  0080               	movwf	0
  1949                           
  1950                           ;main.c: 185: ++i;
  1951  00D9  3001               	movlw	1
  1952  00DA  07C3               	addwf	read_line@i,f
  1953  00DB  1803               	skipnc
  1954  00DC  0AC4               	incf	read_line@i+1,f
  1955  00DD  3000               	movlw	0
  1956  00DE                     L2:	
  1957  00DE  07C4               	addwf	read_line@i+1,f
  1958                           
  1959                           ;main.c: 186: }
  1960                           ;main.c: 187: }
  1961                           ;main.c: 188: }
  1962  00DF  2876               	goto	l1591
  1963  00E0                     __end_of_read_line:	
  1964                           
  1965                           	psect	text3
  1966  0E42                     __ptext3:	
  1967 ;; *************** function _read_char *****************
  1968 ;; Defined at:
  1969 ;;		line 154 in file "main.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      unsigned char 
  1976 ;; Registers used:
  1977 ;;		wreg
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1983 ;;      Params:         0       0       0       0       0
  1984 ;;      Locals:         0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0
  1986 ;;      Totals:         0       0       0       0       0
  1987 ;;Total ram usage:        0 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    3
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;;		_read_line
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           
  1999                           ;psect for function _read_char
  2000  0E42                     _read_char:	
  2001  0E42                     l112:	
  2002                           ;main.c: 155: while (PIR1bits.RCIF == 0) {
  2003                           
  2004                           ;incstack = 0
  2005                           ; Regs used in _read_char: [wreg]
  2006                           
  2007  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  2008  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0E44  1A8C               	btfsc	12,5	;volatile
  2010  0E45  2E4C               	goto	l1285
  2011                           
  2012                           ;main.c: 156: if (RCSTAbits.OERR == 1) {
  2013  0E46  1C98               	btfss	24,1	;volatile
  2014  0E47  2E42               	goto	l112
  2015                           
  2016                           ;main.c: 157: RCSTAbits.OERR = 0;
  2017  0E48  1098               	bcf	24,1	;volatile
  2018                           
  2019                           ;main.c: 158: RCSTAbits.CREN = 0;
  2020  0E49  1218               	bcf	24,4	;volatile
  2021                           
  2022                           ;main.c: 159: RCSTAbits.CREN = 1;
  2023  0E4A  1618               	bsf	24,4	;volatile
  2024  0E4B  2E42               	goto	l112
  2025  0E4C                     l1285:	
  2026                           
  2027                           ;main.c: 160: }
  2028                           ;main.c: 161: }
  2029                           ;main.c: 162: return RCREG;
  2030  0E4C  081A               	movf	26,w	;volatile
  2031  0E4D  0008               	return
  2032  0E4E                     __end_of_read_char:	
  2033                           
  2034                           	psect	text4
  2035  0349                     __ptext4:	
  2036 ;; *************** function _printf *****************
  2037 ;; Defined at:
  2038 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  f               2    0[BANK1 ] PTR const unsigned char 
  2041 ;;		 -> STR_18(6), STR_17(17), STR_16(35), STR_15(24), 
  2042 ;;		 -> STR_14(14), STR_13(18), STR_12(47), STR_11(10), 
  2043 ;;		 -> STR_10(16), STR_9(7), STR_8(9), STR_7(25), 
  2044 ;;		 -> STR_6(10), STR_5(16), STR_4(17), STR_3(5), 
  2045 ;;		 -> STR_2(41), STR_1(8), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  tmpval          4    0        struct .
  2048 ;;  width           2   16[BANK1 ] int 
  2049 ;;  len             2   14[BANK1 ] unsigned int 
  2050 ;;  val             2   10[BANK1 ] unsigned int 
  2051 ;;  c               1   18[BANK1 ] char 
  2052 ;;  ap              1   13[BANK1 ] PTR void [1]
  2053 ;;		 -> ?i1_printf(2), ?_printf(2), 
  2054 ;;  prec            1   12[BANK1 ] char 
  2055 ;;  cp              1    9[BANK1 ] PTR const unsigned char 
  2056 ;;		 -> printf@c(1), 
  2057 ;;  flag            1    8[BANK1 ] unsigned char 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  2    0[BANK1 ] int 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       0       8       0       0
  2068 ;;      Locals:         0       0      11       0       0
  2069 ;;      Temps:          0       3       0       0       0
  2070 ;;      Totals:         0       3      19       0       0
  2071 ;;Total ram usage:       22 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    4
  2074 ;; This function calls:
  2075 ;;		___lwdiv
  2076 ;;		___lwmod
  2077 ;;		___wmul
  2078 ;;		_isdigit
  2079 ;;		_putch
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _printf
  2087  0349                     _printf:	
  2088                           
  2089                           ;doprnt.c: 466: va_list ap;
  2090                           ;doprnt.c: 499: signed char c;
  2091                           ;doprnt.c: 501: int width;
  2092                           ;doprnt.c: 506: signed char prec;
  2093                           ;doprnt.c: 508: unsigned char flag;
  2094                           ;doprnt.c: 523: union {
  2095                           ;doprnt.c: 524: unsigned long vd;
  2096                           ;doprnt.c: 525: double integ;
  2097                           ;doprnt.c: 526: } tmpval;
  2098                           ;doprnt.c: 528: unsigned int val;
  2099                           ;doprnt.c: 529: unsigned len;
  2100                           ;doprnt.c: 530: const char * cp;
  2101                           ;doprnt.c: 533: *ap = __va_start();
  2102                           
  2103                           ;incstack = 0
  2104                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2105  0349  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2106  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2107  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2108  034C  00CB               	movwf	??_printf
  2109  034D  084B               	movf	??_printf,w
  2110  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2111  034F  1303               	bcf	3,6	;RP1=0, select bank1
  2112  0350  00AD               	movwf	printf@ap^(0+128)
  2113  0351                     l1977:	
  2114                           ;doprnt.c: 536: while(c = *f++) {
  2115                           
  2116  0351  1683               	bsf	3,5	;RP0=1, select bank1
  2117  0352  1303               	bcf	3,6	;RP1=0, select bank1
  2118  0353  0821               	movf	(printf@f+1)^(0+128),w
  2119  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0356  00CC               	movwf	??_printf+1
  2122  0357  1683               	bsf	3,5	;RP0=1, select bank1
  2123  0358  1303               	bcf	3,6	;RP1=0, select bank1
  2124  0359  0820               	movf	printf@f^(0+128),w
  2125  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2126  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2127  035C  00CB               	movwf	??_printf
  2128  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2129  035E  1303               	bcf	3,6	;RP1=0, select bank1
  2130  035F  0AA0               	incf	printf@f^(0+128),f
  2131  0360  1903               	skipnz
  2132  0361  0AA1               	incf	(printf@f+1)^(0+128),f
  2133  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0363  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0364  084C               	movf	??_printf+1,w
  2136  0365  00FF               	movwf	127
  2137  0366  084B               	movf	??_printf,w
  2138  0367  0084               	movwf	4
  2139  0368  120A  158A  2000  120A  118A  	fcall	stringtab
  2140  036D  00CD               	movwf	??_printf+2
  2141  036E  084D               	movf	??_printf+2,w
  2142  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2143  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2144  0371  00B2               	movwf	printf@c^(0+128)
  2145  0372  0832               	movf	printf@c^(0+128),w
  2146  0373  1903               	btfsc	3,2
  2147  0374  0008               	return
  2148                           
  2149                           ;doprnt.c: 538: if(c != '%')
  2150  0375  3025               	movlw	37
  2151  0376  0632               	xorwf	printf@c^(0+128),w
  2152  0377  1903               	btfsc	3,2
  2153  0378  2B80               	goto	l1897
  2154                           
  2155                           ;doprnt.c: 540: {
  2156                           ;doprnt.c: 541: (putch(c) );
  2157  0379  0832               	movf	printf@c^(0+128),w
  2158  037A  120A  158A  2636  120A  118A  	fcall	_putch
  2159                           
  2160                           ;doprnt.c: 542: continue;
  2161  037F  2B51               	goto	l1977
  2162  0380                     l1897:	
  2163                           
  2164                           ;doprnt.c: 543: }
  2165                           ;doprnt.c: 546: width = 0;
  2166  0380  1683               	bsf	3,5	;RP0=1, select bank1
  2167  0381  1303               	bcf	3,6	;RP1=0, select bank1
  2168  0382  01B0               	clrf	printf@width^(0+128)
  2169  0383  01B1               	clrf	(printf@width+1)^(0+128)
  2170                           
  2171                           ;doprnt.c: 548: flag = 0;
  2172  0384  01A8               	clrf	printf@flag^(0+128)
  2173                           
  2174                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2175  0385  0821               	movf	(printf@f+1)^(0+128),w
  2176  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2177  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2178  0388  00FF               	movwf	127
  2179  0389  1683               	bsf	3,5	;RP0=1, select bank1
  2180  038A  1303               	bcf	3,6	;RP1=0, select bank1
  2181  038B  0820               	movf	printf@f^(0+128),w
  2182  038C  0084               	movwf	4
  2183  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2184  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2185  038F  120A  158A  2000  120A  118A  	fcall	stringtab
  2186  0394  120A  158A  265C  120A  118A  	fcall	_isdigit
  2187  0399  1C03               	btfss	3,0
  2188  039A  2C6C               	goto	l1939
  2189                           
  2190                           ;doprnt.c: 598: width = 0;
  2191  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2192  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2193  039D  01B0               	clrf	printf@width^(0+128)
  2194  039E  01B1               	clrf	(printf@width+1)^(0+128)
  2195  039F                     l1903:	
  2196                           ;doprnt.c: 599: do {
  2197                           
  2198                           
  2199                           ;doprnt.c: 600: width *= 10;
  2200  039F  300A               	movlw	10
  2201  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2202  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2203  03A2  00BD               	movwf	___wmul@multiplier
  2204  03A3  3000               	movlw	0
  2205  03A4  00BE               	movwf	___wmul@multiplier+1
  2206  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  2207  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  2208  03A7  0831               	movf	(printf@width+1)^(0+128),w
  2209  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2210  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2211  03AA  00C0               	movwf	___wmul@multiplicand+1
  2212  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  2213  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  2214  03AD  0830               	movf	printf@width^(0+128),w
  2215  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2216  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2217  03B0  00BF               	movwf	___wmul@multiplicand
  2218  03B1  120A  158A  268D  120A  118A  	fcall	___wmul
  2219  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2220  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2221  03B8  083E               	movf	?___wmul+1,w
  2222  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2223  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2224  03BB  00B1               	movwf	(printf@width+1)^(0+128)
  2225  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2226  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2227  03BE  083D               	movf	?___wmul,w
  2228  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2229  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2230  03C1  00B0               	movwf	printf@width^(0+128)
  2231                           
  2232                           ;doprnt.c: 601: width += *f++ - '0';
  2233  03C2  0821               	movf	(printf@f+1)^(0+128),w
  2234  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2235  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2236  03C5  00FF               	movwf	127
  2237  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2238  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2239  03C8  0820               	movf	printf@f^(0+128),w
  2240  03C9  0084               	movwf	4
  2241  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2242  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2243  03CC  120A  158A  2000  120A  118A  	fcall	stringtab
  2244  03D1  3ED0               	addlw	208
  2245  03D2  00CB               	movwf	??_printf
  2246  03D3  30FF               	movlw	255
  2247  03D4  1803               	skipnc
  2248  03D5  3000               	movlw	0
  2249  03D6  00CC               	movwf	??_printf+1
  2250  03D7  084B               	movf	??_printf,w
  2251  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2252  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2253  03DA  07B0               	addwf	printf@width^(0+128),f
  2254  03DB  1803               	skipnc
  2255  03DC  0AB1               	incf	(printf@width+1)^(0+128),f
  2256  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2257  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2258  03DF  084C               	movf	??_printf+1,w
  2259  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2260  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2261  03E2  07B1               	addwf	(printf@width+1)^(0+128),f
  2262  03E3  3001               	movlw	1
  2263  03E4  07A0               	addwf	printf@f^(0+128),f
  2264  03E5  1803               	skipnc
  2265  03E6  0AA1               	incf	(printf@f+1)^(0+128),f
  2266                           
  2267                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2268  03E7  0821               	movf	(printf@f+1)^(0+128),w
  2269  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2270  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2271  03EA  00FF               	movwf	127
  2272  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2273  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2274  03ED  0820               	movf	printf@f^(0+128),w
  2275  03EE  0084               	movwf	4
  2276  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2277  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2278  03F1  120A  158A  2000  120A  118A  	fcall	stringtab
  2279  03F6  120A  158A  265C  120A  118A  	fcall	_isdigit
  2280  03FB  1C03               	btfss	3,0
  2281  03FC  2C6C               	goto	l1939
  2282  03FD  2B9F               	goto	l1903
  2283  03FE                     l1911:	
  2284                           ;doprnt.c: 750: dostring:
  2285                           
  2286                           ;doprnt.c: 638: goto alldone;
  2287                           
  2288                           ;doprnt.c: 637: case 0:
  2289                           
  2290                           ;doprnt.c: 608: }
  2291                           ;doprnt.c: 635: switch(c = *f++) {
  2292                           
  2293                           
  2294                           ;doprnt.c: 757: if(width > len)
  2295  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2296  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2297  0400  0831               	movf	(printf@width+1)^(0+128),w
  2298  0401  022F               	subwf	(printf@len+1)^(0+128),w
  2299  0402  1D03               	skipz
  2300  0403  2C06               	goto	u2225
  2301  0404  0830               	movf	printf@width^(0+128),w
  2302  0405  022E               	subwf	printf@len^(0+128),w
  2303  0406                     u2225:	
  2304  0406  1803               	skipnc
  2305  0407  2C0F               	goto	l1915
  2306                           
  2307                           ;doprnt.c: 758: width -= len;
  2308  0408  082E               	movf	printf@len^(0+128),w
  2309  0409  02B0               	subwf	printf@width^(0+128),f
  2310  040A  082F               	movf	(printf@len+1)^(0+128),w
  2311  040B  1C03               	skipc
  2312  040C  03B1               	decf	(printf@width+1)^(0+128),f
  2313  040D  02B1               	subwf	(printf@width+1)^(0+128),f
  2314  040E  2C11               	goto	l1919
  2315  040F                     l1915:	
  2316                           
  2317                           ;doprnt.c: 759: else
  2318                           ;doprnt.c: 760: width = 0;
  2319  040F  01B0               	clrf	printf@width^(0+128)
  2320  0410  01B1               	clrf	(printf@width+1)^(0+128)
  2321  0411                     l1919:	
  2322                           ;doprnt.c: 764: while(width--)
  2323                           
  2324  0411  30FF               	movlw	255
  2325  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2326  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2327  0414  07B0               	addwf	printf@width^(0+128),f
  2328  0415  1803               	skipnc
  2329  0416  0AB1               	incf	(printf@width+1)^(0+128),f
  2330  0417  30FF               	movlw	255
  2331  0418  07B1               	addwf	(printf@width+1)^(0+128),f
  2332  0419  0A30               	incf	printf@width^(0+128),w
  2333  041A  1903               	btfsc	3,2
  2334  041B  0A31               	incf	(printf@width+1)^(0+128),w
  2335  041C  1903               	btfsc	3,2
  2336  041D  2C36               	goto	l1925
  2337                           
  2338                           ;doprnt.c: 765: (putch(' ') );
  2339  041E  3020               	movlw	32
  2340  041F  120A  158A  2636  120A  118A  	fcall	_putch
  2341  0424  2C11               	goto	l1919
  2342  0425                     l1921:	
  2343                           ;doprnt.c: 767: while(len--)
  2344                           
  2345                           
  2346                           ;doprnt.c: 768: (putch(*cp++) );
  2347  0425  0829               	movf	printf@cp^(0+128),w
  2348  0426  0084               	movwf	4
  2349  0427  1383               	bcf	3,7	;select IRP bank0
  2350  0428  0800               	movf	0,w
  2351  0429  120A  158A  2636  120A  118A  	fcall	_putch
  2352  042E  3001               	movlw	1
  2353  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0431  00CB               	movwf	??_printf
  2356  0432  084B               	movf	??_printf,w
  2357  0433  1683               	bsf	3,5	;RP0=1, select bank1
  2358  0434  1303               	bcf	3,6	;RP1=0, select bank1
  2359  0435  07A9               	addwf	printf@cp^(0+128),f
  2360  0436                     l1925:	
  2361  0436  3001               	movlw	1
  2362  0437  02AE               	subwf	printf@len^(0+128),f
  2363  0438  3000               	movlw	0
  2364  0439  1C03               	skipc
  2365  043A  03AF               	decf	(printf@len+1)^(0+128),f
  2366  043B  02AF               	subwf	(printf@len+1)^(0+128),f
  2367  043C  0A2E               	incf	printf@len^(0+128),w
  2368  043D  1D03               	skipz
  2369  043E  2C25               	goto	l1921
  2370  043F  0A2F               	incf	(printf@len+1)^(0+128),w
  2371  0440  1903               	btfsc	3,2
  2372  0441  2B51               	goto	l1977
  2373  0442  2C25               	goto	l1921
  2374  0443                     l1927:	
  2375                           ;doprnt.c: 784: case 'c':
  2376                           
  2377                           ;doprnt.c: 774: continue;
  2378                           
  2379                           
  2380                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  2381  0443  082D               	movf	printf@ap^(0+128),w
  2382  0444  0084               	movwf	4
  2383  0445  1383               	bcf	3,7	;select IRP bank0
  2384  0446  0800               	movf	0,w
  2385  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0449  00CB               	movwf	??_printf
  2388  044A  084B               	movf	??_printf,w
  2389  044B  1683               	bsf	3,5	;RP0=1, select bank1
  2390  044C  1303               	bcf	3,6	;RP1=0, select bank1
  2391  044D  00B2               	movwf	printf@c^(0+128)
  2392  044E  3002               	movlw	2
  2393  044F  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0450  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0451  00CB               	movwf	??_printf
  2396  0452  084B               	movf	??_printf,w
  2397  0453  1683               	bsf	3,5	;RP0=1, select bank1
  2398  0454  1303               	bcf	3,6	;RP1=0, select bank1
  2399  0455  07AD               	addwf	printf@ap^(0+128),f
  2400  0456                     l1931:	
  2401                           ;doprnt.c: 802: default:
  2402                           
  2403                           
  2404                           ;doprnt.c: 805: cp = (char *)&c;
  2405  0456  30B2               	movlw	(low (printf@c| 0))& (0+255)
  2406  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0458  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0459  00CB               	movwf	??_printf
  2409  045A  084B               	movf	??_printf,w
  2410  045B  1683               	bsf	3,5	;RP0=1, select bank1
  2411  045C  1303               	bcf	3,6	;RP1=0, select bank1
  2412  045D  00A9               	movwf	printf@cp^(0+128)
  2413                           
  2414                           ;doprnt.c: 806: len = 1;
  2415  045E  3001               	movlw	1
  2416  045F  00AE               	movwf	printf@len^(0+128)
  2417  0460  3000               	movlw	0
  2418  0461  00AF               	movwf	(printf@len^(0+128)+1)
  2419                           
  2420                           ;doprnt.c: 807: goto dostring;
  2421  0462  2BFE               	goto	l1911
  2422  0463                     l1935:	
  2423                           ;doprnt.c: 817: case 'u':
  2424                           
  2425                           
  2426                           ;doprnt.c: 818: flag |= 0xC0;
  2427  0463  30C0               	movlw	192
  2428  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2429  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2430  0466  00CB               	movwf	??_printf
  2431  0467  084B               	movf	??_printf,w
  2432  0468  1683               	bsf	3,5	;RP0=1, select bank1
  2433  0469  1303               	bcf	3,6	;RP1=0, select bank1
  2434  046A  04A8               	iorwf	printf@flag^(0+128),f
  2435                           
  2436                           ;doprnt.c: 822: }
  2437                           
  2438                           ;doprnt.c: 819: break;
  2439  046B  2C95               	goto	l1941
  2440  046C                     l1939:	
  2441  046C  1683               	bsf	3,5	;RP0=1, select bank1
  2442  046D  1303               	bcf	3,6	;RP1=0, select bank1
  2443  046E  0821               	movf	(printf@f+1)^(0+128),w
  2444  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0471  00CC               	movwf	??_printf+1
  2447  0472  1683               	bsf	3,5	;RP0=1, select bank1
  2448  0473  1303               	bcf	3,6	;RP1=0, select bank1
  2449  0474  0820               	movf	printf@f^(0+128),w
  2450  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0477  00CB               	movwf	??_printf
  2453  0478  1683               	bsf	3,5	;RP0=1, select bank1
  2454  0479  1303               	bcf	3,6	;RP1=0, select bank1
  2455  047A  0AA0               	incf	printf@f^(0+128),f
  2456  047B  1903               	skipnz
  2457  047C  0AA1               	incf	(printf@f+1)^(0+128),f
  2458  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2459  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2460  047F  084C               	movf	??_printf+1,w
  2461  0480  00FF               	movwf	127
  2462  0481  084B               	movf	??_printf,w
  2463  0482  0084               	movwf	4
  2464  0483  120A  158A  2000  120A  118A  	fcall	stringtab
  2465  0488  1683               	bsf	3,5	;RP0=1, select bank1
  2466  0489  1303               	bcf	3,6	;RP1=0, select bank1
  2467  048A  00B2               	movwf	printf@c^(0+128)
  2468                           
  2469                           ; Switch size 1, requested type "space"
  2470                           ; Number of cases is 3, Range of values is 0 to 117
  2471                           ; switch strategies available:
  2472                           ; Name         Instructions Cycles
  2473                           ; simple_byte           10     6 (average)
  2474                           ; jumptable            260     6 (fixed)
  2475                           ;	Chosen strategy is simple_byte
  2476  048B  3A00               	xorlw	0	; case 0
  2477  048C  1903               	skipnz
  2478  048D  2D85               	goto	l187
  2479  048E  3A63               	xorlw	99	; case 99
  2480  048F  1903               	skipnz
  2481  0490  2C43               	goto	l1927
  2482  0491  3A16               	xorlw	22	; case 117
  2483  0492  1903               	skipnz
  2484  0493  2C63               	goto	l1935
  2485  0494  2C56               	goto	l1931
  2486  0495                     l1941:	
  2487                           
  2488                           ;doprnt.c: 1273: {
  2489                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2490  0495  082D               	movf	printf@ap^(0+128),w
  2491  0496  0084               	movwf	4
  2492  0497  1383               	bcf	3,7	;select IRP bank0
  2493  0498  0800               	movf	0,w
  2494  0499  00AA               	movwf	printf@val^(0+128)
  2495  049A  0A84               	incf	4,f
  2496  049B  0800               	movf	0,w
  2497  049C  00AB               	movwf	(printf@val+1)^(0+128)
  2498  049D  3002               	movlw	2
  2499  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2500  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2501  04A0  00CB               	movwf	??_printf
  2502  04A1  084B               	movf	??_printf,w
  2503  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2504  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  2505  04A4  07AD               	addwf	printf@ap^(0+128),f
  2506                           
  2507                           ;doprnt.c: 1287: }
  2508                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2509  04A5  01B2               	clrf	printf@c^(0+128)
  2510  04A6  0AB2               	incf	printf@c^(0+128),f
  2511  04A7  3005               	movlw	5
  2512  04A8  0632               	xorwf	printf@c^(0+128),w
  2513  04A9  1903               	btfsc	3,2
  2514  04AA  2CDC               	goto	l1957
  2515  04AB                     l1951:	
  2516                           
  2517                           ;doprnt.c: 1306: if(val < dpowers[c])
  2518  04AB  0832               	movf	printf@c^(0+128),w
  2519  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2520  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2521  04AE  00CB               	movwf	??_printf
  2522  04AF  074B               	addwf	??_printf,w
  2523  04B0  3E12               	addlw	low (_dpowers| (0+32768))
  2524  04B1  0084               	movwf	4
  2525  04B2  3088               	movlw	high (_dpowers| (0+32768))
  2526  04B3  1803               	skipnc
  2527  04B4  3E01               	addlw	1
  2528  04B5  00FF               	movwf	127
  2529  04B6  120A  158A  2000  120A  118A  	fcall	stringtab
  2530  04BB  00CC               	movwf	??_printf+1
  2531  04BC  120A  158A  2000  120A  118A  	fcall	stringtab
  2532  04C1  00CD               	movwf	??_printf+2
  2533  04C2  084D               	movf	??_printf+2,w
  2534  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2535  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2536  04C5  022B               	subwf	(printf@val+1)^(0+128),w
  2537  04C6  1D03               	skipz
  2538  04C7  2CCE               	goto	u2265
  2539  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2540  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2541  04CA  084C               	movf	??_printf+1,w
  2542  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  2543  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  2544  04CD  022A               	subwf	printf@val^(0+128),w
  2545  04CE                     u2265:	
  2546  04CE  1C03               	btfss	3,0
  2547  04CF  2CDC               	goto	l1957
  2548                           
  2549                           ;doprnt.c: 1307: break;
  2550  04D0  3001               	movlw	1
  2551  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2552  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2553  04D3  00CB               	movwf	??_printf
  2554  04D4  084B               	movf	??_printf,w
  2555  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2556  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2557  04D7  07B2               	addwf	printf@c^(0+128),f
  2558  04D8  3005               	movlw	5
  2559  04D9  0632               	xorwf	printf@c^(0+128),w
  2560  04DA  1D03               	btfss	3,2
  2561  04DB  2CAB               	goto	l1951
  2562  04DC                     l1957:	
  2563                           
  2564                           ;doprnt.c: 1381: if(width > c)
  2565  04DC  0832               	movf	printf@c^(0+128),w
  2566  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2567  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2568  04DF  00CB               	movwf	??_printf
  2569  04E0  01CC               	clrf	??_printf+1
  2570  04E1  1BCB               	btfsc	??_printf,7
  2571  04E2  03CC               	decf	??_printf+1,f
  2572  04E3  084C               	movf	??_printf+1,w
  2573  04E4  3A80               	xorlw	128
  2574  04E5  00CD               	movwf	??_printf+2
  2575  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  2576  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  2577  04E8  0831               	movf	(printf@width+1)^(0+128),w
  2578  04E9  3A80               	xorlw	128
  2579  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2580  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2581  04EC  024D               	subwf	??_printf+2,w
  2582  04ED  1D03               	skipz
  2583  04EE  2CF5               	goto	u2285
  2584  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2585  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  2586  04F1  0830               	movf	printf@width^(0+128),w
  2587  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2588  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2589  04F4  024B               	subwf	??_printf,w
  2590  04F5                     u2285:	
  2591  04F5  1803               	skipnc
  2592  04F6  2D0D               	goto	l1961
  2593                           
  2594                           ;doprnt.c: 1382: width -= c;
  2595  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  2596  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  2597  04F9  0832               	movf	printf@c^(0+128),w
  2598  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2599  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2600  04FC  00CB               	movwf	??_printf
  2601  04FD  01CC               	clrf	??_printf+1
  2602  04FE  1BCB               	btfsc	??_printf,7
  2603  04FF  03CC               	decf	??_printf+1,f
  2604  0500  084B               	movf	??_printf,w
  2605  0501  1683               	bsf	3,5	;RP0=1, select bank1
  2606  0502  1303               	bcf	3,6	;RP1=0, select bank1
  2607  0503  02B0               	subwf	printf@width^(0+128),f
  2608  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2609  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2610  0506  084C               	movf	??_printf+1,w
  2611  0507  1683               	bsf	3,5	;RP0=1, select bank1
  2612  0508  1303               	bcf	3,6	;RP1=0, select bank1
  2613  0509  1C03               	skipc
  2614  050A  03B1               	decf	(printf@width+1)^(0+128),f
  2615  050B  02B1               	subwf	(printf@width+1)^(0+128),f
  2616  050C  2D11               	goto	l1963
  2617  050D                     l1961:	
  2618                           
  2619                           ;doprnt.c: 1383: else
  2620                           ;doprnt.c: 1384: width = 0;
  2621  050D  1683               	bsf	3,5	;RP0=1, select bank1
  2622  050E  1303               	bcf	3,6	;RP1=0, select bank1
  2623  050F  01B0               	clrf	printf@width^(0+128)
  2624  0510  01B1               	clrf	(printf@width+1)^(0+128)
  2625  0511                     l1963:	
  2626                           
  2627                           ;doprnt.c: 1422: {
  2628                           ;doprnt.c: 1424: if(width
  2629                           ;doprnt.c: 1428: )
  2630  0511  0830               	movf	printf@width^(0+128),w
  2631  0512  0431               	iorwf	(printf@width+1)^(0+128),w
  2632  0513  1903               	btfsc	3,2
  2633  0514  2D27               	goto	l1969
  2634  0515                     l1965:	
  2635                           ;doprnt.c: 1429: do
  2636                           
  2637                           
  2638                           ;doprnt.c: 1430: (putch(' ') );
  2639  0515  3020               	movlw	32
  2640  0516  120A  158A  2636  120A  118A  	fcall	_putch
  2641                           
  2642                           ;doprnt.c: 1431: while(--width);
  2643  051B  30FF               	movlw	255
  2644  051C  1683               	bsf	3,5	;RP0=1, select bank1
  2645  051D  1303               	bcf	3,6	;RP1=0, select bank1
  2646  051E  07B0               	addwf	printf@width^(0+128),f
  2647  051F  1803               	skipnc
  2648  0520  0AB1               	incf	(printf@width+1)^(0+128),f
  2649  0521  30FF               	movlw	255
  2650  0522  07B1               	addwf	(printf@width+1)^(0+128),f
  2651  0523  0830               	movf	printf@width^(0+128),w
  2652  0524  0431               	iorwf	(printf@width+1)^(0+128),w
  2653  0525  1D03               	btfss	3,2
  2654  0526  2D15               	goto	l1965
  2655  0527                     l1969:	
  2656                           
  2657                           ;doprnt.c: 1469: }
  2658                           ;doprnt.c: 1472: prec = c;
  2659  0527  0832               	movf	printf@c^(0+128),w
  2660  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2662  052A  00CB               	movwf	??_printf
  2663  052B  084B               	movf	??_printf,w
  2664  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2665  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2666  052E  00AC               	movwf	printf@prec^(0+128)
  2667  052F                     l1975:	
  2668                           ;doprnt.c: 1474: while(prec--) {
  2669                           
  2670  052F  30FF               	movlw	255
  2671  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2672  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2673  0532  00CB               	movwf	??_printf
  2674  0533  084B               	movf	??_printf,w
  2675  0534  1683               	bsf	3,5	;RP0=1, select bank1
  2676  0535  1303               	bcf	3,6	;RP1=0, select bank1
  2677  0536  07AC               	addwf	printf@prec^(0+128),f
  2678  0537  0A2C               	incf	printf@prec^(0+128),w
  2679  0538  1903               	btfsc	3,2
  2680  0539  2B51               	goto	l1977
  2681                           
  2682                           ;doprnt.c: 1478: {
  2683                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2684  053A  300A               	movlw	10
  2685  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2686  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2687  053D  00C5               	movwf	___lwmod@divisor
  2688  053E  3000               	movlw	0
  2689  053F  00C6               	movwf	___lwmod@divisor+1
  2690  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2691  0541  1303               	bcf	3,6	;RP1=0, select bank1
  2692  0542  082C               	movf	printf@prec^(0+128),w
  2693  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2695  0545  00CB               	movwf	??_printf
  2696  0546  074B               	addwf	??_printf,w
  2697  0547  3E12               	addlw	low (_dpowers| (0+32768))
  2698  0548  0084               	movwf	4
  2699  0549  3088               	movlw	high (_dpowers| (0+32768))
  2700  054A  1803               	skipnc
  2701  054B  3E01               	addlw	1
  2702  054C  00FF               	movwf	127
  2703  054D  120A  158A  2000  120A  118A  	fcall	stringtab
  2704  0552  00BD               	movwf	___lwdiv@divisor
  2705  0553  120A  158A  2000  120A  118A  	fcall	stringtab
  2706  0558  00BE               	movwf	___lwdiv@divisor+1
  2707  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2708  055A  1303               	bcf	3,6	;RP1=0, select bank1
  2709  055B  082B               	movf	(printf@val+1)^(0+128),w
  2710  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2711  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2712  055E  00C0               	movwf	___lwdiv@dividend+1
  2713  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2714  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0561  082A               	movf	printf@val^(0+128),w
  2716  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0564  00BF               	movwf	___lwdiv@dividend
  2719  0565  120A  118A  201E  120A  118A  	fcall	___lwdiv
  2720  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2721  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2722  056C  083E               	movf	?___lwdiv+1,w
  2723  056D  00C8               	movwf	___lwmod@dividend+1
  2724  056E  083D               	movf	?___lwdiv,w
  2725  056F  00C7               	movwf	___lwmod@dividend
  2726  0570  120A  158A  26E4  120A  118A  	fcall	___lwmod
  2727  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2729  0577  0845               	movf	?___lwmod,w
  2730  0578  3E30               	addlw	48
  2731  0579  00CC               	movwf	??_printf+1
  2732  057A  084C               	movf	??_printf+1,w
  2733  057B  1683               	bsf	3,5	;RP0=1, select bank1
  2734  057C  1303               	bcf	3,6	;RP1=0, select bank1
  2735  057D  00B2               	movwf	printf@c^(0+128)
  2736                           
  2737                           ;doprnt.c: 1523: }
  2738                           ;doprnt.c: 1524: (putch(c) );
  2739  057E  0832               	movf	printf@c^(0+128),w
  2740  057F  120A  158A  2636  120A  118A  	fcall	_putch
  2741  0584  2D2F               	goto	l1975
  2742  0585                     l187:	
  2743                           ;doprnt.c: 1540: return 0;
  2744                           ;	Return value of _printf is never used
  2745                           
  2746                           ;doprnt.c: 1525: }
  2747                           ;doprnt.c: 1533: }
  2748                           ;doprnt.c: 1535: alldone:
  2749                           
  2750  0585  0008               	return
  2751  0586                     __end_of_printf:	
  2752                           
  2753                           	psect	text5
  2754  0E36                     __ptext5:	
  2755 ;; *************** function _putch *****************
  2756 ;; Defined at:
  2757 ;;		line 147 in file "main.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  c               1    wreg     unsigned char 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  c               1   29[BANK0 ] unsigned char 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2771 ;;      Params:         0       0       0       0       0
  2772 ;;      Locals:         0       1       0       0       0
  2773 ;;      Temps:          0       0       0       0       0
  2774 ;;      Totals:         0       1       0       0       0
  2775 ;;Total ram usage:        1 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    3
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_read_line
  2782 ;;		_printf
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _putch
  2788  0E36                     _putch:	
  2789                           
  2790                           ;incstack = 0
  2791                           ; Regs used in _putch: [wreg]
  2792                           ;putch@c stored from wreg
  2793  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0E37  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0E38  00BD               	movwf	putch@c
  2796  0E39                     l106:	
  2797                           ;main.c: 149: while (TXSTAbits.TRMT == 0) {
  2798                           
  2799  0E39  1683               	bsf	3,5	;RP0=1, select bank1
  2800  0E3A  1303               	bcf	3,6	;RP1=0, select bank1
  2801  0E3B  1C98               	btfss	24,1	;volatile
  2802  0E3C  2E39               	goto	l106
  2803                           
  2804                           ;main.c: 150: };
  2805                           ;main.c: 151: TXREG = c;
  2806  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  2807  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  2808  0E3F  083D               	movf	putch@c,w
  2809  0E40  0099               	movwf	25	;volatile
  2810  0E41  0008               	return
  2811  0E42                     __end_of_putch:	
  2812                           
  2813                           	psect	text6
  2814  0EE4                     __ptext6:	
  2815 ;; *************** function ___lwmod *****************
  2816 ;; Defined at:
  2817 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  divisor         2   37[BANK0 ] unsigned int 
  2820 ;;  dividend        2   39[BANK0 ] unsigned int 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  counter         1   42[BANK0 ] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  2   37[BANK0 ] unsigned int 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2832 ;;      Params:         0       4       0       0       0
  2833 ;;      Locals:         0       1       0       0       0
  2834 ;;      Temps:          0       1       0       0       0
  2835 ;;      Totals:         0       6       0       0       0
  2836 ;;Total ram usage:        6 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    3
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_printf
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function ___lwmod
  2848  0EE4                     ___lwmod:	
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2852  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  2853  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  2854  0EE6  0845               	movf	___lwmod@divisor,w
  2855  0EE7  0446               	iorwf	___lwmod@divisor+1,w
  2856  0EE8  1903               	btfsc	3,2
  2857  0EE9  2F13               	goto	l1363
  2858  0EEA  01CA               	clrf	___lwmod@counter
  2859  0EEB  0ACA               	incf	___lwmod@counter,f
  2860  0EEC                     l1353:	
  2861  0EEC  1BC6               	btfsc	___lwmod@divisor+1,7
  2862  0EED  2EFA               	goto	l1355
  2863  0EEE  3001               	movlw	1
  2864  0EEF                     u1275:	
  2865  0EEF  1003               	clrc
  2866  0EF0  0DC5               	rlf	___lwmod@divisor,f
  2867  0EF1  0DC6               	rlf	___lwmod@divisor+1,f
  2868  0EF2  3EFF               	addlw	-1
  2869  0EF3  1D03               	skipz
  2870  0EF4  2EEF               	goto	u1275
  2871  0EF5  3001               	movlw	1
  2872  0EF6  00C9               	movwf	??___lwmod
  2873  0EF7  0849               	movf	??___lwmod,w
  2874  0EF8  07CA               	addwf	___lwmod@counter,f
  2875  0EF9  2EEC               	goto	l1353
  2876  0EFA                     l1355:	
  2877  0EFA  0846               	movf	___lwmod@divisor+1,w
  2878  0EFB  0248               	subwf	___lwmod@dividend+1,w
  2879  0EFC  1D03               	skipz
  2880  0EFD  2F00               	goto	u1295
  2881  0EFE  0845               	movf	___lwmod@divisor,w
  2882  0EFF  0247               	subwf	___lwmod@dividend,w
  2883  0F00                     u1295:	
  2884  0F00  1C03               	skipc
  2885  0F01  2F08               	goto	l1359
  2886  0F02  0845               	movf	___lwmod@divisor,w
  2887  0F03  02C7               	subwf	___lwmod@dividend,f
  2888  0F04  0846               	movf	___lwmod@divisor+1,w
  2889  0F05  1C03               	skipc
  2890  0F06  03C8               	decf	___lwmod@dividend+1,f
  2891  0F07  02C8               	subwf	___lwmod@dividend+1,f
  2892  0F08                     l1359:	
  2893  0F08  3001               	movlw	1
  2894  0F09                     u1305:	
  2895  0F09  1003               	clrc
  2896  0F0A  0CC6               	rrf	___lwmod@divisor+1,f
  2897  0F0B  0CC5               	rrf	___lwmod@divisor,f
  2898  0F0C  3EFF               	addlw	-1
  2899  0F0D  1D03               	skipz
  2900  0F0E  2F09               	goto	u1305
  2901  0F0F  3001               	movlw	1
  2902  0F10  02CA               	subwf	___lwmod@counter,f
  2903  0F11  1D03               	btfss	3,2
  2904  0F12  2EFA               	goto	l1355
  2905  0F13                     l1363:	
  2906  0F13  0848               	movf	___lwmod@dividend+1,w
  2907  0F14  00C6               	movwf	?___lwmod+1
  2908  0F15  0847               	movf	___lwmod@dividend,w
  2909  0F16  00C5               	movwf	?___lwmod
  2910  0F17  0008               	return
  2911  0F18                     __end_of___lwmod:	
  2912                           
  2913                           	psect	text7
  2914  001E                     __ptext7:	
  2915 ;; *************** function ___lwdiv *****************
  2916 ;; Defined at:
  2917 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  divisor         2   29[BANK0 ] unsigned int 
  2920 ;;  dividend        2   31[BANK0 ] unsigned int 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  quotient        2   34[BANK0 ] unsigned int 
  2923 ;;  counter         1   36[BANK0 ] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  2   29[BANK0 ] unsigned int 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2933 ;;      Params:         0       4       0       0       0
  2934 ;;      Locals:         0       3       0       0       0
  2935 ;;      Temps:          0       1       0       0       0
  2936 ;;      Totals:         0       8       0       0       0
  2937 ;;Total ram usage:        8 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    3
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_printf
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           
  2948                           ;psect for function ___lwdiv
  2949  001E                     ___lwdiv:	
  2950                           
  2951                           ;incstack = 0
  2952                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2953  001E  1283               	bcf	3,5	;RP0=0, select bank0
  2954  001F  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0020  01C2               	clrf	___lwdiv@quotient
  2956  0021  01C3               	clrf	___lwdiv@quotient+1
  2957  0022  083D               	movf	___lwdiv@divisor,w
  2958  0023  043E               	iorwf	___lwdiv@divisor+1,w
  2959  0024  1903               	btfsc	3,2
  2960  0025  2857               	goto	l1341
  2961  0026  01C4               	clrf	___lwdiv@counter
  2962  0027  0AC4               	incf	___lwdiv@counter,f
  2963  0028                     l1329:	
  2964  0028  1BBE               	btfsc	___lwdiv@divisor+1,7
  2965  0029  2836               	goto	l1331
  2966  002A  3001               	movlw	1
  2967  002B                     u1205:	
  2968  002B  1003               	clrc
  2969  002C  0DBD               	rlf	___lwdiv@divisor,f
  2970  002D  0DBE               	rlf	___lwdiv@divisor+1,f
  2971  002E  3EFF               	addlw	-1
  2972  002F  1D03               	skipz
  2973  0030  282B               	goto	u1205
  2974  0031  3001               	movlw	1
  2975  0032  00C1               	movwf	??___lwdiv
  2976  0033  0841               	movf	??___lwdiv,w
  2977  0034  07C4               	addwf	___lwdiv@counter,f
  2978  0035  2828               	goto	l1329
  2979  0036                     l1331:	
  2980  0036  3001               	movlw	1
  2981  0037                     u1225:	
  2982  0037  1003               	clrc
  2983  0038  0DC2               	rlf	___lwdiv@quotient,f
  2984  0039  0DC3               	rlf	___lwdiv@quotient+1,f
  2985  003A  3EFF               	addlw	-1
  2986  003B  1D03               	skipz
  2987  003C  2837               	goto	u1225
  2988  003D  083E               	movf	___lwdiv@divisor+1,w
  2989  003E  0240               	subwf	___lwdiv@dividend+1,w
  2990  003F  1D03               	skipz
  2991  0040  2843               	goto	u1235
  2992  0041  083D               	movf	___lwdiv@divisor,w
  2993  0042  023F               	subwf	___lwdiv@dividend,w
  2994  0043                     u1235:	
  2995  0043  1C03               	skipc
  2996  0044  284C               	goto	l1337
  2997  0045  083D               	movf	___lwdiv@divisor,w
  2998  0046  02BF               	subwf	___lwdiv@dividend,f
  2999  0047  083E               	movf	___lwdiv@divisor+1,w
  3000  0048  1C03               	skipc
  3001  0049  03C0               	decf	___lwdiv@dividend+1,f
  3002  004A  02C0               	subwf	___lwdiv@dividend+1,f
  3003  004B  1442               	bsf	___lwdiv@quotient,0
  3004  004C                     l1337:	
  3005  004C  3001               	movlw	1
  3006  004D                     u1245:	
  3007  004D  1003               	clrc
  3008  004E  0CBE               	rrf	___lwdiv@divisor+1,f
  3009  004F  0CBD               	rrf	___lwdiv@divisor,f
  3010  0050  3EFF               	addlw	-1
  3011  0051  1D03               	skipz
  3012  0052  284D               	goto	u1245
  3013  0053  3001               	movlw	1
  3014  0054  02C4               	subwf	___lwdiv@counter,f
  3015  0055  1D03               	btfss	3,2
  3016  0056  2836               	goto	l1331
  3017  0057                     l1341:	
  3018  0057  0843               	movf	___lwdiv@quotient+1,w
  3019  0058  00BE               	movwf	?___lwdiv+1
  3020  0059  0842               	movf	___lwdiv@quotient,w
  3021  005A  00BD               	movwf	?___lwdiv
  3022  005B  0008               	return
  3023  005C                     __end_of___lwdiv:	
  3024                           
  3025                           	psect	text8
  3026  0F8F                     __ptext8:	
  3027 ;; *************** function _atoi *****************
  3028 ;; Defined at:
  3029 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  s               1    wreg     PTR const unsigned char 
  3032 ;;		 -> number(10), 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  s               1   42[BANK0 ] PTR const unsigned char 
  3035 ;;		 -> number(10), 
  3036 ;;  a               2   40[BANK0 ] int 
  3037 ;;  sign            1   39[BANK0 ] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  2   35[BANK0 ] int 
  3040 ;; Registers used:
  3041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       2       0       0       0
  3048 ;;      Locals:         0       4       0       0       0
  3049 ;;      Temps:          0       2       0       0       0
  3050 ;;      Totals:         0       8       0       0       0
  3051 ;;Total ram usage:        8 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    4
  3054 ;; This function calls:
  3055 ;;		___wmul
  3056 ;;		_isdigit
  3057 ;; This function is called by:
  3058 ;;		_main
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           
  3063                           ;psect for function _atoi
  3064  0F8F                     _atoi:	
  3065                           
  3066                           ;incstack = 0
  3067                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3068                           ;atoi@s stored from wreg
  3069  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  3070  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  3071  0F91  00CA               	movwf	atoi@s
  3072  0F92                     l1627:	
  3073  0F92  084A               	movf	atoi@s,w
  3074  0F93  0084               	movwf	4
  3075  0F94  3020               	movlw	32
  3076  0F95  1383               	bcf	3,7	;select IRP bank0
  3077  0F96  0600               	xorwf	0,w
  3078  0F97  1D03               	btfss	3,2
  3079  0F98  2F9E               	goto	l1629
  3080  0F99                     l1625:	
  3081  0F99  3001               	movlw	1
  3082  0F9A  00C5               	movwf	??_atoi
  3083  0F9B  0845               	movf	??_atoi,w
  3084  0F9C  07CA               	addwf	atoi@s,f
  3085  0F9D  2F92               	goto	l1627
  3086  0F9E                     l1629:	
  3087  0F9E  084A               	movf	atoi@s,w
  3088  0F9F  0084               	movwf	4
  3089  0FA0  3009               	movlw	9
  3090  0FA1  0600               	xorwf	0,w
  3091  0FA2  1903               	btfsc	3,2
  3092  0FA3  2F99               	goto	l1625
  3093  0FA4  01C8               	clrf	atoi@a
  3094  0FA5  01C9               	clrf	atoi@a+1
  3095  0FA6  01C7               	clrf	atoi@sign
  3096  0FA7  084A               	movf	atoi@s,w
  3097  0FA8  0084               	movwf	4
  3098  0FA9  302D               	movlw	45
  3099  0FAA  0600               	xorwf	0,w
  3100  0FAB  1D03               	btfss	3,2
  3101  0FAC  2FB2               	goto	l1637
  3102  0FAD  3001               	movlw	1
  3103  0FAE  00C5               	movwf	??_atoi
  3104  0FAF  0845               	movf	??_atoi,w
  3105  0FB0  07C7               	addwf	atoi@sign,f
  3106  0FB1  2FB8               	goto	l1643
  3107  0FB2                     l1637:	
  3108  0FB2  084A               	movf	atoi@s,w
  3109  0FB3  0084               	movwf	4
  3110  0FB4  302B               	movlw	43
  3111  0FB5  0600               	xorwf	0,w
  3112  0FB6  1D03               	btfss	3,2
  3113  0FB7  2FBC               	goto	l1645
  3114  0FB8                     l1643:	
  3115  0FB8  3001               	movlw	1
  3116  0FB9  00C5               	movwf	??_atoi
  3117  0FBA  0845               	movf	??_atoi,w
  3118  0FBB  07CA               	addwf	atoi@s,f
  3119  0FBC                     l1645:	
  3120  0FBC  084A               	movf	atoi@s,w
  3121  0FBD  0084               	movwf	4
  3122  0FBE  0800               	movf	0,w
  3123  0FBF  120A  158A  265C  120A  158A  	fcall	_isdigit
  3124  0FC4  1C03               	btfss	3,0
  3125  0FC5  2FEA               	goto	l1647
  3126  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  3127  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  3128  0FC8  0849               	movf	atoi@a+1,w
  3129  0FC9  00BE               	movwf	___wmul@multiplier+1
  3130  0FCA  0848               	movf	atoi@a,w
  3131  0FCB  00BD               	movwf	___wmul@multiplier
  3132  0FCC  300A               	movlw	10
  3133  0FCD  00BF               	movwf	___wmul@multiplicand
  3134  0FCE  3000               	movlw	0
  3135  0FCF  00C0               	movwf	___wmul@multiplicand+1
  3136  0FD0  120A  158A  268D  120A  158A  	fcall	___wmul
  3137  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  3138  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  3139  0FD7  084A               	movf	atoi@s,w
  3140  0FD8  0084               	movwf	4
  3141  0FD9  1383               	bcf	3,7	;select IRP bank0
  3142  0FDA  0800               	movf	0,w
  3143  0FDB  073D               	addwf	?___wmul,w
  3144  0FDC  00C5               	movwf	??_atoi
  3145  0FDD  083E               	movf	?___wmul+1,w
  3146  0FDE  1803               	skipnc
  3147  0FDF  0A3E               	incf	?___wmul+1,w
  3148  0FE0  00C6               	movwf	??_atoi+1
  3149  0FE1  0845               	movf	??_atoi,w
  3150  0FE2  3ED0               	addlw	208
  3151  0FE3  00C8               	movwf	atoi@a
  3152  0FE4  0846               	movf	??_atoi+1,w
  3153  0FE5  1803               	skipnc
  3154  0FE6  3E01               	addlw	1
  3155  0FE7  3EFF               	addlw	255
  3156  0FE8  00C9               	movwf	atoi@a+1
  3157  0FE9  2FB8               	goto	l1643
  3158  0FEA                     l1647:	
  3159  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0FEC  0847               	movf	atoi@sign,w
  3162  0FED  1903               	btfsc	3,2
  3163  0FEE  2FFB               	goto	l1653
  3164  0FEF  0948               	comf	atoi@a,w
  3165  0FF0  00C5               	movwf	??_atoi
  3166  0FF1  0949               	comf	atoi@a+1,w
  3167  0FF2  00C6               	movwf	??_atoi+1
  3168  0FF3  0AC5               	incf	??_atoi,f
  3169  0FF4  1903               	skipnz
  3170  0FF5  0AC6               	incf	??_atoi+1,f
  3171  0FF6  0845               	movf	??_atoi,w
  3172  0FF7  00C3               	movwf	?_atoi
  3173  0FF8  0846               	movf	??_atoi+1,w
  3174  0FF9  00C4               	movwf	?_atoi+1
  3175  0FFA  0008               	return
  3176  0FFB                     l1653:	
  3177  0FFB  0849               	movf	atoi@a+1,w
  3178  0FFC  00C4               	movwf	?_atoi+1
  3179  0FFD  0848               	movf	atoi@a,w
  3180  0FFE  00C3               	movwf	?_atoi
  3181  0FFF  0008               	return
  3182  1000                     __end_of_atoi:	
  3183                           
  3184                           	psect	text9
  3185  0E5C                     __ptext9:	
  3186 ;; *************** function _isdigit *****************
  3187 ;; Defined at:
  3188 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  c               1    wreg     unsigned char 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  c               1   30[BANK0 ] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;		None               void
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3202 ;;      Params:         0       0       0       0       0
  3203 ;;      Locals:         0       2       0       0       0
  3204 ;;      Temps:          0       0       0       0       0
  3205 ;;      Totals:         0       2       0       0       0
  3206 ;;Total ram usage:        2 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    3
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_printf
  3213 ;;		_atoi
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _isdigit
  3219  0E5C                     _isdigit:	
  3220                           
  3221                           ;incstack = 0
  3222                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3223                           ;isdigit@c stored from wreg
  3224  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  3225  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  3226  0E5E  00BE               	movwf	isdigit@c
  3227  0E5F  01BD               	clrf	_isdigit$694
  3228  0E60  303A               	movlw	58
  3229  0E61  023E               	subwf	isdigit@c,w
  3230  0E62  1803               	skipnc
  3231  0E63  2E6A               	goto	l1301
  3232  0E64  3030               	movlw	48
  3233  0E65  023E               	subwf	isdigit@c,w
  3234  0E66  1C03               	skipc
  3235  0E67  2E6A               	goto	l1301
  3236  0E68  01BD               	clrf	_isdigit$694
  3237  0E69  0ABD               	incf	_isdigit$694,f
  3238  0E6A                     l1301:	
  3239  0E6A  0C3D               	rrf	_isdigit$694,w
  3240  0E6B  0008               	return
  3241  0E6C                     __end_of_isdigit:	
  3242                           
  3243                           	psect	text10
  3244  0E8D                     __ptext10:	
  3245 ;; *************** function ___wmul *****************
  3246 ;; Defined at:
  3247 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  multiplier      2   29[BANK0 ] unsigned int 
  3250 ;;  multiplicand    2   31[BANK0 ] unsigned int 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  product         2   33[BANK0 ] unsigned int 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  2   29[BANK0 ] unsigned int 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2, status,0
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3262 ;;      Params:         0       4       0       0       0
  3263 ;;      Locals:         0       2       0       0       0
  3264 ;;      Temps:          0       0       0       0       0
  3265 ;;      Totals:         0       6       0       0       0
  3266 ;;Total ram usage:        6 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    3
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_printf
  3273 ;;		_atoi
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           
  3278                           ;psect for function ___wmul
  3279  0E8D                     ___wmul:	
  3280                           
  3281                           ;incstack = 0
  3282                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3283  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  3285  0E8F  01C1               	clrf	___wmul@product
  3286  0E90  01C2               	clrf	___wmul@product+1
  3287  0E91                     l1307:	
  3288  0E91  1C3D               	btfss	___wmul@multiplier,0
  3289  0E92  2E99               	goto	l271
  3290  0E93  083F               	movf	___wmul@multiplicand,w
  3291  0E94  07C1               	addwf	___wmul@product,f
  3292  0E95  1803               	skipnc
  3293  0E96  0AC2               	incf	___wmul@product+1,f
  3294  0E97  0840               	movf	___wmul@multiplicand+1,w
  3295  0E98  07C2               	addwf	___wmul@product+1,f
  3296  0E99                     l271:	
  3297  0E99  3001               	movlw	1
  3298  0E9A                     u1165:	
  3299  0E9A  1003               	clrc
  3300  0E9B  0DBF               	rlf	___wmul@multiplicand,f
  3301  0E9C  0DC0               	rlf	___wmul@multiplicand+1,f
  3302  0E9D  3EFF               	addlw	-1
  3303  0E9E  1D03               	skipz
  3304  0E9F  2E9A               	goto	u1165
  3305  0EA0  3001               	movlw	1
  3306  0EA1                     u1175:	
  3307  0EA1  1003               	clrc
  3308  0EA2  0CBE               	rrf	___wmul@multiplier+1,f
  3309  0EA3  0CBD               	rrf	___wmul@multiplier,f
  3310  0EA4  3EFF               	addlw	-1
  3311  0EA5  1D03               	skipz
  3312  0EA6  2EA1               	goto	u1175
  3313  0EA7  083D               	movf	___wmul@multiplier,w
  3314  0EA8  043E               	iorwf	___wmul@multiplier+1,w
  3315  0EA9  1D03               	btfss	3,2
  3316  0EAA  2E91               	goto	l1307
  3317  0EAB  0842               	movf	___wmul@product+1,w
  3318  0EAC  00BE               	movwf	?___wmul+1
  3319  0EAD  0841               	movf	___wmul@product,w
  3320  0EAE  00BD               	movwf	?___wmul
  3321  0EAF  0008               	return
  3322  0EB0                     __end_of___wmul:	
  3323                           
  3324                           	psect	text11
  3325  00E0                     __ptext11:	
  3326 ;; *************** function _ISR *****************
  3327 ;; Defined at:
  3328 ;;		line 191 in file "main.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0
  3344 ;;      Temps:          0       8       0       0       0
  3345 ;;      Totals:         0       8       0       0       0
  3346 ;;Total ram usage:        8 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    2
  3349 ;; This function calls:
  3350 ;;		i1_printf
  3351 ;; This function is called by:
  3352 ;;		Interrupt level 1
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function _ISR
  3358  00E0                     _ISR:	
  3359                           
  3360                           ;main.c: 192: if (c == 'e') {
  3361  00E0  3065               	movlw	101
  3362  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  3363  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  3364  00E3  0643               	xorwf	_c^(0+128),w
  3365  00E4  1D03               	btfss	3,2
  3366  00E5  292B               	goto	i1l1881
  3367                           
  3368                           ;main.c: 193: arrayv[i] = TMR1;
  3369  00E6  0842               	movf	_i^(0+128),w
  3370  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  3371  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  3372  00E9  00B5               	movwf	??_ISR
  3373  00EA  0735               	addwf	??_ISR,w
  3374  00EB  3E10               	addlw	(low (_arrayv| (0+256)))& (0+255)
  3375  00EC  0084               	movwf	4
  3376  00ED  080E               	movf	14,w	;volatile
  3377  00EE  1783               	bsf	3,7	;select IRP bank2
  3378  00EF  0080               	movwf	0
  3379  00F0  0A84               	incf	4,f
  3380  00F1  080F               	movf	15,w	;volatile
  3381  00F2  0080               	movwf	0
  3382                           
  3383                           ;main.c: 194: TMR1 = 0;
  3384  00F3  018E               	clrf	14	;volatile
  3385  00F4  018F               	clrf	15	;volatile
  3386                           
  3387                           ;main.c: 195: i++;
  3388  00F5  3001               	movlw	1
  3389  00F6  00B5               	movwf	??_ISR
  3390  00F7  0835               	movf	??_ISR,w
  3391  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  3392  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  3393  00FA  07C2               	addwf	_i^(0+128),f
  3394                           
  3395                           ;main.c: 196: if (i < 48) array[i] = !PORTBbits.RB4;
  3396  00FB  3030               	movlw	48
  3397  00FC  0242               	subwf	_i^(0+128),w
  3398  00FD  1803               	skipnc
  3399  00FE  290C               	goto	i1l136
  3400  00FF  0842               	movf	_i^(0+128),w
  3401  0100  3E90               	addlw	(low (_array| (0+256)))& (0+255)
  3402  0101  0084               	movwf	4
  3403  0102  1003               	clrc
  3404  0103  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0104  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0105  1E06               	btfss	6,4	;volatile
  3407  0106  1403               	setc
  3408  0107  3000               	movlw	0
  3409  0108  1803               	btfsc	3,0
  3410  0109  3001               	movlw	1
  3411  010A  0080               	movwf	0
  3412  010B  2910               	goto	i1l1875
  3413  010C                     i1l136:	
  3414                           
  3415                           ;main.c: 197: else {
  3416                           ;main.c: 198: T1CONbits.TMR1ON = 0;
  3417  010C  1283               	bcf	3,5	;RP0=0, select bank0
  3418  010D  1303               	bcf	3,6	;RP1=0, select bank0
  3419  010E  1010               	bcf	16,0	;volatile
  3420                           
  3421                           ;main.c: 199: INTCONbits.RBIE = 0;
  3422  010F  118B               	bcf	11,3	;volatile
  3423  0110                     i1l1875:	
  3424                           
  3425                           ;main.c: 200: }
  3426                           ;main.c: 201: PORTAbits.RA1 = !PORTBbits.RB4;
  3427  0110  1003               	clrc
  3428  0111  1E06               	btfss	6,4	;volatile
  3429  0112  1403               	setc
  3430  0113  1C03               	btfss	3,0
  3431  0114  2919               	goto	u214_20
  3432  0115  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0116  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0117  1485               	bsf	5,1	;volatile
  3435  0118  291C               	goto	u215_24
  3436  0119                     u214_20:	
  3437  0119  1283               	bcf	3,5	;RP0=0, select bank0
  3438  011A  1303               	bcf	3,6	;RP1=0, select bank0
  3439  011B  1085               	bcf	5,1	;volatile
  3440  011C                     u215_24:	
  3441                           
  3442                           ;main.c: 202: PORTAbits.RA2 = !PORTBbits.RB4;
  3443  011C  1003               	clrc
  3444  011D  1E06               	btfss	6,4	;volatile
  3445  011E  1403               	setc
  3446  011F  1C03               	btfss	3,0
  3447  0120  2925               	goto	u216_20
  3448  0121  1283               	bcf	3,5	;RP0=0, select bank0
  3449  0122  1303               	bcf	3,6	;RP1=0, select bank0
  3450  0123  1505               	bsf	5,2	;volatile
  3451  0124  2928               	goto	i1l1877
  3452  0125                     u216_20:	
  3453  0125  1283               	bcf	3,5	;RP0=0, select bank0
  3454  0126  1303               	bcf	3,6	;RP1=0, select bank0
  3455  0127  1105               	bcf	5,2	;volatile
  3456  0128                     i1l1877:	
  3457                           
  3458                           ;main.c: 203: INTCONbits.RBIF = 0;
  3459  0128  100B               	bcf	11,0	;volatile
  3460                           
  3461                           ;main.c: 204: PIR1bits.TMR1IF = 0;
  3462  0129  100C               	bcf	12,0	;volatile
  3463                           
  3464                           ;main.c: 205: } else {
  3465  012A  2980               	goto	i1l138
  3466  012B                     i1l1881:	
  3467                           
  3468                           ;main.c: 206: TMR1 = arrayv[i];
  3469  012B  1683               	bsf	3,5	;RP0=1, select bank1
  3470  012C  1303               	bcf	3,6	;RP1=0, select bank1
  3471  012D  0842               	movf	_i^(0+128),w
  3472  012E  1283               	bcf	3,5	;RP0=0, select bank0
  3473  012F  1303               	bcf	3,6	;RP1=0, select bank0
  3474  0130  00B5               	movwf	??_ISR
  3475  0131  0735               	addwf	??_ISR,w
  3476  0132  3E10               	addlw	(low (_arrayv| (0+256)))& (0+255)
  3477  0133  0084               	movwf	4
  3478  0134  1783               	bsf	3,7	;select IRP bank2
  3479  0135  0800               	movf	0,w
  3480  0136  008E               	movwf	14	;volatile
  3481  0137  0A84               	incf	4,f
  3482  0138  0800               	movf	0,w
  3483  0139  008F               	movwf	15	;volatile
  3484                           
  3485                           ;main.c: 207: PORTAbits.RA1 = array[i];
  3486  013A  1683               	bsf	3,5	;RP0=1, select bank1
  3487  013B  1303               	bcf	3,6	;RP1=0, select bank1
  3488  013C  0842               	movf	_i^(0+128),w
  3489  013D  3E90               	addlw	(low (_array| (0+256)))& (0+255)
  3490  013E  0084               	movwf	4
  3491  013F  0C00               	rrf	0,w
  3492  0140  1283               	bcf	3,5	;RP0=0, select bank0
  3493  0141  1303               	bcf	3,6	;RP1=0, select bank0
  3494  0142  1C03               	skipc
  3495  0143  1085               	bcf	5,1	;volatile
  3496  0144  1803               	skipnc
  3497  0145  1485               	bsf	5,1	;volatile
  3498                           
  3499                           ;main.c: 208: PORTAbits.RA2 = array[i];
  3500  0146  1683               	bsf	3,5	;RP0=1, select bank1
  3501  0147  1303               	bcf	3,6	;RP1=0, select bank1
  3502  0148  0842               	movf	_i^(0+128),w
  3503  0149  3E90               	addlw	(low (_array| (0+256)))& (0+255)
  3504  014A  0084               	movwf	4
  3505  014B  0C00               	rrf	0,w
  3506  014C  1283               	bcf	3,5	;RP0=0, select bank0
  3507  014D  1303               	bcf	3,6	;RP1=0, select bank0
  3508  014E  1C03               	skipc
  3509  014F  1105               	bcf	5,2	;volatile
  3510  0150  1803               	skipnc
  3511  0151  1505               	bsf	5,2	;volatile
  3512                           
  3513                           ;main.c: 209: i++;
  3514  0152  3001               	movlw	1
  3515  0153  00B5               	movwf	??_ISR
  3516  0154  0835               	movf	??_ISR,w
  3517  0155  1683               	bsf	3,5	;RP0=1, select bank1
  3518  0156  1303               	bcf	3,6	;RP1=0, select bank1
  3519  0157  07C2               	addwf	_i^(0+128),f
  3520                           
  3521                           ;main.c: 210: if (i >= b) T1CONbits.TMR1ON = 0;
  3522  0158  083F               	movf	_b^(0+128),w
  3523  0159  0242               	subwf	_i^(0+128),w
  3524  015A  1C03               	skipc
  3525  015B  295F               	goto	i1l139
  3526  015C  1283               	bcf	3,5	;RP0=0, select bank0
  3527  015D  1303               	bcf	3,6	;RP1=0, select bank0
  3528  015E  1010               	bcf	16,0	;volatile
  3529  015F                     i1l139:	
  3530                           
  3531                           ;main.c: 211: PIR1bits.TMR1IF = 0;
  3532  015F  1283               	bcf	3,5	;RP0=0, select bank0
  3533  0160  100C               	bcf	12,0	;volatile
  3534                           
  3535                           ;main.c: 212: printf("i = %u, b = %u\n\r", i, b);
  3536  0161  30EB               	movlw	low (STR_17| (0+32768))
  3537  0162  00A1               	movwf	i1printf@f
  3538  0163  3088               	movlw	high (STR_17| (0+32768))
  3539  0164  00A2               	movwf	i1printf@f+1
  3540  0165  1683               	bsf	3,5	;RP0=1, select bank1
  3541  0166  1303               	bcf	3,6	;RP1=0, select bank1
  3542  0167  0842               	movf	_i^(0+128),w
  3543  0168  1283               	bcf	3,5	;RP0=0, select bank0
  3544  0169  1303               	bcf	3,6	;RP1=0, select bank0
  3545  016A  00B5               	movwf	??_ISR
  3546  016B  01B6               	clrf	??_ISR+1
  3547  016C  0835               	movf	??_ISR,w
  3548  016D  00A3               	movwf	?i1_printf+2
  3549  016E  0836               	movf	??_ISR+1,w
  3550  016F  00A4               	movwf	?i1_printf+3
  3551  0170  1683               	bsf	3,5	;RP0=1, select bank1
  3552  0171  1303               	bcf	3,6	;RP1=0, select bank1
  3553  0172  083F               	movf	_b^(0+128),w
  3554  0173  1283               	bcf	3,5	;RP0=0, select bank0
  3555  0174  1303               	bcf	3,6	;RP1=0, select bank0
  3556  0175  00B7               	movwf	??_ISR+2
  3557  0176  01B8               	clrf	??_ISR+3
  3558  0177  0837               	movf	??_ISR+2,w
  3559  0178  00A5               	movwf	?i1_printf+4
  3560  0179  0838               	movf	??_ISR+3,w
  3561  017A  00A6               	movwf	?i1_printf+5
  3562  017B  120A  118A  2198  120A  118A  	fcall	i1_printf
  3563  0180                     i1l138:	
  3564                           
  3565                           ;main.c: 213: }
  3566                           ;main.c: 214: printf("ISR\n\r");
  3567  0180  303C               	movlw	low (STR_18| (0+32768))
  3568  0181  1283               	bcf	3,5	;RP0=0, select bank0
  3569  0182  1303               	bcf	3,6	;RP1=0, select bank0
  3570  0183  00A1               	movwf	i1printf@f
  3571  0184  3089               	movlw	high (STR_18| (0+32768))
  3572  0185  00A2               	movwf	i1printf@f+1
  3573  0186  120A  118A  2198  120A  118A  	fcall	i1_printf
  3574  018B  1283               	bcf	3,5	;RP0=0, select bank0
  3575  018C  1303               	bcf	3,6	;RP1=0, select bank0
  3576  018D  083C               	movf	??_ISR+7,w
  3577  018E  00FF               	movwf	127
  3578  018F  083B               	movf	??_ISR+6,w
  3579  0190  008A               	movwf	10
  3580  0191  083A               	movf	??_ISR+5,w
  3581  0192  0084               	movwf	4
  3582  0193  0E39               	swapf	(??_ISR+4)^0,w
  3583  0194  0083               	movwf	3
  3584  0195  0EFE               	swapf	126,f
  3585  0196  0E7E               	swapf	126,w
  3586  0197  0009               	retfie
  3587  0198                     __end_of_ISR:	
  3588                           
  3589                           	psect	intentry
  3590  0004                     __pintentry:	
  3591                           ;incstack = 0
  3592                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3593                           
  3594  0004                     interrupt_function:	
  3595  007E                     saved_w	set	btemp
  3596  0004  00FE               	movwf	btemp
  3597  0005  0E03               	swapf	3,w
  3598  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3599  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3600  0008  00B9               	movwf	??_ISR+4
  3601  0009  0804               	movf	4,w
  3602  000A  00BA               	movwf	??_ISR+5
  3603  000B  080A               	movf	10,w
  3604  000C  00BB               	movwf	??_ISR+6
  3605  000D  087F               	movf	btemp+1,w
  3606  000E  00BC               	movwf	??_ISR+7
  3607  000F  120A  118A  28E0   	ljmp	_ISR
  3608                           
  3609                           	psect	text12
  3610  0198                     __ptext12:	
  3611 ;; *************** function i1_printf *****************
  3612 ;; Defined at:
  3613 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  f               2    1[BANK0 ] PTR const unsigned char 
  3616 ;;		 -> STR_18(6), STR_17(17), STR_16(35), STR_15(24), 
  3617 ;;		 -> STR_14(14), STR_13(18), STR_12(47), STR_11(10), 
  3618 ;;		 -> STR_10(16), STR_9(7), STR_8(9), STR_7(25), 
  3619 ;;		 -> STR_6(10), STR_5(16), STR_4(17), STR_3(5), 
  3620 ;;		 -> STR_2(41), STR_1(8), 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  printf          4    0        struct .
  3623 ;;  printf          2   18[BANK0 ] int 
  3624 ;;  printf          2   16[BANK0 ] unsigned int 
  3625 ;;  printf          2   12[BANK0 ] unsigned int 
  3626 ;;  printf          1   20[BANK0 ] char 
  3627 ;;  printf          1   15[BANK0 ] PTR void [1]
  3628 ;;		 -> ?i1_printf(2), ?_printf(2), 
  3629 ;;  printf          1   14[BANK0 ] char 
  3630 ;;  printf          1   11[BANK0 ] PTR const unsigned char 
  3631 ;;		 -> printf@c(1), 
  3632 ;;  printf          1   10[BANK0 ] unsigned char 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  2    1[BANK0 ] int 
  3635 ;; Registers used:
  3636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3642 ;;      Params:         0       6       0       0       0
  3643 ;;      Locals:         0      11       0       0       0
  3644 ;;      Temps:          0       3       0       0       0
  3645 ;;      Totals:         0      20       0       0       0
  3646 ;;Total ram usage:       20 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    1
  3649 ;; This function calls:
  3650 ;;		i1___lwdiv
  3651 ;;		i1___lwmod
  3652 ;;		i1___wmul
  3653 ;;		i1_isdigit
  3654 ;;		i1_putch
  3655 ;; This function is called by:
  3656 ;;		_ISR
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function i1_printf
  3662  0198                     i1_printf:	
  3663                           
  3664                           ;doprnt.c: 466: va_list ap;
  3665                           ;doprnt.c: 499: signed char c;
  3666                           ;doprnt.c: 501: int width;
  3667                           ;doprnt.c: 506: signed char prec;
  3668                           ;doprnt.c: 508: unsigned char flag;
  3669                           ;doprnt.c: 523: union {
  3670                           ;doprnt.c: 524: unsigned long vd;
  3671                           ;doprnt.c: 525: double integ;
  3672                           ;doprnt.c: 526: } tmpval;
  3673                           ;doprnt.c: 528: unsigned int val;
  3674                           ;doprnt.c: 529: unsigned len;
  3675                           ;doprnt.c: 530: const char * cp;
  3676                           ;doprnt.c: 533: *ap = __va_start();
  3677                           
  3678                           ;incstack = 0
  3679                           ; Regs used in i1_printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3680  0198  3023               	movlw	(low ((?i1_printf| 0+2)))& (0+255)
  3681  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3682  019A  1303               	bcf	3,6	;RP1=0, select bank0
  3683  019B  00A7               	movwf	??i1_printf
  3684  019C  0827               	movf	??i1_printf,w
  3685  019D  00AF               	movwf	i1printf@ap
  3686  019E                     i1l1743:	
  3687                           ;doprnt.c: 536: while(c = *f++) {
  3688                           
  3689  019E  1283               	bcf	3,5	;RP0=0, select bank0
  3690  019F  1303               	bcf	3,6	;RP1=0, select bank0
  3691  01A0  0822               	movf	i1printf@f+1,w
  3692  01A1  00A8               	movwf	??i1_printf+1
  3693  01A2  0821               	movf	i1printf@f,w
  3694  01A3  00A7               	movwf	??i1_printf
  3695  01A4  0AA1               	incf	i1printf@f,f
  3696  01A5  1903               	skipnz
  3697  01A6  0AA2               	incf	i1printf@f+1,f
  3698  01A7  0828               	movf	??i1_printf+1,w
  3699  01A8  00FF               	movwf	127
  3700  01A9  0827               	movf	??i1_printf,w
  3701  01AA  0084               	movwf	4
  3702  01AB  120A  158A  2000  120A  118A  	fcall	stringtab
  3703  01B0  00A9               	movwf	??i1_printf+2
  3704  01B1  0829               	movf	??i1_printf+2,w
  3705  01B2  00B4               	movwf	i1printf@c
  3706  01B3  0834               	movf	i1printf@c,w
  3707  01B4  1903               	btfsc	3,2
  3708  01B5  0008               	return
  3709                           
  3710                           ;doprnt.c: 538: if(c != '%')
  3711  01B6  3025               	movlw	37
  3712  01B7  0634               	xorwf	i1printf@c,w
  3713  01B8  1903               	btfsc	3,2
  3714  01B9  29C1               	goto	i1l1663
  3715                           
  3716                           ;doprnt.c: 540: {
  3717                           ;doprnt.c: 541: (putch(c) );
  3718  01BA  0834               	movf	i1printf@c,w
  3719  01BB  120A  158A  262C  120A  118A  	fcall	i1_putch
  3720                           
  3721                           ;doprnt.c: 542: continue;
  3722  01C0  299E               	goto	i1l1743
  3723  01C1                     i1l1663:	
  3724                           
  3725                           ;doprnt.c: 543: }
  3726                           ;doprnt.c: 546: width = 0;
  3727  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  3728  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  3729  01C3  01B2               	clrf	i1printf@width
  3730  01C4  01B3               	clrf	i1printf@width+1
  3731                           
  3732                           ;doprnt.c: 548: flag = 0;
  3733  01C5  01AA               	clrf	i1printf@flag
  3734                           
  3735                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3736  01C6  0822               	movf	i1printf@f+1,w
  3737  01C7  00FF               	movwf	127
  3738  01C8  0821               	movf	i1printf@f,w
  3739  01C9  0084               	movwf	4
  3740  01CA  120A  158A  2000  120A  118A  	fcall	stringtab
  3741  01CF  120A  158A  264E  120A  118A  	fcall	i1_isdigit
  3742  01D4  1C03               	btfss	3,0
  3743  01D5  2A75               	goto	i1l1705
  3744                           
  3745                           ;doprnt.c: 598: width = 0;
  3746  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  3747  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  3748  01D8  01B2               	clrf	i1printf@width
  3749  01D9  01B3               	clrf	i1printf@width+1
  3750  01DA                     i1l1669:	
  3751                           ;doprnt.c: 599: do {
  3752                           
  3753                           
  3754                           ;doprnt.c: 600: width *= 10;
  3755  01DA  300A               	movlw	10
  3756  01DB  00F1               	movwf	i1___wmul@multiplier
  3757  01DC  3000               	movlw	0
  3758  01DD  00F2               	movwf	i1___wmul@multiplier+1
  3759  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  3760  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  3761  01E0  0833               	movf	i1printf@width+1,w
  3762  01E1  00F4               	movwf	i1___wmul@multiplicand+1
  3763  01E2  0832               	movf	i1printf@width,w
  3764  01E3  00F3               	movwf	i1___wmul@multiplicand
  3765  01E4  120A  158A  266C  120A  118A  	fcall	i1___wmul
  3766  01E9  0872               	movf	?i1___wmul+1,w
  3767  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  3768  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  3769  01EC  00B3               	movwf	i1printf@width+1
  3770  01ED  0871               	movf	?i1___wmul,w
  3771  01EE  00B2               	movwf	i1printf@width
  3772                           
  3773                           ;doprnt.c: 601: width += *f++ - '0';
  3774  01EF  0822               	movf	i1printf@f+1,w
  3775  01F0  00FF               	movwf	127
  3776  01F1  0821               	movf	i1printf@f,w
  3777  01F2  0084               	movwf	4
  3778  01F3  120A  158A  2000  120A  118A  	fcall	stringtab
  3779  01F8  3ED0               	addlw	208
  3780  01F9  00A7               	movwf	??i1_printf
  3781  01FA  30FF               	movlw	255
  3782  01FB  1803               	skipnc
  3783  01FC  3000               	movlw	0
  3784  01FD  00A8               	movwf	??i1_printf+1
  3785  01FE  0827               	movf	??i1_printf,w
  3786  01FF  07B2               	addwf	i1printf@width,f
  3787  0200  1803               	skipnc
  3788  0201  0AB3               	incf	i1printf@width+1,f
  3789  0202  0828               	movf	??i1_printf+1,w
  3790  0203  07B3               	addwf	i1printf@width+1,f
  3791  0204  3001               	movlw	1
  3792  0205  07A1               	addwf	i1printf@f,f
  3793  0206  1803               	skipnc
  3794  0207  0AA2               	incf	i1printf@f+1,f
  3795                           
  3796                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3797  0208  0822               	movf	i1printf@f+1,w
  3798  0209  00FF               	movwf	127
  3799  020A  0821               	movf	i1printf@f,w
  3800  020B  0084               	movwf	4
  3801  020C  120A  158A  2000  120A  118A  	fcall	stringtab
  3802  0211  120A  158A  264E  120A  118A  	fcall	i1_isdigit
  3803  0216  1C03               	btfss	3,0
  3804  0217  2A75               	goto	i1l1705
  3805  0218  29DA               	goto	i1l1669
  3806  0219                     i1l1677:	
  3807                           ;doprnt.c: 750: dostring:
  3808                           
  3809                           ;doprnt.c: 638: goto alldone;
  3810                           
  3811                           ;doprnt.c: 637: case 0:
  3812                           
  3813                           ;doprnt.c: 608: }
  3814                           ;doprnt.c: 635: switch(c = *f++) {
  3815                           
  3816                           
  3817                           ;doprnt.c: 757: if(width > len)
  3818  0219  1283               	bcf	3,5	;RP0=0, select bank0
  3819  021A  1303               	bcf	3,6	;RP1=0, select bank0
  3820  021B  0833               	movf	i1printf@width+1,w
  3821  021C  0231               	subwf	i1printf@len+1,w
  3822  021D  1D03               	skipz
  3823  021E  2A21               	goto	u181_25
  3824  021F  0832               	movf	i1printf@width,w
  3825  0220  0230               	subwf	i1printf@len,w
  3826  0221                     u181_25:	
  3827  0221  1803               	skipnc
  3828  0222  2A2A               	goto	i1l1681
  3829                           
  3830                           ;doprnt.c: 758: width -= len;
  3831  0223  0830               	movf	i1printf@len,w
  3832  0224  02B2               	subwf	i1printf@width,f
  3833  0225  0831               	movf	i1printf@len+1,w
  3834  0226  1C03               	skipc
  3835  0227  03B3               	decf	i1printf@width+1,f
  3836  0228  02B3               	subwf	i1printf@width+1,f
  3837  0229  2A2C               	goto	i1l1685
  3838  022A                     i1l1681:	
  3839                           
  3840                           ;doprnt.c: 759: else
  3841                           ;doprnt.c: 760: width = 0;
  3842  022A  01B2               	clrf	i1printf@width
  3843  022B  01B3               	clrf	i1printf@width+1
  3844  022C                     i1l1685:	
  3845                           ;doprnt.c: 764: while(width--)
  3846                           
  3847  022C  30FF               	movlw	255
  3848  022D  1283               	bcf	3,5	;RP0=0, select bank0
  3849  022E  1303               	bcf	3,6	;RP1=0, select bank0
  3850  022F  07B2               	addwf	i1printf@width,f
  3851  0230  1803               	skipnc
  3852  0231  0AB3               	incf	i1printf@width+1,f
  3853  0232  30FF               	movlw	255
  3854  0233  07B3               	addwf	i1printf@width+1,f
  3855  0234  0A32               	incf	i1printf@width,w
  3856  0235  1903               	btfsc	3,2
  3857  0236  0A33               	incf	i1printf@width+1,w
  3858  0237  1903               	btfsc	3,2
  3859  0238  2A4F               	goto	i1l1691
  3860                           
  3861                           ;doprnt.c: 765: (putch(' ') );
  3862  0239  3020               	movlw	32
  3863  023A  120A  158A  262C  120A  118A  	fcall	i1_putch
  3864  023F  2A2C               	goto	i1l1685
  3865  0240                     i1l1687:	
  3866                           ;doprnt.c: 767: while(len--)
  3867                           
  3868                           
  3869                           ;doprnt.c: 768: (putch(*cp++) );
  3870  0240  082B               	movf	i1printf@cp,w
  3871  0241  0084               	movwf	4
  3872  0242  1383               	bcf	3,7	;select IRP bank0
  3873  0243  0800               	movf	0,w
  3874  0244  120A  158A  262C  120A  118A  	fcall	i1_putch
  3875  0249  3001               	movlw	1
  3876  024A  1283               	bcf	3,5	;RP0=0, select bank0
  3877  024B  1303               	bcf	3,6	;RP1=0, select bank0
  3878  024C  00A7               	movwf	??i1_printf
  3879  024D  0827               	movf	??i1_printf,w
  3880  024E  07AB               	addwf	i1printf@cp,f
  3881  024F                     i1l1691:	
  3882  024F  3001               	movlw	1
  3883  0250  02B0               	subwf	i1printf@len,f
  3884  0251  3000               	movlw	0
  3885  0252  1C03               	skipc
  3886  0253  03B1               	decf	i1printf@len+1,f
  3887  0254  02B1               	subwf	i1printf@len+1,f
  3888  0255  0A30               	incf	i1printf@len,w
  3889  0256  1D03               	skipz
  3890  0257  2A40               	goto	i1l1687
  3891  0258  0A31               	incf	i1printf@len+1,w
  3892  0259  1903               	btfsc	3,2
  3893  025A  299E               	goto	i1l1743
  3894  025B  2A40               	goto	i1l1687
  3895  025C                     i1l1693:	
  3896                           ;doprnt.c: 784: case 'c':
  3897                           
  3898                           ;doprnt.c: 774: continue;
  3899                           
  3900                           
  3901                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  3902  025C  082F               	movf	i1printf@ap,w
  3903  025D  0084               	movwf	4
  3904  025E  1383               	bcf	3,7	;select IRP bank0
  3905  025F  0800               	movf	0,w
  3906  0260  00A7               	movwf	??i1_printf
  3907  0261  0827               	movf	??i1_printf,w
  3908  0262  00B4               	movwf	i1printf@c
  3909  0263  3002               	movlw	2
  3910  0264  00A7               	movwf	??i1_printf
  3911  0265  0827               	movf	??i1_printf,w
  3912  0266  07AF               	addwf	i1printf@ap,f
  3913  0267                     i1l1697:	
  3914                           ;doprnt.c: 802: default:
  3915                           
  3916                           
  3917                           ;doprnt.c: 805: cp = (char *)&c;
  3918  0267  3034               	movlw	(low (i1printf@c| 0))& (0+255)
  3919  0268  00A7               	movwf	??i1_printf
  3920  0269  0827               	movf	??i1_printf,w
  3921  026A  00AB               	movwf	i1printf@cp
  3922                           
  3923                           ;doprnt.c: 806: len = 1;
  3924  026B  3001               	movlw	1
  3925  026C  00B0               	movwf	i1printf@len
  3926  026D  3000               	movlw	0
  3927  026E  00B1               	movwf	i1printf@len+1
  3928                           
  3929                           ;doprnt.c: 807: goto dostring;
  3930  026F  2A19               	goto	i1l1677
  3931  0270                     i1l1701:	
  3932                           ;doprnt.c: 817: case 'u':
  3933                           
  3934                           
  3935                           ;doprnt.c: 818: flag |= 0xC0;
  3936  0270  30C0               	movlw	192
  3937  0271  00A7               	movwf	??i1_printf
  3938  0272  0827               	movf	??i1_printf,w
  3939  0273  04AA               	iorwf	i1printf@flag,f
  3940                           
  3941                           ;doprnt.c: 822: }
  3942                           
  3943                           ;doprnt.c: 819: break;
  3944  0274  2A92               	goto	i1l1707
  3945  0275                     i1l1705:	
  3946  0275  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0276  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0277  0822               	movf	i1printf@f+1,w
  3949  0278  00A8               	movwf	??i1_printf+1
  3950  0279  0821               	movf	i1printf@f,w
  3951  027A  00A7               	movwf	??i1_printf
  3952  027B  0AA1               	incf	i1printf@f,f
  3953  027C  1903               	skipnz
  3954  027D  0AA2               	incf	i1printf@f+1,f
  3955  027E  0828               	movf	??i1_printf+1,w
  3956  027F  00FF               	movwf	127
  3957  0280  0827               	movf	??i1_printf,w
  3958  0281  0084               	movwf	4
  3959  0282  120A  158A  2000  120A  118A  	fcall	stringtab
  3960  0287  00B4               	movwf	i1printf@c
  3961                           
  3962                           ; Switch size 1, requested type "space"
  3963                           ; Number of cases is 3, Range of values is 0 to 117
  3964                           ; switch strategies available:
  3965                           ; Name         Instructions Cycles
  3966                           ; simple_byte           10     6 (average)
  3967                           ; jumptable            260     6 (fixed)
  3968                           ;	Chosen strategy is simple_byte
  3969  0288  3A00               	xorlw	0	; case 0
  3970  0289  1903               	skipnz
  3971  028A  2B48               	goto	i1l187
  3972  028B  3A63               	xorlw	99	; case 99
  3973  028C  1903               	skipnz
  3974  028D  2A5C               	goto	i1l1693
  3975  028E  3A16               	xorlw	22	; case 117
  3976  028F  1903               	skipnz
  3977  0290  2A70               	goto	i1l1701
  3978  0291  2A67               	goto	i1l1697
  3979  0292                     i1l1707:	
  3980                           
  3981                           ;doprnt.c: 1273: {
  3982                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3983  0292  082F               	movf	i1printf@ap,w
  3984  0293  0084               	movwf	4
  3985  0294  1383               	bcf	3,7	;select IRP bank0
  3986  0295  0800               	movf	0,w
  3987  0296  00AC               	movwf	i1printf@val
  3988  0297  0A84               	incf	4,f
  3989  0298  0800               	movf	0,w
  3990  0299  00AD               	movwf	i1printf@val+1
  3991  029A  3002               	movlw	2
  3992  029B  00A7               	movwf	??i1_printf
  3993  029C  0827               	movf	??i1_printf,w
  3994  029D  07AF               	addwf	i1printf@ap,f
  3995                           
  3996                           ;doprnt.c: 1287: }
  3997                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3998  029E  01B4               	clrf	i1printf@c
  3999  029F  0AB4               	incf	i1printf@c,f
  4000  02A0  3005               	movlw	5
  4001  02A1  0634               	xorwf	i1printf@c,w
  4002  02A2  1903               	btfsc	3,2
  4003  02A3  2AC9               	goto	i1l1723
  4004  02A4                     i1l1717:	
  4005                           
  4006                           ;doprnt.c: 1306: if(val < dpowers[c])
  4007  02A4  0834               	movf	i1printf@c,w
  4008  02A5  00A7               	movwf	??i1_printf
  4009  02A6  0727               	addwf	??i1_printf,w
  4010  02A7  3E12               	addlw	low (_dpowers| (0+32768))
  4011  02A8  0084               	movwf	4
  4012  02A9  3088               	movlw	high (_dpowers| (0+32768))
  4013  02AA  1803               	skipnc
  4014  02AB  3E01               	addlw	1
  4015  02AC  00FF               	movwf	127
  4016  02AD  120A  158A  2000  120A  118A  	fcall	stringtab
  4017  02B2  00A8               	movwf	??i1_printf+1
  4018  02B3  120A  158A  2000  120A  118A  	fcall	stringtab
  4019  02B8  00A9               	movwf	??i1_printf+2
  4020  02B9  0829               	movf	??i1_printf+2,w
  4021  02BA  022D               	subwf	i1printf@val+1,w
  4022  02BB  1D03               	skipz
  4023  02BC  2ABF               	goto	u185_25
  4024  02BD  0828               	movf	??i1_printf+1,w
  4025  02BE  022C               	subwf	i1printf@val,w
  4026  02BF                     u185_25:	
  4027  02BF  1C03               	btfss	3,0
  4028  02C0  2AC9               	goto	i1l1723
  4029                           
  4030                           ;doprnt.c: 1307: break;
  4031  02C1  3001               	movlw	1
  4032  02C2  00A7               	movwf	??i1_printf
  4033  02C3  0827               	movf	??i1_printf,w
  4034  02C4  07B4               	addwf	i1printf@c,f
  4035  02C5  3005               	movlw	5
  4036  02C6  0634               	xorwf	i1printf@c,w
  4037  02C7  1D03               	btfss	3,2
  4038  02C8  2AA4               	goto	i1l1717
  4039  02C9                     i1l1723:	
  4040                           
  4041                           ;doprnt.c: 1381: if(width > c)
  4042  02C9  0834               	movf	i1printf@c,w
  4043  02CA  00A7               	movwf	??i1_printf
  4044  02CB  01A8               	clrf	??i1_printf+1
  4045  02CC  1BA7               	btfsc	??i1_printf,7
  4046  02CD  03A8               	decf	??i1_printf+1,f
  4047  02CE  0828               	movf	??i1_printf+1,w
  4048  02CF  3A80               	xorlw	128
  4049  02D0  00A9               	movwf	??i1_printf+2
  4050  02D1  0833               	movf	i1printf@width+1,w
  4051  02D2  3A80               	xorlw	128
  4052  02D3  0229               	subwf	??i1_printf+2,w
  4053  02D4  1D03               	skipz
  4054  02D5  2AD8               	goto	u187_25
  4055  02D6  0832               	movf	i1printf@width,w
  4056  02D7  0227               	subwf	??i1_printf,w
  4057  02D8                     u187_25:	
  4058  02D8  1803               	skipnc
  4059  02D9  2AE8               	goto	i1l1727
  4060                           
  4061                           ;doprnt.c: 1382: width -= c;
  4062  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  4063  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  4064  02DC  0834               	movf	i1printf@c,w
  4065  02DD  00A7               	movwf	??i1_printf
  4066  02DE  01A8               	clrf	??i1_printf+1
  4067  02DF  1BA7               	btfsc	??i1_printf,7
  4068  02E0  03A8               	decf	??i1_printf+1,f
  4069  02E1  0827               	movf	??i1_printf,w
  4070  02E2  02B2               	subwf	i1printf@width,f
  4071  02E3  0828               	movf	??i1_printf+1,w
  4072  02E4  1C03               	skipc
  4073  02E5  03B3               	decf	i1printf@width+1,f
  4074  02E6  02B3               	subwf	i1printf@width+1,f
  4075  02E7  2AEC               	goto	i1l1729
  4076  02E8                     i1l1727:	
  4077                           
  4078                           ;doprnt.c: 1383: else
  4079                           ;doprnt.c: 1384: width = 0;
  4080  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  4081  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  4082  02EA  01B2               	clrf	i1printf@width
  4083  02EB  01B3               	clrf	i1printf@width+1
  4084  02EC                     i1l1729:	
  4085                           
  4086                           ;doprnt.c: 1422: {
  4087                           ;doprnt.c: 1424: if(width
  4088                           ;doprnt.c: 1428: )
  4089  02EC  0832               	movf	i1printf@width,w
  4090  02ED  0433               	iorwf	i1printf@width+1,w
  4091  02EE  1903               	btfsc	3,2
  4092  02EF  2B02               	goto	i1l1735
  4093  02F0                     i1l1731:	
  4094                           ;doprnt.c: 1429: do
  4095                           
  4096                           
  4097                           ;doprnt.c: 1430: (putch(' ') );
  4098  02F0  3020               	movlw	32
  4099  02F1  120A  158A  262C  120A  118A  	fcall	i1_putch
  4100                           
  4101                           ;doprnt.c: 1431: while(--width);
  4102  02F6  30FF               	movlw	255
  4103  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  4104  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  4105  02F9  07B2               	addwf	i1printf@width,f
  4106  02FA  1803               	skipnc
  4107  02FB  0AB3               	incf	i1printf@width+1,f
  4108  02FC  30FF               	movlw	255
  4109  02FD  07B3               	addwf	i1printf@width+1,f
  4110  02FE  0832               	movf	i1printf@width,w
  4111  02FF  0433               	iorwf	i1printf@width+1,w
  4112  0300  1D03               	btfss	3,2
  4113  0301  2AF0               	goto	i1l1731
  4114  0302                     i1l1735:	
  4115                           
  4116                           ;doprnt.c: 1469: }
  4117                           ;doprnt.c: 1472: prec = c;
  4118  0302  0834               	movf	i1printf@c,w
  4119  0303  00A7               	movwf	??i1_printf
  4120  0304  0827               	movf	??i1_printf,w
  4121  0305  00AE               	movwf	i1printf@prec
  4122  0306                     i1l1741:	
  4123                           ;doprnt.c: 1474: while(prec--) {
  4124                           
  4125  0306  30FF               	movlw	255
  4126  0307  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0308  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0309  00A7               	movwf	??i1_printf
  4129  030A  0827               	movf	??i1_printf,w
  4130  030B  07AE               	addwf	i1printf@prec,f
  4131  030C  0A2E               	incf	i1printf@prec,w
  4132  030D  1903               	btfsc	3,2
  4133  030E  299E               	goto	i1l1743
  4134                           
  4135                           ;doprnt.c: 1478: {
  4136                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4137  030F  300A               	movlw	10
  4138  0310  00F9               	movwf	i1___lwmod@divisor
  4139  0311  3000               	movlw	0
  4140  0312  00FA               	movwf	i1___lwmod@divisor+1
  4141  0313  082E               	movf	i1printf@prec,w
  4142  0314  00A7               	movwf	??i1_printf
  4143  0315  0727               	addwf	??i1_printf,w
  4144  0316  3E12               	addlw	low (_dpowers| (0+32768))
  4145  0317  0084               	movwf	4
  4146  0318  3088               	movlw	high (_dpowers| (0+32768))
  4147  0319  1803               	skipnc
  4148  031A  3E01               	addlw	1
  4149  031B  00FF               	movwf	127
  4150  031C  120A  158A  2000  120A  118A  	fcall	stringtab
  4151  0321  00F1               	movwf	i1___lwdiv@divisor
  4152  0322  120A  158A  2000  120A  118A  	fcall	stringtab
  4153  0327  00F2               	movwf	i1___lwdiv@divisor+1
  4154  0328  082D               	movf	i1printf@val+1,w
  4155  0329  00F4               	movwf	i1___lwdiv@dividend+1
  4156  032A  082C               	movf	i1printf@val,w
  4157  032B  00F3               	movwf	i1___lwdiv@dividend
  4158  032C  120A  158A  2753  120A  118A  	fcall	i1___lwdiv
  4159  0331  0872               	movf	?i1___lwdiv+1,w
  4160  0332  00FC               	movwf	i1___lwmod@dividend+1
  4161  0333  0871               	movf	?i1___lwdiv,w
  4162  0334  00FB               	movwf	i1___lwmod@dividend
  4163  0335  120A  158A  26B0  120A  118A  	fcall	i1___lwmod
  4164  033A  0879               	movf	?i1___lwmod,w
  4165  033B  3E30               	addlw	48
  4166  033C  1283               	bcf	3,5	;RP0=0, select bank0
  4167  033D  1303               	bcf	3,6	;RP1=0, select bank0
  4168  033E  00A8               	movwf	??i1_printf+1
  4169  033F  0828               	movf	??i1_printf+1,w
  4170  0340  00B4               	movwf	i1printf@c
  4171                           
  4172                           ;doprnt.c: 1523: }
  4173                           ;doprnt.c: 1524: (putch(c) );
  4174  0341  0834               	movf	i1printf@c,w
  4175  0342  120A  158A  262C  120A  118A  	fcall	i1_putch
  4176  0347  2B06               	goto	i1l1741
  4177  0348                     i1l187:	
  4178                           ;doprnt.c: 1540: return 0;
  4179                           ;	Return value of i1_printf is never used
  4180                           
  4181                           ;doprnt.c: 1525: }
  4182                           ;doprnt.c: 1533: }
  4183                           ;doprnt.c: 1535: alldone:
  4184                           
  4185  0348  0008               	return
  4186  0349                     __end_ofi1_printf:	
  4187                           
  4188                           	psect	text13
  4189  0E2C                     __ptext13:	
  4190 ;; *************** function i1_putch *****************
  4191 ;; Defined at:
  4192 ;;		line 147 in file "main.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  c               1    wreg     unsigned char 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  c               1    0[COMMON] unsigned char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      void 
  4199 ;; Registers used:
  4200 ;;		wreg
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4206 ;;      Params:         0       0       0       0       0
  4207 ;;      Locals:         1       0       0       0       0
  4208 ;;      Temps:          0       0       0       0       0
  4209 ;;      Totals:         1       0       0       0       0
  4210 ;;Total ram usage:        1 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		i1_printf
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function i1_putch
  4221  0E2C                     i1_putch:	
  4222                           
  4223                           ;incstack = 0
  4224                           ; Regs used in i1_putch: [wreg]
  4225                           ;i1putch@c stored from wreg
  4226  0E2C  00F1               	movwf	i1putch@c
  4227  0E2D                     i1l106:	
  4228                           ;main.c: 149: while (TXSTAbits.TRMT == 0) {
  4229                           
  4230  0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  4231  0E2E  1303               	bcf	3,6	;RP1=0, select bank1
  4232  0E2F  1C98               	btfss	24,1	;volatile
  4233  0E30  2E2D               	goto	i1l106
  4234                           
  4235                           ;main.c: 150: };
  4236                           ;main.c: 151: TXREG = c;
  4237  0E31  0871               	movf	i1putch@c,w
  4238  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  4240  0E34  0099               	movwf	25	;volatile
  4241  0E35  0008               	return
  4242  0E36                     __end_ofi1_putch:	
  4243                           
  4244                           	psect	text14
  4245  0E4E                     __ptext14:	
  4246 ;; *************** function i1_isdigit *****************
  4247 ;; Defined at:
  4248 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  c               1    wreg     unsigned char 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  c               1    1[COMMON] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;		None               void
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4262 ;;      Params:         0       0       0       0       0
  4263 ;;      Locals:         2       0       0       0       0
  4264 ;;      Temps:          0       0       0       0       0
  4265 ;;      Totals:         2       0       0       0       0
  4266 ;;Total ram usage:        2 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		i1_printf
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           
  4276                           ;psect for function i1_isdigit
  4277  0E4E                     i1_isdigit:	
  4278                           
  4279                           ;incstack = 0
  4280                           ; Regs used in i1_isdigit: [wreg+status,2+status,0]
  4281                           ;i1isdigit@c stored from wreg
  4282  0E4E  00F2               	movwf	i1isdigit@c
  4283  0E4F  01F1               	clrf	i1_isdigit$694
  4284  0E50  303A               	movlw	58
  4285  0E51  0272               	subwf	i1isdigit@c,w
  4286  0E52  1803               	skipnc
  4287  0E53  2E5A               	goto	i1l1393
  4288  0E54  3030               	movlw	48
  4289  0E55  0272               	subwf	i1isdigit@c,w
  4290  0E56  1C03               	skipc
  4291  0E57  2E5A               	goto	i1l1393
  4292  0E58  01F1               	clrf	i1_isdigit$694
  4293  0E59  0AF1               	incf	i1_isdigit$694,f
  4294  0E5A                     i1l1393:	
  4295  0E5A  0C71               	rrf	i1_isdigit$694,w
  4296  0E5B  0008               	return
  4297  0E5C                     __end_ofi1_isdigit:	
  4298                           
  4299                           	psect	text15
  4300  0E6C                     __ptext15:	
  4301 ;; *************** function i1___wmul *****************
  4302 ;; Defined at:
  4303 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  multiplier      2    0[COMMON] unsigned int 
  4306 ;;  multiplicand    2    2[COMMON] unsigned int 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  __wmul          2    4[COMMON] unsigned int 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  2    0[COMMON] unsigned int 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4318 ;;      Params:         4       0       0       0       0
  4319 ;;      Locals:         2       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0
  4321 ;;      Totals:         6       0       0       0       0
  4322 ;;Total ram usage:        6 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		i1_printf
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           
  4332                           ;psect for function i1___wmul
  4333  0E6C                     i1___wmul:	
  4334                           
  4335                           ;incstack = 0
  4336                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  4337  0E6C  01F5               	clrf	i1___wmul@product
  4338  0E6D  01F6               	clrf	i1___wmul@product+1
  4339  0E6E                     i1l1373:	
  4340  0E6E  1C71               	btfss	i1___wmul@multiplier,0
  4341  0E6F  2E76               	goto	i1l271
  4342  0E70  0873               	movf	i1___wmul@multiplicand,w
  4343  0E71  07F5               	addwf	i1___wmul@product,f
  4344  0E72  1803               	skipnc
  4345  0E73  0AF6               	incf	i1___wmul@product+1,f
  4346  0E74  0874               	movf	i1___wmul@multiplicand+1,w
  4347  0E75  07F6               	addwf	i1___wmul@product+1,f
  4348  0E76                     i1l271:	
  4349  0E76  3001               	movlw	1
  4350  0E77                     u134_25:	
  4351  0E77  1003               	clrc
  4352  0E78  0DF3               	rlf	i1___wmul@multiplicand,f
  4353  0E79  0DF4               	rlf	i1___wmul@multiplicand+1,f
  4354  0E7A  3EFF               	addlw	-1
  4355  0E7B  1D03               	skipz
  4356  0E7C  2E77               	goto	u134_25
  4357  0E7D  3001               	movlw	1
  4358  0E7E                     u135_25:	
  4359  0E7E  1003               	clrc
  4360  0E7F  0CF2               	rrf	i1___wmul@multiplier+1,f
  4361  0E80  0CF1               	rrf	i1___wmul@multiplier,f
  4362  0E81  3EFF               	addlw	-1
  4363  0E82  1D03               	skipz
  4364  0E83  2E7E               	goto	u135_25
  4365  0E84  0871               	movf	i1___wmul@multiplier,w
  4366  0E85  0472               	iorwf	i1___wmul@multiplier+1,w
  4367  0E86  1D03               	btfss	3,2
  4368  0E87  2E6E               	goto	i1l1373
  4369  0E88  0876               	movf	i1___wmul@product+1,w
  4370  0E89  00F2               	movwf	?i1___wmul+1
  4371  0E8A  0875               	movf	i1___wmul@product,w
  4372  0E8B  00F1               	movwf	?i1___wmul
  4373  0E8C  0008               	return
  4374  0E8D                     __end_ofi1___wmul:	
  4375                           
  4376                           	psect	text16
  4377  0EB0                     __ptext16:	
  4378 ;; *************** function i1___lwmod *****************
  4379 ;; Defined at:
  4380 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  divisor         2    8[COMMON] unsigned int 
  4383 ;;  dividend        2   10[COMMON] unsigned int 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  __lwmod         1    0[BANK0 ] unsigned char 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  2    8[COMMON] unsigned int 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4395 ;;      Params:         4       0       0       0       0
  4396 ;;      Locals:         0       1       0       0       0
  4397 ;;      Temps:          1       0       0       0       0
  4398 ;;      Totals:         5       1       0       0       0
  4399 ;;Total ram usage:        6 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		i1_printf
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function i1___lwmod
  4410  0EB0                     i1___lwmod:	
  4411                           
  4412                           ;incstack = 0
  4413                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  4414  0EB0  0879               	movf	i1___lwmod@divisor,w
  4415  0EB1  047A               	iorwf	i1___lwmod@divisor+1,w
  4416  0EB2  1903               	btfsc	3,2
  4417  0EB3  2EDF               	goto	i1l1441
  4418  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  4419  0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  4420  0EB6  01A0               	clrf	i1___lwmod@counter
  4421  0EB7  0AA0               	incf	i1___lwmod@counter,f
  4422  0EB8                     i1l1431:	
  4423  0EB8  1BFA               	btfsc	i1___lwmod@divisor+1,7
  4424  0EB9  2EC6               	goto	i1l1433
  4425  0EBA  3001               	movlw	1
  4426  0EBB                     u147_25:	
  4427  0EBB  1003               	clrc
  4428  0EBC  0DF9               	rlf	i1___lwmod@divisor,f
  4429  0EBD  0DFA               	rlf	i1___lwmod@divisor+1,f
  4430  0EBE  3EFF               	addlw	-1
  4431  0EBF  1D03               	skipz
  4432  0EC0  2EBB               	goto	u147_25
  4433  0EC1  3001               	movlw	1
  4434  0EC2  00FD               	movwf	??i1___lwmod
  4435  0EC3  087D               	movf	??i1___lwmod,w
  4436  0EC4  07A0               	addwf	i1___lwmod@counter,f
  4437  0EC5  2EB8               	goto	i1l1431
  4438  0EC6                     i1l1433:	
  4439  0EC6  087A               	movf	i1___lwmod@divisor+1,w
  4440  0EC7  027C               	subwf	i1___lwmod@dividend+1,w
  4441  0EC8  1D03               	skipz
  4442  0EC9  2ECC               	goto	u149_25
  4443  0ECA  0879               	movf	i1___lwmod@divisor,w
  4444  0ECB  027B               	subwf	i1___lwmod@dividend,w
  4445  0ECC                     u149_25:	
  4446  0ECC  1C03               	skipc
  4447  0ECD  2ED4               	goto	i1l1437
  4448  0ECE  0879               	movf	i1___lwmod@divisor,w
  4449  0ECF  02FB               	subwf	i1___lwmod@dividend,f
  4450  0ED0  087A               	movf	i1___lwmod@divisor+1,w
  4451  0ED1  1C03               	skipc
  4452  0ED2  03FC               	decf	i1___lwmod@dividend+1,f
  4453  0ED3  02FC               	subwf	i1___lwmod@dividend+1,f
  4454  0ED4                     i1l1437:	
  4455  0ED4  3001               	movlw	1
  4456  0ED5                     u150_25:	
  4457  0ED5  1003               	clrc
  4458  0ED6  0CFA               	rrf	i1___lwmod@divisor+1,f
  4459  0ED7  0CF9               	rrf	i1___lwmod@divisor,f
  4460  0ED8  3EFF               	addlw	-1
  4461  0ED9  1D03               	skipz
  4462  0EDA  2ED5               	goto	u150_25
  4463  0EDB  3001               	movlw	1
  4464  0EDC  02A0               	subwf	i1___lwmod@counter,f
  4465  0EDD  1D03               	btfss	3,2
  4466  0EDE  2EC6               	goto	i1l1433
  4467  0EDF                     i1l1441:	
  4468  0EDF  087C               	movf	i1___lwmod@dividend+1,w
  4469  0EE0  00FA               	movwf	?i1___lwmod+1
  4470  0EE1  087B               	movf	i1___lwmod@dividend,w
  4471  0EE2  00F9               	movwf	?i1___lwmod
  4472  0EE3  0008               	return
  4473  0EE4                     __end_ofi1___lwmod:	
  4474                           
  4475                           	psect	text17
  4476  0F53                     __ptext17:	
  4477 ;; *************** function i1___lwdiv *****************
  4478 ;; Defined at:
  4479 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  divisor         2    0[COMMON] unsigned int 
  4482 ;;  dividend        2    2[COMMON] unsigned int 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  __lwdiv         2    5[COMMON] unsigned int 
  4485 ;;  __lwdiv         1    7[COMMON] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  2    0[COMMON] unsigned int 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4495 ;;      Params:         4       0       0       0       0
  4496 ;;      Locals:         3       0       0       0       0
  4497 ;;      Temps:          1       0       0       0       0
  4498 ;;      Totals:         8       0       0       0       0
  4499 ;;Total ram usage:        8 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		i1_printf
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           
  4509                           ;psect for function i1___lwdiv
  4510  0F53                     i1___lwdiv:	
  4511                           
  4512                           ;incstack = 0
  4513                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  4514  0F53  01F6               	clrf	i1___lwdiv@quotient
  4515  0F54  01F7               	clrf	i1___lwdiv@quotient+1
  4516  0F55  0871               	movf	i1___lwdiv@divisor,w
  4517  0F56  0472               	iorwf	i1___lwdiv@divisor+1,w
  4518  0F57  1903               	btfsc	3,2
  4519  0F58  2F8A               	goto	i1l1419
  4520  0F59  01F8               	clrf	i1___lwdiv@counter
  4521  0F5A  0AF8               	incf	i1___lwdiv@counter,f
  4522  0F5B                     i1l1407:	
  4523  0F5B  1BF2               	btfsc	i1___lwdiv@divisor+1,7
  4524  0F5C  2F69               	goto	i1l1409
  4525  0F5D  3001               	movlw	1
  4526  0F5E                     u140_25:	
  4527  0F5E  1003               	clrc
  4528  0F5F  0DF1               	rlf	i1___lwdiv@divisor,f
  4529  0F60  0DF2               	rlf	i1___lwdiv@divisor+1,f
  4530  0F61  3EFF               	addlw	-1
  4531  0F62  1D03               	skipz
  4532  0F63  2F5E               	goto	u140_25
  4533  0F64  3001               	movlw	1
  4534  0F65  00F5               	movwf	??i1___lwdiv
  4535  0F66  0875               	movf	??i1___lwdiv,w
  4536  0F67  07F8               	addwf	i1___lwdiv@counter,f
  4537  0F68  2F5B               	goto	i1l1407
  4538  0F69                     i1l1409:	
  4539  0F69  3001               	movlw	1
  4540  0F6A                     u142_25:	
  4541  0F6A  1003               	clrc
  4542  0F6B  0DF6               	rlf	i1___lwdiv@quotient,f
  4543  0F6C  0DF7               	rlf	i1___lwdiv@quotient+1,f
  4544  0F6D  3EFF               	addlw	-1
  4545  0F6E  1D03               	skipz
  4546  0F6F  2F6A               	goto	u142_25
  4547  0F70  0872               	movf	i1___lwdiv@divisor+1,w
  4548  0F71  0274               	subwf	i1___lwdiv@dividend+1,w
  4549  0F72  1D03               	skipz
  4550  0F73  2F76               	goto	u143_25
  4551  0F74  0871               	movf	i1___lwdiv@divisor,w
  4552  0F75  0273               	subwf	i1___lwdiv@dividend,w
  4553  0F76                     u143_25:	
  4554  0F76  1C03               	skipc
  4555  0F77  2F7F               	goto	i1l1415
  4556  0F78  0871               	movf	i1___lwdiv@divisor,w
  4557  0F79  02F3               	subwf	i1___lwdiv@dividend,f
  4558  0F7A  0872               	movf	i1___lwdiv@divisor+1,w
  4559  0F7B  1C03               	skipc
  4560  0F7C  03F4               	decf	i1___lwdiv@dividend+1,f
  4561  0F7D  02F4               	subwf	i1___lwdiv@dividend+1,f
  4562  0F7E  1476               	bsf	i1___lwdiv@quotient,0
  4563  0F7F                     i1l1415:	
  4564  0F7F  3001               	movlw	1
  4565  0F80                     u144_25:	
  4566  0F80  1003               	clrc
  4567  0F81  0CF2               	rrf	i1___lwdiv@divisor+1,f
  4568  0F82  0CF1               	rrf	i1___lwdiv@divisor,f
  4569  0F83  3EFF               	addlw	-1
  4570  0F84  1D03               	skipz
  4571  0F85  2F80               	goto	u144_25
  4572  0F86  3001               	movlw	1
  4573  0F87  02F8               	subwf	i1___lwdiv@counter,f
  4574  0F88  1D03               	btfss	3,2
  4575  0F89  2F69               	goto	i1l1409
  4576  0F8A                     i1l1419:	
  4577  0F8A  0877               	movf	i1___lwdiv@quotient+1,w
  4578  0F8B  00F2               	movwf	?i1___lwdiv+1
  4579  0F8C  0876               	movf	i1___lwdiv@quotient,w
  4580  0F8D  00F1               	movwf	?i1___lwdiv
  4581  0F8E  0008               	return
  4582  0F8F                     __end_ofi1___lwdiv:	
  4583  007E                     btemp	set	126	;btemp
  4584  007E                     wtemp0	set	126


Data Sizes:
    Strings     299
    Constant    10
    Data        0
    BSS         161
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     46      47
    BANK1            80     30      46
    BANK3            85      0      48
    BANK2            96      0      96

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 10
		 -> number(BANK1[10]), 

    printf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 47
		 -> STR_18(CODE[6]), STR_17(CODE[17]), STR_16(CODE[35]), STR_15(CODE[24]), 
		 -> STR_14(CODE[14]), STR_13(CODE[18]), STR_12(CODE[47]), STR_11(CODE[10]), 
		 -> STR_10(CODE[16]), STR_9(CODE[7]), STR_8(CODE[9]), STR_7(CODE[25]), 
		 -> STR_6(CODE[10]), STR_5(CODE[16]), STR_4(CODE[17]), STR_3(CODE[5]), 
		 -> STR_2(CODE[41]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?i1_printf(BANK0[2]), ?_printf(BANK1[2]), 

    read_line@s	PTR unsigned char  size(1) Largest target is 10
		 -> number(BANK1[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    i1_printf->i1___lwmod
    i1___lwmod->i1___lwdiv

Critical Paths under _main in BANK0

    _main->_printf
    _read_line->_putch
    _printf->___lwmod
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _ISR in BANK0

    _ISR->i1_printf
    i1_printf->i1___lwmod

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11     7      4    4767
                                             19 BANK1     11     7      4
                               _atoi
                             _printf
                          _read_char
                          _read_line
                   _setup_peripheals
 ---------------------------------------------------------------------------------
 (1) _setup_peripheals                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_line                                            8     6      2     660
                                             30 BANK0      8     6      2
                              _putch
                          _read_char
 ---------------------------------------------------------------------------------
 (2) _read_char                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              26    18      8    3373
                                             43 BANK0      3     3      0
                                              0 BANK1     19    11      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                             37 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     734
                                             35 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     348
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  8     8      0    1418
                                             21 BANK0      8     8      0
                           i1_printf
 ---------------------------------------------------------------------------------
 (4) i1_printf                                            24    18      6    1418
                                              1 BANK0     20    14      6
                          i1___lwdiv
                          i1___lwmod
                           i1___wmul
                          i1_isdigit
                            i1_putch
 ---------------------------------------------------------------------------------
 (5) i1_putch                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) i1_isdigit                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) i1___lwmod                                            6     2      4     211
                                              8 COMMON     5     1      4
                                              0 BANK0      1     1      0
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atoi
     ___wmul
     _isdigit
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
   _read_char
   _read_line
     _putch
     _read_char
   _setup_peripheals

 _ISR (ROOT)
   i1_printf
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1___wmul
     i1_isdigit
     i1_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      D       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      FA       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      2F       5       58.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1E      2E       7       57.5%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0      30       9       56.5%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      60      11      100.0%
DATA                 0      0      FA      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr 14 18:05:09 2018

                        _a 00C0                          _b 00BF                          _c 00C3  
                        _e 00C1                          _i 00C2                          pc 0002  
              __CFG_CP$OFF 0000                         fsr 0004        ___wmul@multiplicand 003F  
         i1___wmul@product 0075                        l112 0E42                        l106 0E39  
                      l271 0E99                        l187 0585               __CFG_CPD$OFF 0000  
                      _ISR 00E0                        _val 004E                        fsr0 0004  
                      indf 0000               __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000  
                     ?_ISR 0071                       l1301 0E6A                       l2021 060C  
                     l1307 0E91                       l1331 0036                       l2019 0600  
                     l1341 0057                       l2061 06E6                       l2029 061D  
                     l2039 068D                       l2063 0763                       l1337 004C  
                     l1329 0028                       l1353 0EEC                       l1355 0EFA  
                     l1363 0F13                       l2091 07C0                       l1285 0E4C  
                     l1613 00B5                       l2093 07CE                       l2085 079A  
                     l1359 0F08                       l1607 008C                       l2079 079F  
                     l2087 07B3                       l2095 07DB                       l1625 0F99  
                     l1643 0FB8                       l1627 0F92                       l1653 0FFB  
                     l1645 0FBC                       l1637 0FB2                       l1629 0F9E  
                     l1647 0FEA                       l1911 03FE                       l1903 039F  
                     l1591 0076                       l1921 0425                       l1931 0456  
                     l1915 040F                       l1595 0062                       l1941 0495  
                     l1925 0436                       l1951 04AB                       l1935 0463  
                     l1927 0443                       l1919 0411                       l1961 050D  
                     l1963 0511                       l1939 046C                       l1965 0515  
                     l1957 04DC                       l1975 052F                       l1983 0596  
                     l1969 0527                       l1897 0380                       l1977 0351  
                     l1999 05CD                       STR_1 092D                       STR_2 084B  
                     STR_3 0942                       STR_4 08DA                       STR_5 08FC  
                     STR_6 091A                       STR_7 0897                       STR_8 0924  
                     STR_9 0935                       u1205 002B                       u1225 0037  
                     u1305 0F09                       u1235 0043                       u1165 0E9A  
                     u1245 004D                       u1175 0EA1                       u2225 0406  
                     u1275 0EEF                       u2510 07D7                       u1295 0F00  
                     u2265 04CE                       u2370 05FD                       u1715 00C3  
                     u2285 04F5                       u2390 0609                       u2490 07CB  
                     u1695 0095                       _TMR1 000E               __CFG_WRT$OFF 0000  
                     _atoi 0F8F                       _main 0586                       btemp 007E  
            i1printf@width 0032                       start 0012            __end_ofi1_putch 0E36  
                    ??_ISR 0035                      ?_atoi 0043                      ?_main 00B3  
                    STR_10 08FC                      STR_11 091A                      STR_12 081C  
                    STR_13 08C8                      STR_14 090C                      STR_15 08B0  
                    STR_16 0874                      STR_17 08EB              __CFG_WDTE$OFF 0000  
                    STR_18 093C            __end_of___lwdiv 005C                      i1l106 0E2D  
                    i1l136 010C                      i1l138 0180                      i1l139 015F  
                    i1l271 0E76            __end_of___lwmod 0F18                      i1l187 0348  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TXREG 0019                 i1isdigit@c 0072              __CFG_PWRTE$ON 0000  
       i1___lwmod@dividend 007B            __end_of_dpowers 081C                      _array 0190  
          __end_of_isdigit 0E6C                      atoi@a 0048                      atoi@s 004A  
                    _putch 0E36             __CFG_BOREN$OFF 0000                      pclath 000A  
         __end_ofi1___wmul 0E8D                      status 0003        i1___wmul@multiplier 0071  
                    wtemp0 007E         __size_ofi1___lwdiv 003C         __size_ofi1___lwmod 0034  
         __end_ofi1_printf 0349                 i1printf@ap 002F                 i1printf@cp 002B  
          __initialization 07E1               __end_of_atoi 1000               __end_of_main 07E1  
       __size_ofi1_isdigit 000E                     ??_atoi 0045                     ??_main 00B7  
                   ?_putch 0071                     i1l1415 0F7F                     i1l1407 0F5B  
                   i1l1431 0EB8                     i1l1409 0F69                     i1l1433 0EC6  
                   i1l1441 0EDF                     i1l1419 0F8A                     i1l1437 0ED4  
                   i1l1373 0E6E                     i1l1701 0270                     i1l1393 0E5A  
                   i1l1705 0275                     i1l1731 02F0                     i1l1723 02C9  
                   i1l1707 0292                     i1l1741 0306                     i1l1717 02A4  
                   i1l1735 0302                     i1l1727 02E8                     i1l1663 01C1  
                   i1l1743 019E                     i1l1729 02EC                     i1l1681 022A  
                   i1l1691 024F                     i1l1693 025C                     i1l1685 022C  
                   i1l1677 0219                     i1l1669 01DA                     i1l1687 0240  
                   i1l1697 0267                     i1l1881 012B                     i1l1875 0110  
                   i1l1877 0128                     u140_25 0F5E                     u214_20 0119  
                   u142_25 0F6A                     u150_25 0ED5                     u134_25 0E77  
                   u215_24 011C                     u143_25 0F76                     u135_25 0E7E  
                   u216_20 0125                     u144_25 0F80                     u147_25 0EBB  
                   u149_25 0ECC                     u181_25 0221                     u185_25 02BF  
                   u187_25 02D8                  ??i1_putch 0071                     ___wmul 0E8D  
                ??___lwdiv 0041                  ??___lwmod 0049                     _arrayv 0110  
                   _cycles 00BE                     _number 00C4                     _printf 0349  
        __end_ofi1___lwdiv 0F8F          __end_ofi1___lwmod 0EE4                  ??_isdigit 003D  
                   saved_w 007E                     putch@c 003D  __size_of_setup_peripheals 003B  
        __end_ofi1_isdigit 0E5C    __end_of__initialization 07FC                i1printf@len 0030  
              i1printf@val 002C             __pcstackCOMMON 0071              __end_of_putch 0E42  
                ?i1___wmul 0071                  ?i1_printf 0021                    ??_putch 003D  
               __pbssBANK0 004E                 __pbssBANK1 00BE                 __pbssBANK2 0110  
               __pbssBANK3 0190         __size_of_read_char 000C         __size_of_read_line 0084  
               __pmaintext 0586                    ?___wmul 003D                 __pintentry 0004  
                  ?_printf 00A0                 ??i1___wmul 0075              i1_isdigit$694 0071  
               ??i1_printf 0027                 __stringtab 0800                    i1_putch 0E2C  
          __size_of___wmul 0023                    ___lwdiv 001E                    ___lwmod 0EE4  
                  __ptext1 0F18                    __ptext2 005C                    __ptext3 0E42  
                  __ptext4 0349                    __ptext5 0E36                    __ptext6 0EE4  
                  __ptext7 001E                    __ptext8 0F8F                    __ptext9 0E5C  
          __size_of_printf 023D               __size_of_ISR 00B8                  _T1CONbits 0010  
                  _dpowers 0812          i1___lwdiv@divisor 0071                    _isdigit 0E5C  
        i1___lwdiv@counter 0078          __end_of_read_char 0E4E          __end_of_read_line 00E0  
         _setup_peripheals 0F18                    clrloop0 0017       end_of_initialization 07FC  
                _RCSTAbits 0018                    printf@c 00B2                    printf@f 00A0  
             __pstringtext 0800      i1___wmul@multiplicand 0073                  _PORTAbits 0005  
                _PORTBbits 0006                  _PORTCbits 0007                  _TRISCbits 0087  
                i1___lwdiv 0F53                  i1___lwmod 0EB0                printf@width 00B0  
                _TXSTAbits 0098                  i1_isdigit 0E4E               i1printf@flag 002A  
             i1printf@prec 002E             __end_of___wmul 0EB0          i1___lwmod@divisor 0079  
        i1___lwmod@counter 0020             __end_of_printf 0586        start_initialization 07E1  
        __size_ofi1___wmul 0021                __end_of_ISR 0198                  i1printf@c 0034  
                i1printf@f 0021                 ?i1___lwdiv 0071                 ?i1___lwmod 0079  
        __size_ofi1_printf 01B1                 ?i1_isdigit 0071                   ??___wmul 0041  
         read_line@max_len 003E                   ??_printf 004B                 read_line@c 0045  
               read_line@i 0043                 read_line@s 0042                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0                   ?i1_putch 0071  
         ___lwdiv@dividend 003F   __end_of_setup_peripheals 0F53                   ?___lwdiv 003D  
                 ?___lwmod 0045                   ?_isdigit 0071           ___lwdiv@quotient 0042  
              ??i1___lwdiv 0075                ??i1___lwmod 007D                  _read_char 0E42  
                _read_line 005C             __size_of_putch 000C          interrupt_function 0004  
           ___wmul@product 0041                ??i1_isdigit 0071                  clear_ram0 0016  
                 _PIE1bits 008C                   _PIR1bits 000C                __stringbase 0812  
               _ADCON1bits 009F          ___wmul@multiplier 003D                   i1___wmul 0E6C  
               printf@flag 00A8                 printf@prec 00AC                   i1_printf 0198  
               ?_read_char 0071                 ?_read_line 003E                   i1putch@c 0071  
         __size_ofi1_putch 000A           __size_of___lwdiv 003E           __size_of___lwmod 0034  
       __end_of__stringtab 0812                _isdigit$694 003D           __size_of_isdigit 0010  
          ___lwdiv@divisor 003D            ___lwdiv@counter 0044                   __ptext10 0E8D  
                 __ptext11 00E0                   __ptext12 0198                   __ptext13 0E2C  
                 __ptext14 0E4E                   __ptext15 0E6C                   __ptext16 0EB0  
                 __ptext17 0F53         i1___lwdiv@dividend 0073              __size_of_atoi 0071  
            __size_of_main 025B                   atoi@sign 0047                  printf@len 00AE  
                 main@argc 00B3                   main@argv 00B5                  printf@val 00AA  
       i1___lwdiv@quotient 0076                 _INTCONbits 000B                   isdigit@c 003E  
              ??_read_char 003D                ??_read_line 0040                   intlevel1 0000  
         ___lwmod@dividend 0047                  stringcode 080A                   printf@ap 00AD  
                 printf@cp 00A9          ?_setup_peripheals 0071         ??_setup_peripheals 003D  
          ___lwmod@divisor 0045            ___lwmod@counter 004A                   stringtab 0800  
