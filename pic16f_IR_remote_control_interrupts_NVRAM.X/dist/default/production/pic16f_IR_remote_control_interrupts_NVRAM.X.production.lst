

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Jul 28 21:46:03 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.00
    32                           ; Generated 27/05/2018 GMT
    33                           ; 
    34                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F876A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177                           
   178                           	psect	stringtext
   179  0700                     __pstringtext:	
   180  0700                     stringtab:	
   181  0700                     __stringtab:	
   182                           
   183                           ;	String table - string pointers are 2 bytes each
   184  0700  1BFF               	btfsc	btemp+1,7
   185  0701  2F0A               	ljmp	stringcode
   186  0702  1383               	bcf	3,7
   187  0703  187F               	btfsc	btemp+1,0
   188  0704  1783               	bsf	3,7
   189  0705  0800               	movf	0,w
   190  0706  0A84               	incf	4,f
   191  0707  1903               	skipnz
   192  0708  0AFF               	incf	btemp+1,f
   193  0709  0008               	return
   194  070A                     stringcode:	
   195  070A  087F               	movf	btemp+1,w
   196  070B  397F               	andlw	127
   197  070C  008A               	movwf	10
   198  070D  0804               	movf	4,w
   199  070E  0A84               	incf	4,f
   200  070F  1903               	skipnz
   201  0710  0AFF               	incf	btemp+1,f
   202  0711  0082               	movwf	2
   203  0712                     __stringbase:	
   204  0712                     __end_of__stringtab:	
   205  0712                     _dpowers:	
   206  0712  3401               	retlw	1
   207  0713  3400               	retlw	0
   208  0714  340A               	retlw	10
   209  0715  3400               	retlw	0
   210  0716  3464               	retlw	100
   211  0717  3400               	retlw	0
   212  0718  34E8               	retlw	232
   213  0719  3403               	retlw	3
   214  071A  3410               	retlw	16
   215  071B  3427               	retlw	39
   216  071C                     __end_of_dpowers:	
   217  0013                     _SSPBUF	set	19
   218  001A                     _RCREG	set	26
   219  0019                     _TXREG	set	25
   220  0014                     _SSPCONbits	set	20
   221  0018                     _RCSTAbits	set	24
   222  0005                     _PORTA	set	5
   223  0006                     _PORTBbits	set	6
   224  0010                     _T1CONbits	set	16
   225  000C                     _PIR1bits	set	12
   226  000B                     _INTCONbits	set	11
   227  0005                     _PORTAbits	set	5
   228  0007                     _PORTCbits	set	7
   229  000E                     _TMR1	set	14
   230  0007                     _PORTC	set	7
   231  0094                     _SSPSTATbits	set	148
   232  008C                     _PIE1bits	set	140
   233  0099                     _SPBRG	set	153
   234  0098                     _TXSTAbits	set	152
   235  0087                     _TRISCbits	set	135
   236  0087                     _TRISC	set	135
   237  0086                     _TRISB	set	134
   238  0085                     _TRISA	set	133
   239  009F                     _ADCON1bits	set	159
   240  071C                     STR_12:	
   241  071C  3444               	retlw	68	;'D'
   242  071D  3469               	retlw	105	;'i'
   243  071E  3467               	retlw	103	;'g'
   244  071F  3469               	retlw	105	;'i'
   245  0720  3474               	retlw	116	;'t'
   246  0721  3461               	retlw	97	;'a'
   247  0722  3472               	retlw	114	;'r'
   248  0723  3465               	retlw	101	;'e'
   249  0724  3420               	retlw	32	;' '
   250  0725  3471               	retlw	113	;'q'
   251  0726  3475               	retlw	117	;'u'
   252  0727  3461               	retlw	97	;'a'
   253  0728  346E               	retlw	110	;'n'
   254  0729  3474               	retlw	116	;'t'
   255  072A  3465               	retlw	101	;'e'
   256  072B  3420               	retlw	32	;' '
   257  072C  3476               	retlw	118	;'v'
   258  072D  346F               	retlw	111	;'o'
   259  072E  346C               	retlw	108	;'l'
   260  072F  3474               	retlw	116	;'t'
   261  0730  3465               	retlw	101	;'e'
   262  0731  3420               	retlw	32	;' '
   263  0732  3472               	retlw	114	;'r'
   264  0733  3469               	retlw	105	;'i'
   265  0734  3470               	retlw	112	;'p'
   266  0735  3472               	retlw	114	;'r'
   267  0736  346F               	retlw	111	;'o'
   268  0737  3464               	retlw	100	;'d'
   269  0738  3475               	retlw	117	;'u'
   270  0739  3472               	retlw	114	;'r'
   271  073A  3472               	retlw	114	;'r'
   272  073B  3465               	retlw	101	;'e'
   273  073C  3420               	retlw	32	;' '
   274  073D  346C               	retlw	108	;'l'
   275  073E  3461               	retlw	97	;'a'
   276  073F  3420               	retlw	32	;' '
   277  0740  3473               	retlw	115	;'s'
   278  0741  3465               	retlw	101	;'e'
   279  0742  3471               	retlw	113	;'q'
   280  0743  3475               	retlw	117	;'u'
   281  0744  3465               	retlw	101	;'e'
   282  0745  346E               	retlw	110	;'n'
   283  0746  347A               	retlw	122	;'z'
   284  0747  3461               	retlw	97	;'a'
   285  0748  343A               	retlw	58	;':'
   286  0749  3420               	retlw	32	;' '
   287  074A  3400               	retlw	0
   288  074B                     STR_2:	
   289  074B  3452               	retlw	82	;'R'
   290  074C  3465               	retlw	101	;'e'
   291  074D  3467               	retlw	103	;'g'
   292  074E  3469               	retlw	105	;'i'
   293  074F  3473               	retlw	115	;'s'
   294  0750  3474               	retlw	116	;'t'
   295  0751  3472               	retlw	114	;'r'
   296  0752  3461               	retlw	97	;'a'
   297  0753  3472               	retlw	114	;'r'
   298  0754  3465               	retlw	101	;'e'
   299  0755  3428               	retlw	40	;'('
   300  0756  3465               	retlw	101	;'e'
   301  0757  3429               	retlw	41	;')'
   302  0758  342C               	retlw	44	;','
   303  0759  3420               	retlw	32	;' '
   304  075A  3472               	retlw	114	;'r'
   305  075B  3469               	retlw	105	;'i'
   306  075C  3470               	retlw	112	;'p'
   307  075D  3472               	retlw	114	;'r'
   308  075E  346F               	retlw	111	;'o'
   309  075F  3464               	retlw	100	;'d'
   310  0760  3475               	retlw	117	;'u'
   311  0761  3472               	retlw	114	;'r'
   312  0762  3472               	retlw	114	;'r'
   313  0763  3465               	retlw	101	;'e'
   314  0764  3428               	retlw	40	;'('
   315  0765  3469               	retlw	105	;'i'
   316  0766  3429               	retlw	41	;')'
   317  0767  3420               	retlw	32	;' '
   318  0768  346F               	retlw	111	;'o'
   319  0769  3420               	retlw	32	;' '
   320  076A  3474               	retlw	116	;'t'
   321  076B  3465               	retlw	101	;'e'
   322  076C  3473               	retlw	115	;'s'
   323  076D  3474               	retlw	116	;'t'
   324  076E  3428               	retlw	40	;'('
   325  076F  3474               	retlw	116	;'t'
   326  0770  3429               	retlw	41	;')'
   327  0771  343A               	retlw	58	;':'
   328  0772  3420               	retlw	32	;' '
   329  0773  3400               	retlw	0
   330  0774                     STR_15:	
   331  0774  3445               	retlw	69	;'E'
   332  0775  3452               	retlw	82	;'R'
   333  0776  3452               	retlw	82	;'R'
   334  0777  344F               	retlw	79	;'O'
   335  0778  3452               	retlw	82	;'R'
   336  0779  3445               	retlw	69	;'E'
   337  077A  343A               	retlw	58	;':'
   338  077B  3420               	retlw	32	;' '
   339  077C  3464               	retlw	100	;'d'
   340  077D  3469               	retlw	105	;'i'
   341  077E  3467               	retlw	103	;'g'
   342  077F  3469               	retlw	105	;'i'
   343  0780  3474               	retlw	116	;'t'
   344  0781  3461               	retlw	97	;'a'
   345  0782  3472               	retlw	114	;'r'
   346  0783  3465               	retlw	101	;'e'
   347  0784  3420               	retlw	32	;' '
   348  0785  3427               	retlw	39	;'''
   349  0786  3465               	retlw	101	;'e'
   350  0787  3427               	retlw	39	;'''
   351  0788  342C               	retlw	44	;','
   352  0789  3420               	retlw	32	;' '
   353  078A  3427               	retlw	39	;'''
   354  078B  3469               	retlw	105	;'i'
   355  078C  3427               	retlw	39	;'''
   356  078D  3420               	retlw	32	;' '
   357  078E  346F               	retlw	111	;'o'
   358  078F  3420               	retlw	32	;' '
   359  0790  3427               	retlw	39	;'''
   360  0791  3474               	retlw	116	;'t'
   361  0792  3427               	retlw	39	;'''
   362  0793  342E               	retlw	46	;'.'
   363  0794  340A               	retlw	10
   364  0795  340D               	retlw	13
   365  0796  3400               	retlw	0
   366  0797                     STR_7:	
   367  0797  3453               	retlw	83	;'S'
   368  0798  3465               	retlw	101	;'e'
   369  0799  346C               	retlw	108	;'l'
   370  079A  3465               	retlw	101	;'e'
   371  079B  347A               	retlw	122	;'z'
   372  079C  3469               	retlw	105	;'i'
   373  079D  346F               	retlw	111	;'o'
   374  079E  3461               	retlw	97	;'a'
   375  079F  3472               	retlw	114	;'r'
   376  07A0  3465               	retlw	101	;'e'
   377  07A1  3420               	retlw	32	;' '
   378  07A2  3469               	retlw	105	;'i'
   379  07A3  346C               	retlw	108	;'l'
   380  07A4  3420               	retlw	32	;' '
   381  07A5  3470               	retlw	112	;'p'
   382  07A6  3465               	retlw	101	;'e'
   383  07A7  3472               	retlw	114	;'r'
   384  07A8  3469               	retlw	105	;'i'
   385  07A9  346F               	retlw	111	;'o'
   386  07AA  3464               	retlw	100	;'d'
   387  07AB  346F               	retlw	111	;'o'
   388  07AC  342E               	retlw	46	;'.'
   389  07AD  340A               	retlw	10
   390  07AE  340D               	retlw	13
   391  07AF  3400               	retlw	0
   392  07B0                     STR_14:	
   393  07B0  3452               	retlw	82	;'R'
   394  07B1  3465               	retlw	101	;'e'
   395  07B2  3473               	retlw	115	;'s'
   396  07B3  3465               	retlw	101	;'e'
   397  07B4  3474               	retlw	116	;'t'
   398  07B5  3474               	retlw	116	;'t'
   399  07B6  3461               	retlw	97	;'a'
   400  07B7  3472               	retlw	114	;'r'
   401  07B8  3465               	retlw	101	;'e'
   402  07B9  3420               	retlw	32	;' '
   403  07BA  3470               	retlw	112	;'p'
   404  07BB  3465               	retlw	101	;'e'
   405  07BC  3472               	retlw	114	;'r'
   406  07BD  3420               	retlw	32	;' '
   407  07BE  3475               	retlw	117	;'u'
   408  07BF  3473               	retlw	115	;'s'
   409  07C0  3463               	retlw	99	;'c'
   410  07C1  3469               	retlw	105	;'i'
   411  07C2  3472               	retlw	114	;'r'
   412  07C3  3465               	retlw	101	;'e'
   413  07C4  342E               	retlw	46	;'.'
   414  07C5  340A               	retlw	10
   415  07C6  340D               	retlw	13
   416  07C7  3400               	retlw	0
   417  07C8                     STR_13:	
   418  07C8  3452               	retlw	82	;'R'
   419  07C9  3469               	retlw	105	;'i'
   420  07CA  3470               	retlw	112	;'p'
   421  07CB  3472               	retlw	114	;'r'
   422  07CC  346F               	retlw	111	;'o'
   423  07CD  3464               	retlw	100	;'d'
   424  07CE  3475               	retlw	117	;'u'
   425  07CF  3463               	retlw	99	;'c'
   426  07D0  3465               	retlw	101	;'e'
   427  07D1  346E               	retlw	110	;'n'
   428  07D2  3464               	retlw	100	;'d'
   429  07D3  346F               	retlw	111	;'o'
   430  07D4  342E               	retlw	46	;'.'
   431  07D5  342E               	retlw	46	;'.'
   432  07D6  342E               	retlw	46	;'.'
   433  07D7  340A               	retlw	10
   434  07D8  340D               	retlw	13
   435  07D9  3400               	retlw	0
   436  07DA                     STR_4:	
   437  07DA  3452               	retlw	82	;'R'
   438  07DB  3465               	retlw	101	;'e'
   439  07DC  3467               	retlw	103	;'g'
   440  07DD  3469               	retlw	105	;'i'
   441  07DE  3473               	retlw	115	;'s'
   442  07DF  3474               	retlw	116	;'t'
   443  07E0  3472               	retlw	114	;'r'
   444  07E1  3461               	retlw	97	;'a'
   445  07E2  346E               	retlw	110	;'n'
   446  07E3  3464               	retlw	100	;'d'
   447  07E4  346F               	retlw	111	;'o'
   448  07E5  342E               	retlw	46	;'.'
   449  07E6  342E               	retlw	46	;'.'
   450  07E7  342E               	retlw	46	;'.'
   451  07E8  340A               	retlw	10
   452  07E9  340D               	retlw	13
   453  07EA  3400               	retlw	0
   454  07EB                     STR_5:	
   455  07EB  345B               	retlw	91	;'['
   456  07EC  3425               	retlw	37	;'%'
   457  07ED  3434               	retlw	52	;'4'
   458  07EE  3475               	retlw	117	;'u'
   459  07EF  345D               	retlw	93	;']'
   460  07F0  3420               	retlw	32	;' '
   461  07F1  3425               	retlw	37	;'%'
   462  07F2  3435               	retlw	53	;'5'
   463  07F3  3475               	retlw	117	;'u'
   464  07F4  342D               	retlw	45	;'-'
   465  07F5  3425               	retlw	37	;'%'
   466  07F6  3475               	retlw	117	;'u'
   467  07F7  342C               	retlw	44	;','
   468  07F8  3409               	retlw	9
   469  07F9  3409               	retlw	9
   470  07FA  3400               	retlw	0
   471  07FB                     STR_6:	
   472  07FB  3425               	retlw	37	;'%'
   473  07FC  3435               	retlw	53	;'5'
   474  07FD  3475               	retlw	117	;'u'
   475  07FE  342D               	retlw	45	;'-'
   476  07FF  3425               	retlw	37	;'%'
   477  0800  3475               	retlw	117	;'u'
   478  0801  340A               	retlw	10
   479  0802  340D               	retlw	13
   480  0803  3400               	retlw	0
   481  0804                     STR_8:	
   482  0804  3449               	retlw	73	;'I'
   483  0805  346E               	retlw	110	;'n'
   484  0806  3469               	retlw	105	;'i'
   485  0807  347A               	retlw	122	;'z'
   486  0808  3469               	retlw	105	;'i'
   487  0809  346F               	retlw	111	;'o'
   488  080A  343A               	retlw	58	;':'
   489  080B  3420               	retlw	32	;' '
   490  080C  3400               	retlw	0
   491  080D                     STR_1:	
   492  080D  3452               	retlw	82	;'R'
   493  080E  3445               	retlw	69	;'E'
   494  080F  3453               	retlw	83	;'S'
   495  0810  3445               	retlw	69	;'E'
   496  0811  3454               	retlw	84	;'T'
   497  0812  340A               	retlw	10
   498  0813  340D               	retlw	13
   499  0814  3400               	retlw	0
   500  0815                     STR_9:	
   501  0815  3446               	retlw	70	;'F'
   502  0816  3469               	retlw	105	;'i'
   503  0817  346E               	retlw	110	;'n'
   504  0818  3465               	retlw	101	;'e'
   505  0819  343A               	retlw	58	;':'
   506  081A  3420               	retlw	32	;' '
   507  081B  3400               	retlw	0
   508  081C                     STR_3:	
   509  081C  3425               	retlw	37	;'%'
   510  081D  3463               	retlw	99	;'c'
   511  081E  340A               	retlw	10
   512  081F  340D               	retlw	13
   513  0820  3400               	retlw	0
   514  07EB                     
   515                           ; #config settings
   516  0000                     
   517                           	psect	cinit
   518  0013                     start_initialization:	
   519  0013                     __initialization:	
   520                           
   521                           ; Clear objects allocated to BANK0
   522  0013  1383               	bcf	3,7	;select IRP bank0
   523  0014  3055               	movlw	low __pbssBANK0
   524  0015  0084               	movwf	4
   525  0016  3068               	movlw	low (__pbssBANK0+19)
   526  0017  120A  158A  2398  120A  118A  	fcall	clear_ram0
   527                           
   528                           ; Clear objects allocated to BANK1
   529  001C  30A0               	movlw	low __pbssBANK1
   530  001D  0084               	movwf	4
   531  001E  30AA               	movlw	low (__pbssBANK1+10)
   532  001F  120A  158A  2398   	fcall	clear_ram0
   533  0022                     end_of_initialization:	
   534                           ;End of C runtime variable initialization code
   535                           
   536  0022                     __end_of__initialization:	
   537  0022  0183               	clrf	3
   538  0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   539                           
   540                           	psect	bssBANK0
   541  0055                     __pbssBANK0:	
   542  0055                     _cycles:	
   543  0055                     	ds	3
   544  0058                     _b:	
   545  0058                     	ds	3
   546  005B                     _a:	
   547  005B                     	ds	3
   548  005E                     _e:	
   549  005E                     	ds	3
   550  0061                     _i:	
   551  0061                     	ds	3
   552  0064                     _c:	
   553  0064                     	ds	1
   554  0065                     _tvalue:	
   555  0065                     	ds	2
   556  0067                     _bvalue:	
   557  0067                     	ds	1
   558                           
   559                           	psect	bssBANK1
   560  00A0                     __pbssBANK1:	
   561  00A0                     _number:	
   562  00A0                     	ds	10
   563                           
   564                           	psect	clrtext
   565  0B98                     clear_ram0:	
   566                           ;	Called with FSR containing the base address, and
   567                           ;	W with the last address+1
   568                           
   569  0B98  0064               	clrwdt	;clear the watchdog before getting into this loop
   570  0B99                     clrloop0:	
   571  0B99  0180               	clrf	0	;clear RAM location pointed to by FSR
   572  0B9A  0A84               	incf	4,f	;increment pointer
   573  0B9B  0604               	xorwf	4,w	;XOR with final address
   574  0B9C  1903               	btfsc	3,2	;have we reached the end yet?
   575  0B9D  3400               	retlw	0	;all done for this memory range, return
   576  0B9E  0604               	xorwf	4,w	;XOR again to restore value
   577  0B9F  2B99               	goto	clrloop0	;do the next byte
   578                           
   579                           	psect	cstackCOMMON
   580  0070                     __pcstackCOMMON:	
   581  0070                     ?_isdigit:	
   582  0070                     ?_setup_peripheals:	
   583                           ; 1 bit 
   584                           
   585  0070                     ?_read_char:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_main:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_putch:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_ISR:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?i1_RAM_sequential_SPI_write:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?i1_RAM_sequential_SPI_read:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     i1RAM_sequential_SPI_write@latch:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     i1RAM_sequential_SPI_read@latch:	
   607                           ; 2 bytes @ 0x0
   608                           
   609                           
   610                           ; 2 bytes @ 0x0
   611  0070                     	ds	2
   612  0072                     i1RAM_sequential_SPI_write@pin_number:	
   613  0072                     i1RAM_sequential_SPI_read@pin_number:	
   614                           ; 1 bytes @ 0x2
   615                           
   616                           
   617                           ; 1 bytes @ 0x2
   618  0072                     	ds	1
   619  0073                     i1RAM_sequential_SPI_write@address:	
   620  0073                     i1RAM_sequential_SPI_read@address:	
   621                           ; 3 bytes @ 0x3
   622                           
   623                           
   624                           ; 3 bytes @ 0x3
   625  0073                     	ds	3
   626  0076                     i1RAM_sequential_SPI_write@data_out:	
   627  0076                     i1RAM_sequential_SPI_read@data_in:	
   628                           ; 2 bytes @ 0x6
   629                           
   630                           
   631                           ; 2 bytes @ 0x6
   632  0076                     	ds	2
   633  0078                     i1RAM_sequential_SPI_write@data_out_size:	
   634  0078                     i1RAM_sequential_SPI_read@data_in_size:	
   635                           ; 1 bytes @ 0x8
   636                           
   637                           
   638                           ; 1 bytes @ 0x8
   639  0078                     	ds	1
   640  0079                     ??i1_RAM_sequential_SPI_write:	
   641  0079                     ??i1_RAM_sequential_SPI_read:	
   642                           ; 1 bytes @ 0x9
   643                           
   644                           
   645                           ; 1 bytes @ 0x9
   646  0079                     	ds	3
   647  007C                     i1RAM_sequential_SPI_write@dummy:	
   648  007C                     i1RAM_sequential_SPI_read@dummy:	
   649                           ; 1 bytes @ 0xC
   650                           
   651                           
   652                           ; 1 bytes @ 0xC
   653  007C                     	ds	1
   654  007D                     i1RAM_sequential_SPI_write@i:	
   655  007D                     i1RAM_sequential_SPI_read@i:	
   656                           ; 1 bytes @ 0xD
   657                           
   658                           
   659                           ; 1 bytes @ 0xD
   660  007D                     	ds	1
   661                           
   662                           	psect	cstackBANK0
   663  0020                     __pcstackBANK0:	
   664  0020                     ??_ISR:	
   665                           
   666                           ; 1 bytes @ 0x0
   667  0020                     	ds	7
   668  0027                     ??_setup_peripheals:	
   669  0027                     ?_RAM_set_SPI_mode:	
   670                           ; 1 bytes @ 0x7
   671                           
   672  0027                     ??_read_char:	
   673                           ; 1 bytes @ 0x7
   674                           
   675  0027                     ?_RAM_sequential_SPI_write:	
   676                           ; 1 bytes @ 0x7
   677                           
   678  0027                     ?_RAM_sequential_SPI_read:	
   679                           ; 1 bytes @ 0x7
   680                           
   681  0027                     ??_isdigit:	
   682                           ; 1 bytes @ 0x7
   683                           
   684  0027                     ??_putch:	
   685                           ; 1 bytes @ 0x7
   686                           
   687  0027                     ?___wmul:	
   688                           ; 1 bytes @ 0x7
   689                           
   690  0027                     ?___lwdiv:	
   691                           ; 2 bytes @ 0x7
   692                           
   693  0027                     putch@c:	
   694                           ; 2 bytes @ 0x7
   695                           
   696  0027                     _isdigit$1090:	
   697                           ; 1 bytes @ 0x7
   698                           
   699  0027                     RAM_set_SPI_mode@latch:	
   700                           ; 1 bytes @ 0x7
   701                           
   702  0027                     RAM_sequential_SPI_write@latch:	
   703                           ; 2 bytes @ 0x7
   704                           
   705  0027                     RAM_sequential_SPI_read@latch:	
   706                           ; 2 bytes @ 0x7
   707                           
   708  0027                     ___wmul@multiplier:	
   709                           ; 2 bytes @ 0x7
   710                           
   711  0027                     ___lwdiv@divisor:	
   712                           ; 2 bytes @ 0x7
   713                           
   714                           
   715                           ; 2 bytes @ 0x7
   716  0027                     	ds	1
   717  0028                     ?_read_line:	
   718  0028                     isdigit@c:	
   719                           ; 1 bytes @ 0x8
   720                           
   721  0028                     read_line@max_len:	
   722                           ; 1 bytes @ 0x8
   723                           
   724                           
   725                           ; 2 bytes @ 0x8
   726  0028                     	ds	1
   727  0029                     RAM_set_SPI_mode@pin_number:	
   728  0029                     RAM_sequential_SPI_write@pin_number:	
   729                           ; 1 bytes @ 0x9
   730                           
   731  0029                     RAM_sequential_SPI_read@pin_number:	
   732                           ; 1 bytes @ 0x9
   733                           
   734  0029                     ___wmul@multiplicand:	
   735                           ; 1 bytes @ 0x9
   736                           
   737  0029                     ___lwdiv@dividend:	
   738                           ; 2 bytes @ 0x9
   739                           
   740                           
   741                           ; 2 bytes @ 0x9
   742  0029                     	ds	1
   743  002A                     ??_RAM_set_SPI_mode:	
   744  002A                     ??_read_line:	
   745                           ; 1 bytes @ 0xA
   746                           
   747  002A                     RAM_sequential_SPI_write@address:	
   748                           ; 1 bytes @ 0xA
   749                           
   750  002A                     RAM_sequential_SPI_read@address:	
   751                           ; 3 bytes @ 0xA
   752                           
   753                           
   754                           ; 3 bytes @ 0xA
   755  002A                     	ds	1
   756  002B                     ??___wmul:	
   757  002B                     ??___lwdiv:	
   758                           ; 1 bytes @ 0xB
   759                           
   760  002B                     ___wmul@product:	
   761                           ; 1 bytes @ 0xB
   762                           
   763                           
   764                           ; 2 bytes @ 0xB
   765  002B                     	ds	1
   766  002C                     read_line@s:	
   767  002C                     RAM_set_SPI_mode@dummy:	
   768                           ; 1 bytes @ 0xC
   769                           
   770  002C                     ___lwdiv@quotient:	
   771                           ; 1 bytes @ 0xC
   772                           
   773                           
   774                           ; 2 bytes @ 0xC
   775  002C                     	ds	1
   776  002D                     ?_atoi:	
   777  002D                     read_line@i:	
   778                           ; 2 bytes @ 0xD
   779                           
   780  002D                     RAM_sequential_SPI_write@data_out:	
   781                           ; 2 bytes @ 0xD
   782                           
   783  002D                     RAM_sequential_SPI_read@data_in:	
   784                           ; 2 bytes @ 0xD
   785                           
   786                           
   787                           ; 2 bytes @ 0xD
   788  002D                     	ds	1
   789  002E                     ___lwdiv@counter:	
   790                           
   791                           ; 1 bytes @ 0xE
   792  002E                     	ds	1
   793  002F                     ??_atoi:	
   794  002F                     ?___lwmod:	
   795                           ; 1 bytes @ 0xF
   796                           
   797  002F                     read_line@c:	
   798                           ; 2 bytes @ 0xF
   799                           
   800  002F                     RAM_sequential_SPI_write@data_out_size:	
   801                           ; 1 bytes @ 0xF
   802                           
   803  002F                     RAM_sequential_SPI_read@data_in_size:	
   804                           ; 1 bytes @ 0xF
   805                           
   806  002F                     ___lwmod@divisor:	
   807                           ; 1 bytes @ 0xF
   808                           
   809                           
   810                           ; 2 bytes @ 0xF
   811  002F                     	ds	1
   812  0030                     ??_RAM_sequential_SPI_write:	
   813  0030                     ??_RAM_sequential_SPI_read:	
   814                           ; 1 bytes @ 0x10
   815                           
   816                           
   817                           ; 1 bytes @ 0x10
   818  0030                     	ds	1
   819  0031                     atoi@sign:	
   820  0031                     ___lwmod@dividend:	
   821                           ; 1 bytes @ 0x11
   822                           
   823                           
   824                           ; 2 bytes @ 0x11
   825  0031                     	ds	1
   826  0032                     atoi@a:	
   827                           
   828                           ; 2 bytes @ 0x12
   829  0032                     	ds	1
   830  0033                     ??___lwmod:	
   831  0033                     RAM_sequential_SPI_write@dummy:	
   832                           ; 1 bytes @ 0x13
   833                           
   834  0033                     RAM_sequential_SPI_read@dummy:	
   835                           ; 1 bytes @ 0x13
   836                           
   837                           
   838                           ; 1 bytes @ 0x13
   839  0033                     	ds	1
   840  0034                     RAM_sequential_SPI_write@i:	
   841  0034                     RAM_sequential_SPI_read@i:	
   842                           ; 1 bytes @ 0x14
   843                           
   844  0034                     ___lwmod@counter:	
   845                           ; 1 bytes @ 0x14
   846                           
   847  0034                     atoi@s:	
   848                           ; 1 bytes @ 0x14
   849                           
   850                           
   851                           ; 1 bytes @ 0x14
   852  0034                     	ds	1
   853  0035                     ?_printf:	
   854  0035                     printf@f:	
   855                           ; 2 bytes @ 0x15
   856                           
   857                           
   858                           ; 2 bytes @ 0x15
   859  0035                     	ds	8
   860  003D                     ??_printf:	
   861                           
   862                           ; 1 bytes @ 0x1D
   863  003D                     	ds	4
   864  0041                     printf@flag:	
   865                           
   866                           ; 1 bytes @ 0x21
   867  0041                     	ds	1
   868  0042                     printf@cp:	
   869                           
   870                           ; 1 bytes @ 0x22
   871  0042                     	ds	1
   872  0043                     printf@val:	
   873                           
   874                           ; 2 bytes @ 0x23
   875  0043                     	ds	2
   876  0045                     printf@prec:	
   877                           
   878                           ; 1 bytes @ 0x25
   879  0045                     	ds	1
   880  0046                     printf@ap:	
   881                           
   882                           ; 1 bytes @ 0x26
   883  0046                     	ds	1
   884  0047                     printf@len:	
   885                           
   886                           ; 2 bytes @ 0x27
   887  0047                     	ds	2
   888  0049                     printf@width:	
   889                           
   890                           ; 2 bytes @ 0x29
   891  0049                     	ds	2
   892  004B                     printf@c:	
   893                           
   894                           ; 1 bytes @ 0x2B
   895  004B                     	ds	1
   896  004C                     ??_main:	
   897                           
   898                           ; 1 bytes @ 0x2C
   899  004C                     	ds	9
   900                           
   901                           	psect	maintext
   902  0026                     __pmaintext:	
   903 ;;
   904 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   905 ;;
   906 ;; *************** function _main *****************
   907 ;; Defined at:
   908 ;;		line 33 in file "main.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : B00/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   922 ;;      Params:         0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0
   924 ;;      Temps:          0       9       0       0       0
   925 ;;      Totals:         0       9       0       0       0
   926 ;;Total ram usage:        9 bytes
   927 ;; Hardware stack levels required when called:    4
   928 ;; This function calls:
   929 ;;		_RAM_sequential_SPI_read
   930 ;;		_RAM_sequential_SPI_write
   931 ;;		_RAM_set_SPI_mode
   932 ;;		_atoi
   933 ;;		_printf
   934 ;;		_read_char
   935 ;;		_read_line
   936 ;;		_setup_peripheals
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _main
   944  0026                     _main:	
   945                           
   946                           ;main.c: 34:                 tvalue = 0;
   947                           
   948                           ;incstack = 0
   949                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   950  0026  120A  158A  2455  120A  118A  	fcall	_setup_peripheals
   951                           
   952                           ;main.c: 35:                 i = 0;
   953  002B  300D               	movlw	low (STR_1| (0+32768))
   954  002C  1283               	bcf	3,5	;RP0=0, select bank0
   955  002D  1303               	bcf	3,6	;RP1=0, select bank0
   956  002E  00B5               	movwf	printf@f
   957  002F  3088               	movlw	high (STR_1| (0+32768))
   958  0030  00B6               	movwf	printf@f+1
   959  0031  120A  118A  23E6  120A  118A  	fcall	_printf
   960                           
   961                           ;main.c: 36:                 TMR1 = 0;
   962  0036  1283               	bcf	3,5	;RP0=0, select bank0
   963  0037  1303               	bcf	3,6	;RP1=0, select bank0
   964  0038  1407               	bsf	7,0	;volatile
   965                           
   966                           ;main.c: 37:                 INTCONbits.RBIF = 0;
   967  0039  1487               	bsf	7,1	;volatile
   968                           
   969                           ;main.c: 38:                 INTCONbits.RBIE = 1;
   970  003A  1507               	bsf	7,2	;volatile
   971                           
   972                           ;main.c: 39:                 PIR1bits.TMR1IF = 0;
   973  003B  3007               	movlw	7
   974  003C  00A7               	movwf	RAM_set_SPI_mode@latch
   975  003D  3000               	movlw	0
   976  003E  00A8               	movwf	RAM_set_SPI_mode@latch+1
   977  003F  3002               	movlw	2
   978  0040  00CC               	movwf	??_main
   979  0041  084C               	movf	??_main,w
   980  0042  00A9               	movwf	RAM_set_SPI_mode@pin_number
   981  0043  120A  158A  241F  120A  118A  	fcall	_RAM_set_SPI_mode
   982  0048                     l1991:	
   983                           ;main.c: 40:                 T1CONbits.TMR1ON = 1;
   984                           
   985                           
   986                           ;main.c: 41:                 bvalue = ~PORTBbits.RB4;
   987  0048  1283               	bcf	3,5	;RP0=0, select bank0
   988  0049  1303               	bcf	3,6	;RP1=0, select bank0
   989  004A  1085               	bcf	5,1	;volatile
   990                           
   991                           ;main.c: 42:                 RAM_sequential_SPI_write(&PORTC, 2, i + 2, &bvalue, 1);
   992  004B  1105               	bcf	5,2	;volatile
   993                           
   994                           ;main.c: 43:                 PORTAbits.RA1 = ~PORTBbits.RB4;
   995  004C  304B               	movlw	low (STR_2| (0+32768))
   996  004D  00B5               	movwf	printf@f
   997  004E  3087               	movlw	high (STR_2| (0+32768))
   998  004F  00B6               	movwf	printf@f+1
   999  0050  120A  118A  23E6  120A  118A  	fcall	_printf
  1000                           
  1001                           ;main.c: 44:                 PORTAbits.RA2 = ~PORTBbits.RB4;
  1002  0055  120A  158A  23AC  120A  118A  	fcall	_read_char
  1003  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1004  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1005  005C  00CC               	movwf	??_main
  1006  005D  084C               	movf	??_main,w
  1007  005E  00E4               	movwf	_c
  1008                           
  1009                           ;main.c: 45:                 while (i < 1024);
  1010  005F  301C               	movlw	low (STR_3| (0+32768))
  1011  0060  00B5               	movwf	printf@f
  1012  0061  3088               	movlw	high (STR_3| (0+32768))
  1013  0062  00B6               	movwf	printf@f+1
  1014  0063  0864               	movf	_c,w
  1015  0064  00CC               	movwf	??_main
  1016  0065  01CD               	clrf	??_main+1
  1017  0066  084C               	movf	??_main,w
  1018  0067  00B7               	movwf	?_printf+2
  1019  0068  084D               	movf	??_main+1,w
  1020  0069  00B8               	movwf	?_printf+3
  1021  006A  120A  118A  23E6  120A  118A  	fcall	_printf
  1022                           
  1023                           ;main.c: 46:                 PORTAbits.RA1 = 0;
  1024  006F  3065               	movlw	101
  1025  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0072  0664               	xorwf	_c,w
  1028  0073  1903               	btfsc	3,2
  1029  0074  287D               	goto	l2007
  1030  0075  3069               	movlw	105
  1031  0076  0664               	xorwf	_c,w
  1032  0077  1903               	btfsc	3,2
  1033  0078  287D               	goto	l2007
  1034  0079  3074               	movlw	116
  1035  007A  0664               	xorwf	_c,w
  1036  007B  1D03               	btfss	3,2
  1037  007C  2BDC               	goto	l2105
  1038  007D                     l2007:	
  1039                           
  1040                           ;main.c: 47:                 PORTAbits.RA2 = 0;
  1041  007D  3065               	movlw	101
  1042  007E  0664               	xorwf	_c,w
  1043  007F  1D03               	btfss	3,2
  1044  0080  2B65               	goto	l2079
  1045                           
  1046                           ;main.c: 48:                 for (i = 0; i < 1024; i += 3) {
  1047  0081  30DA               	movlw	low (STR_4| (0+32768))
  1048  0082  00B5               	movwf	printf@f
  1049  0083  3087               	movlw	high (STR_4| (0+32768))
  1050  0084  00B6               	movwf	printf@f+1
  1051  0085  120A  118A  23E6  120A  118A  	fcall	_printf
  1052                           
  1053                           ;main.c: 49:                     RAM_sequential_SPI_read(&PORTC, 2, i, (uint8_t*) & tval
      +                          ue, 2);
  1054  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1055  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1056  008C  01E7               	clrf	_bvalue
  1057                           
  1058                           ;main.c: 50:                     RAM_sequential_SPI_read(&PORTC, 2, i + 2, &bvalue, 1);
  1059  008D  01E5               	clrf	_tvalue
  1060  008E  01E6               	clrf	_tvalue+1
  1061                           
  1062                           ;main.c: 51:                     printf("[%4u] %5u-%u,\t\t", (unsigned int) i, (unsigned
      +                           int) tvalue, (unsigned int) bvalue);
  1063  008F  3000               	movlw	0
  1064  0090  00E1               	movwf	_i
  1065  0091  3000               	movlw	0
  1066  0092  00E2               	movwf	_i+1
  1067  0093  3000               	movlw	0
  1068  0094  00E3               	movwf	_i+2
  1069                           
  1070                           ;main.c: 52:                     tvalue = 0xFFFF - tvalue;
  1071  0095  018E               	clrf	14	;volatile
  1072  0096  018F               	clrf	15	;volatile
  1073                           
  1074                           ;main.c: 53:                     RAM_sequential_SPI_write(&PORTC, 2, i, (uint8_t*) & tva
      +                          lue, 2);
  1075  0097  100B               	bcf	11,0	;volatile
  1076                           
  1077                           ;main.c: 54:                     printf("%5u-%u\n\r", (unsigned int) tvalue, (unsigned i
      +                          nt) bvalue);
  1078  0098  158B               	bsf	11,3	;volatile
  1079                           
  1080                           ;main.c: 55:                 }
  1081  0099  100C               	bcf	12,0	;volatile
  1082                           
  1083                           ;main.c: 56:                 printf("Selezioare il periodo.\n\r");
  1084  009A  1410               	bsf	16,0	;volatile
  1085                           
  1086                           ;main.c: 57:                 printf("Inizio: ");
  1087  009B  1003               	clrc
  1088  009C  1E06               	btfss	6,4	;volatile
  1089  009D  1403               	setc
  1090  009E  3000               	movlw	0
  1091  009F  1803               	btfsc	3,0
  1092  00A0  3001               	movlw	1
  1093  00A1  00E7               	movwf	_bvalue
  1094                           
  1095                           ;main.c: 58:                 read_line(number, 10);
  1096  00A2  3007               	movlw	7
  1097  00A3  00A7               	movwf	RAM_sequential_SPI_write@latch
  1098  00A4  3000               	movlw	0
  1099  00A5  00A8               	movwf	RAM_sequential_SPI_write@latch+1
  1100  00A6  3002               	movlw	2
  1101  00A7  00CC               	movwf	??_main
  1102  00A8  084C               	movf	??_main,w
  1103  00A9  00A9               	movwf	RAM_sequential_SPI_write@pin_number
  1104  00AA  3002               	movlw	2
  1105  00AB  00CD               	movwf	??_main+1
  1106  00AC  3000               	movlw	0
  1107  00AD  00CE               	movwf	??_main+2
  1108  00AE  3000               	movlw	0
  1109  00AF  00CF               	movwf	??_main+3
  1110  00B0  0861               	movf	_i,w
  1111  00B1  07CD               	addwf	??_main+1,f
  1112  00B2  0862               	movf	_i+1,w
  1113  00B3  1803               	skipnc
  1114  00B4  0F62               	incfsz	_i+1,w
  1115  00B5  28B7               	goto	u2241
  1116  00B6  28B8               	goto	u2242
  1117  00B7                     u2241:	
  1118  00B7  07CE               	addwf	??_main+2,f
  1119  00B8                     u2242:	
  1120  00B8  0863               	movf	_i+2,w
  1121  00B9  1803               	skipnc
  1122  00BA  0F63               	incfsz	_i+2,w
  1123  00BB  28BD               	goto	u2243
  1124  00BC  28BE               	goto	u2244
  1125  00BD                     u2243:	
  1126  00BD  07CF               	addwf	??_main+3,f
  1127  00BE                     u2244:	
  1128  00BE  084D               	movf	??_main+1,w
  1129  00BF  00AA               	movwf	RAM_sequential_SPI_write@address
  1130  00C0  084E               	movf	??_main+2,w
  1131  00C1  00AB               	movwf	RAM_sequential_SPI_write@address+1
  1132  00C2  084F               	movf	??_main+3,w
  1133  00C3  00AC               	movwf	RAM_sequential_SPI_write@address+2
  1134  00C4  3067               	movlw	(low (_bvalue| 0))& (0+255)
  1135  00C5  00AD               	movwf	RAM_sequential_SPI_write@data_out
  1136  00C6  3000               	movlw	0
  1137  00C7  00AE               	movwf	RAM_sequential_SPI_write@data_out+1
  1138  00C8  01AF               	clrf	RAM_sequential_SPI_write@data_out_size
  1139  00C9  0AAF               	incf	RAM_sequential_SPI_write@data_out_size,f
  1140  00CA  120A  158A  2764  120A  118A  	fcall	_RAM_sequential_SPI_write
  1141                           
  1142                           ;main.c: 59:                 a = atoi(number);
  1143  00CF  1003               	clrc
  1144  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1145  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1146  00D2  1E06               	btfss	6,4	;volatile
  1147  00D3  1403               	setc
  1148  00D4  1C03               	btfss	3,0
  1149  00D5  28DA               	goto	u2250
  1150  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1151  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1152  00D8  1485               	bsf	5,1	;volatile
  1153  00D9  28DD               	goto	l2033
  1154  00DA                     u2250:	
  1155  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1156  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1157  00DC  1085               	bcf	5,1	;volatile
  1158  00DD                     l2033:	
  1159                           
  1160                           ;main.c: 60:                 printf("Fine: ");
  1161  00DD  1003               	clrc
  1162  00DE  1E06               	btfss	6,4	;volatile
  1163  00DF  1403               	setc
  1164  00E0  1C03               	btfss	3,0
  1165  00E1  28E6               	goto	u2270
  1166  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1167  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1168  00E4  1505               	bsf	5,2	;volatile
  1169  00E5  28E9               	goto	l2035
  1170  00E6                     u2270:	
  1171  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1172  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1173  00E8  1105               	bcf	5,2	;volatile
  1174  00E9                     l2035:	
  1175                           ;main.c: 61:                 read_line(number, 10);
  1176                           
  1177  00E9  3000               	movlw	0
  1178  00EA  0263               	subwf	_i+2,w
  1179  00EB  1D03               	skipz
  1180  00EC  28F3               	goto	u2295
  1181  00ED  3004               	movlw	4
  1182  00EE  0262               	subwf	_i+1,w
  1183  00EF  1D03               	skipz
  1184  00F0  28F3               	goto	u2295
  1185  00F1  3000               	movlw	0
  1186  00F2  0261               	subwf	_i,w
  1187  00F3                     u2295:	
  1188  00F3  1C03               	skipc
  1189  00F4  28E9               	goto	l2035
  1190                           
  1191                           ;main.c: 62:                 b = atoi(number);
  1192  00F5  1085               	bcf	5,1	;volatile
  1193                           
  1194                           ;main.c: 63:                 b = b - a + 1;
  1195  00F6  1105               	bcf	5,2	;volatile
  1196                           
  1197                           ;main.c: 64:                 for (i = 0; i < b; i += 3) {
  1198  00F7  3000               	movlw	0
  1199  00F8  00E1               	movwf	_i
  1200  00F9  3000               	movlw	0
  1201  00FA  00E2               	movwf	_i+1
  1202  00FB  3000               	movlw	0
  1203  00FC  00E3               	movwf	_i+2
  1204  00FD  3000               	movlw	0
  1205  00FE  0263               	subwf	_i+2,w
  1206  00FF  1D03               	skipz
  1207  0100  2907               	goto	u2305
  1208  0101  3004               	movlw	4
  1209  0102  0262               	subwf	_i+1,w
  1210  0103  1D03               	skipz
  1211  0104  2907               	goto	u2305
  1212  0105  3000               	movlw	0
  1213  0106  0261               	subwf	_i,w
  1214  0107                     u2305:	
  1215  0107  1803               	btfsc	3,0
  1216  0108  29C7               	goto	l2055
  1217  0109                     l2041:	
  1218                           
  1219                           ;main.c: 65:                     RAM_sequential_SPI_read(&PORTC, 2, i + a, (uint8_t*) & 
      +                          tvalue, 2);
  1220  0109  3007               	movlw	7
  1221  010A  00A7               	movwf	RAM_sequential_SPI_read@latch
  1222  010B  3000               	movlw	0
  1223  010C  00A8               	movwf	RAM_sequential_SPI_read@latch+1
  1224  010D  3002               	movlw	2
  1225  010E  00CC               	movwf	??_main
  1226  010F  084C               	movf	??_main,w
  1227  0110  00A9               	movwf	RAM_sequential_SPI_read@pin_number
  1228  0111  0861               	movf	_i,w
  1229  0112  00AA               	movwf	RAM_sequential_SPI_read@address
  1230  0113  0862               	movf	_i+1,w
  1231  0114  00AB               	movwf	RAM_sequential_SPI_read@address+1
  1232  0115  0863               	movf	_i+2,w
  1233  0116  00AC               	movwf	RAM_sequential_SPI_read@address+2
  1234  0117  3065               	movlw	(low (_tvalue| 0))& (0+255)
  1235  0118  00AD               	movwf	RAM_sequential_SPI_read@data_in
  1236  0119  3000               	movlw	0
  1237  011A  00AE               	movwf	RAM_sequential_SPI_read@data_in+1
  1238  011B  3002               	movlw	2
  1239  011C  00CD               	movwf	??_main+1
  1240  011D  084D               	movf	??_main+1,w
  1241  011E  00AF               	movwf	RAM_sequential_SPI_read@data_in_size
  1242  011F  120A  158A  26C8  120A  118A  	fcall	_RAM_sequential_SPI_read
  1243                           
  1244                           ;main.c: 66:                     RAM_sequential_SPI_read(&PORTC, 2, (i + a) + 2, &bvalue
      +                          , 1);
  1245  0124  3007               	movlw	7
  1246  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0127  00A7               	movwf	RAM_sequential_SPI_read@latch
  1249  0128  3000               	movlw	0
  1250  0129  00A8               	movwf	RAM_sequential_SPI_read@latch+1
  1251  012A  3002               	movlw	2
  1252  012B  00CC               	movwf	??_main
  1253  012C  084C               	movf	??_main,w
  1254  012D  00A9               	movwf	RAM_sequential_SPI_read@pin_number
  1255  012E  3002               	movlw	2
  1256  012F  00CD               	movwf	??_main+1
  1257  0130  3000               	movlw	0
  1258  0131  00CE               	movwf	??_main+2
  1259  0132  3000               	movlw	0
  1260  0133  00CF               	movwf	??_main+3
  1261  0134  0861               	movf	_i,w
  1262  0135  07CD               	addwf	??_main+1,f
  1263  0136  0862               	movf	_i+1,w
  1264  0137  1803               	skipnc
  1265  0138  0F62               	incfsz	_i+1,w
  1266  0139  293B               	goto	u2311
  1267  013A  293C               	goto	u2312
  1268  013B                     u2311:	
  1269  013B  07CE               	addwf	??_main+2,f
  1270  013C                     u2312:	
  1271  013C  0863               	movf	_i+2,w
  1272  013D  1803               	skipnc
  1273  013E  0F63               	incfsz	_i+2,w
  1274  013F  2941               	goto	u2313
  1275  0140  2942               	goto	u2314
  1276  0141                     u2313:	
  1277  0141  07CF               	addwf	??_main+3,f
  1278  0142                     u2314:	
  1279  0142  084D               	movf	??_main+1,w
  1280  0143  00AA               	movwf	RAM_sequential_SPI_read@address
  1281  0144  084E               	movf	??_main+2,w
  1282  0145  00AB               	movwf	RAM_sequential_SPI_read@address+1
  1283  0146  084F               	movf	??_main+3,w
  1284  0147  00AC               	movwf	RAM_sequential_SPI_read@address+2
  1285  0148  3067               	movlw	(low (_bvalue| 0))& (0+255)
  1286  0149  00AD               	movwf	RAM_sequential_SPI_read@data_in
  1287  014A  3000               	movlw	0
  1288  014B  00AE               	movwf	RAM_sequential_SPI_read@data_in+1
  1289  014C  01AF               	clrf	RAM_sequential_SPI_read@data_in_size
  1290  014D  0AAF               	incf	RAM_sequential_SPI_read@data_in_size,f
  1291  014E  120A  158A  26C8  120A  118A  	fcall	_RAM_sequential_SPI_read
  1292                           
  1293                           ;main.c: 67:                     RAM_sequential_SPI_write(&PORTC, 2, i, (uint8_t*) & tva
      +                          lue, 2);
  1294  0153  30EB               	movlw	low (STR_5| (0+32768))
  1295  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0155  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0156  00B5               	movwf	printf@f
  1298  0157  3087               	movlw	high (STR_5| (0+32768))
  1299  0158  00B6               	movwf	printf@f+1
  1300  0159  0862               	movf	_i+1,w
  1301  015A  00B8               	movwf	?_printf+3
  1302  015B  0861               	movf	_i,w
  1303  015C  00B7               	movwf	?_printf+2
  1304  015D  0866               	movf	_tvalue+1,w
  1305  015E  00BA               	movwf	?_printf+5
  1306  015F  0865               	movf	_tvalue,w
  1307  0160  00B9               	movwf	?_printf+4
  1308  0161  0867               	movf	_bvalue,w
  1309  0162  00CC               	movwf	??_main
  1310  0163  01CD               	clrf	??_main+1
  1311  0164  084C               	movf	??_main,w
  1312  0165  00BB               	movwf	?_printf+6
  1313  0166  084D               	movf	??_main+1,w
  1314  0167  00BC               	movwf	?_printf+7
  1315  0168  120A  118A  23E6  120A  118A  	fcall	_printf
  1316                           
  1317                           ;main.c: 68:                     RAM_sequential_SPI_write(&PORTC, 2, i + 2, &bvalue, 1);
  1318  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1319  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1320  016F  0965               	comf	_tvalue,w
  1321  0170  00CC               	movwf	??_main
  1322  0171  0966               	comf	_tvalue+1,w
  1323  0172  00CD               	movwf	??_main+1
  1324  0173  0ACC               	incf	??_main,f
  1325  0174  1903               	skipnz
  1326  0175  0ACD               	incf	??_main+1,f
  1327  0176  084C               	movf	??_main,w
  1328  0177  3EFF               	addlw	255
  1329  0178  00E5               	movwf	_tvalue
  1330  0179  084D               	movf	??_main+1,w
  1331  017A  1803               	skipnc
  1332  017B  3E01               	addlw	1
  1333  017C  3EFF               	addlw	255
  1334  017D  00E6               	movwf	_tvalue+1
  1335                           
  1336                           ;main.c: 69:                     printf("[%4u] %5u-%u,\t\t", (unsigned int) i, (unsigned
      +                           int) (0xFFFF - tvalue), (unsigned int) bvalue);
  1337  017E  3007               	movlw	7
  1338  017F  00A7               	movwf	RAM_sequential_SPI_write@latch
  1339  0180  3000               	movlw	0
  1340  0181  00A8               	movwf	RAM_sequential_SPI_write@latch+1
  1341  0182  3002               	movlw	2
  1342  0183  00CC               	movwf	??_main
  1343  0184  084C               	movf	??_main,w
  1344  0185  00A9               	movwf	RAM_sequential_SPI_write@pin_number
  1345  0186  0861               	movf	_i,w
  1346  0187  00AA               	movwf	RAM_sequential_SPI_write@address
  1347  0188  0862               	movf	_i+1,w
  1348  0189  00AB               	movwf	RAM_sequential_SPI_write@address+1
  1349  018A  0863               	movf	_i+2,w
  1350  018B  00AC               	movwf	RAM_sequential_SPI_write@address+2
  1351  018C  3065               	movlw	(low (_tvalue| 0))& (0+255)
  1352  018D  00AD               	movwf	RAM_sequential_SPI_write@data_out
  1353  018E  3000               	movlw	0
  1354  018F  00AE               	movwf	RAM_sequential_SPI_write@data_out+1
  1355  0190  3002               	movlw	2
  1356  0191  00CD               	movwf	??_main+1
  1357  0192  084D               	movf	??_main+1,w
  1358  0193  00AF               	movwf	RAM_sequential_SPI_write@data_out_size
  1359  0194  120A  158A  2764  120A  118A  	fcall	_RAM_sequential_SPI_write
  1360                           
  1361                           ;main.c: 70:                     printf("%5u-%u\n\r", (unsigned int) tvalue, (unsigned i
      +                          nt) bvalue);
  1362  0199  30FB               	movlw	low (STR_6| (0+32768))
  1363  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1364  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1365  019C  00B5               	movwf	printf@f
  1366  019D  3087               	movlw	high (STR_6| (0+32768))
  1367  019E  00B6               	movwf	printf@f+1
  1368  019F  0866               	movf	_tvalue+1,w
  1369  01A0  00B8               	movwf	?_printf+3
  1370  01A1  0865               	movf	_tvalue,w
  1371  01A2  00B7               	movwf	?_printf+2
  1372  01A3  0867               	movf	_bvalue,w
  1373  01A4  00CC               	movwf	??_main
  1374  01A5  01CD               	clrf	??_main+1
  1375  01A6  084C               	movf	??_main,w
  1376  01A7  00B9               	movwf	?_printf+4
  1377  01A8  084D               	movf	??_main+1,w
  1378  01A9  00BA               	movwf	?_printf+5
  1379  01AA  120A  118A  23E6  120A  118A  	fcall	_printf
  1380                           
  1381                           ;main.c: 71:                 }
  1382  01AF  3003               	movlw	3
  1383  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1384  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1385  01B2  07E1               	addwf	_i,f
  1386  01B3  3000               	movlw	0
  1387  01B4  1803               	skipnc
  1388  01B5  3001               	movlw	1
  1389  01B6  07E2               	addwf	_i+1,f
  1390  01B7  3000               	movlw	0
  1391  01B8  1803               	skipnc
  1392  01B9  3001               	movlw	1
  1393  01BA  07E3               	addwf	_i+2,f
  1394  01BB  3000               	movlw	0
  1395  01BC  0263               	subwf	_i+2,w
  1396  01BD  1D03               	skipz
  1397  01BE  29C5               	goto	u2325
  1398  01BF  3004               	movlw	4
  1399  01C0  0262               	subwf	_i+1,w
  1400  01C1  1D03               	skipz
  1401  01C2  29C5               	goto	u2325
  1402  01C3  3000               	movlw	0
  1403  01C4  0261               	subwf	_i,w
  1404  01C5                     u2325:	
  1405  01C5  1C03               	skipc
  1406  01C6  2909               	goto	l2041
  1407  01C7                     l2055:	
  1408                           
  1409                           ;main.c: 72:             }
  1410  01C7  3097               	movlw	low (STR_7| (0+32768))
  1411  01C8  00B5               	movwf	printf@f
  1412  01C9  3087               	movlw	high (STR_7| (0+32768))
  1413  01CA  00B6               	movwf	printf@f+1
  1414  01CB  120A  118A  23E6  120A  118A  	fcall	_printf
  1415                           
  1416                           ;main.c: 73:             if (c == 'i') {
  1417  01D0  3004               	movlw	low (STR_8| (0+32768))
  1418  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1419  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1420  01D3  00B5               	movwf	printf@f
  1421  01D4  3088               	movlw	high (STR_8| (0+32768))
  1422  01D5  00B6               	movwf	printf@f+1
  1423  01D6  120A  118A  23E6  120A  118A  	fcall	_printf
  1424                           
  1425                           ;main.c: 74:                 printf("Digitare quante volte riprodurre la sequenza: ");
  1426  01DB  300A               	movlw	10
  1427  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1428  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1429  01DE  00A8               	movwf	read_line@max_len
  1430  01DF  3000               	movlw	0
  1431  01E0  00A9               	movwf	read_line@max_len+1
  1432  01E1  30A0               	movlw	(low (_number| 0))& (0+255)
  1433  01E2  120A  158A  250C  120A  118A  	fcall	_read_line
  1434                           
  1435                           ;main.c: 75:                 read_line(number, 10);
  1436  01E7  30A0               	movlw	(low (_number| 0))& (0+255)
  1437  01E8  120A  158A  249B  120A  118A  	fcall	_atoi
  1438  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1439  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1440  01EF  082D               	movf	?_atoi,w
  1441  01F0  00DB               	movwf	_a
  1442  01F1  082E               	movf	?_atoi+1,w
  1443  01F2  00DC               	movwf	_a+1
  1444  01F3  3000               	movlw	0
  1445  01F4  1BAE               	btfsc	?_atoi+1,7
  1446  01F5  30FF               	movlw	255
  1447  01F6  00DD               	movwf	_a+2
  1448                           
  1449                           ;main.c: 76:                 cycles = atoi(number);
  1450  01F7  3015               	movlw	low (STR_9| (0+32768))
  1451  01F8  00B5               	movwf	printf@f
  1452  01F9  3088               	movlw	high (STR_9| (0+32768))
  1453  01FA  00B6               	movwf	printf@f+1
  1454  01FB  120A  118A  23E6  120A  118A  	fcall	_printf
  1455                           
  1456                           ;main.c: 77:                 printf("Riproducendo...\n\r");
  1457  0200  300A               	movlw	10
  1458  0201  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0202  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0203  00A8               	movwf	read_line@max_len
  1461  0204  3000               	movlw	0
  1462  0205  00A9               	movwf	read_line@max_len+1
  1463  0206  30A0               	movlw	(low (_number| 0))& (0+255)
  1464  0207  120A  158A  250C  120A  118A  	fcall	_read_line
  1465                           
  1466                           ;main.c: 78:                 i = 0;
  1467  020C  30A0               	movlw	(low (_number| 0))& (0+255)
  1468  020D  120A  158A  249B  120A  118A  	fcall	_atoi
  1469  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0214  082D               	movf	?_atoi,w
  1472  0215  00D8               	movwf	_b
  1473  0216  082E               	movf	?_atoi+1,w
  1474  0217  00D9               	movwf	_b+1
  1475  0218  3000               	movlw	0
  1476  0219  1BAE               	btfsc	?_atoi+1,7
  1477  021A  30FF               	movlw	255
  1478  021B  00DA               	movwf	_b+2
  1479                           
  1480                           ;main.c: 79:                 e = 0;
  1481  021C  3001               	movlw	1
  1482  021D  00CC               	movwf	??_main
  1483  021E  3000               	movlw	0
  1484  021F  00CD               	movwf	??_main+1
  1485  0220  3000               	movlw	0
  1486  0221  00CE               	movwf	??_main+2
  1487  0222  0858               	movf	_b,w
  1488  0223  00CF               	movwf	??_main+3
  1489  0224  0859               	movf	_b+1,w
  1490  0225  00D0               	movwf	??_main+4
  1491  0226  085A               	movf	_b+2,w
  1492  0227  00D1               	movwf	??_main+5
  1493  0228  095B               	comf	_a,w
  1494  0229  00D2               	movwf	??_main+6
  1495  022A  095C               	comf	_a+1,w
  1496  022B  00D3               	movwf	??_main+7
  1497  022C  095D               	comf	_a+2,w
  1498  022D  00D4               	movwf	??_main+8
  1499  022E  0AD2               	incf	??_main+6,f
  1500  022F  1903               	skipnz
  1501  0230  0AD3               	incf	??_main+7,f
  1502  0231  1903               	skipnz
  1503  0232  0AD4               	incf	??_main+8,f
  1504  0233  0852               	movf	??_main+6,w
  1505  0234  07CF               	addwf	??_main+3,f
  1506  0235  0853               	movf	??_main+7,w
  1507  0236  1803               	skipnc
  1508  0237  0F53               	incfsz	??_main+7,w
  1509  0238  2A3A               	goto	u2331
  1510  0239  2A3B               	goto	u2332
  1511  023A                     u2331:	
  1512  023A  07D0               	addwf	??_main+4,f
  1513  023B                     u2332:	
  1514  023B  0854               	movf	??_main+8,w
  1515  023C  1803               	skipnc
  1516  023D  0F54               	incfsz	??_main+8,w
  1517  023E  2A40               	goto	u2333
  1518  023F  2A41               	goto	u2334
  1519  0240                     u2333:	
  1520  0240  07D1               	addwf	??_main+5,f
  1521  0241                     u2334:	
  1522  0241  084F               	movf	??_main+3,w
  1523  0242  07CC               	addwf	??_main,f
  1524  0243  0850               	movf	??_main+4,w
  1525  0244  1803               	skipnc
  1526  0245  0F50               	incfsz	??_main+4,w
  1527  0246  2A48               	goto	u2341
  1528  0247  2A49               	goto	u2342
  1529  0248                     u2341:	
  1530  0248  07CD               	addwf	??_main+1,f
  1531  0249                     u2342:	
  1532  0249  0851               	movf	??_main+5,w
  1533  024A  1803               	skipnc
  1534  024B  0F51               	incfsz	??_main+5,w
  1535  024C  2A4E               	goto	u2343
  1536  024D  2A4F               	goto	u2344
  1537  024E                     u2343:	
  1538  024E  07CE               	addwf	??_main+2,f
  1539  024F                     u2344:	
  1540  024F  084C               	movf	??_main,w
  1541  0250  00D8               	movwf	_b
  1542  0251  084D               	movf	??_main+1,w
  1543  0252  00D9               	movwf	_b+1
  1544  0253  084E               	movf	??_main+2,w
  1545  0254  00DA               	movwf	_b+2
  1546                           
  1547                           ;main.c: 80:                 PIR1bits.TMR1IF = 0;
  1548  0255  3000               	movlw	0
  1549  0256  00E1               	movwf	_i
  1550  0257  3000               	movlw	0
  1551  0258  00E2               	movwf	_i+1
  1552  0259  3000               	movlw	0
  1553  025A  00E3               	movwf	_i+2
  1554  025B                     l2077:	
  1555  025B  085A               	movf	_b+2,w
  1556  025C  0263               	subwf	_i+2,w
  1557  025D  1D03               	skipz
  1558  025E  2A65               	goto	u2395
  1559  025F  0859               	movf	_b+1,w
  1560  0260  0262               	subwf	_i+1,w
  1561  0261  1D03               	skipz
  1562  0262  2A65               	goto	u2395
  1563  0263  0858               	movf	_b,w
  1564  0264  0261               	subwf	_i,w
  1565  0265                     u2395:	
  1566  0265  1803               	btfsc	3,0
  1567  0266  2B65               	goto	l2079
  1568                           
  1569                           ;main.c: 81:                 T1CONbits.TMR1ON = 1;
  1570  0267  3007               	movlw	7
  1571  0268  00A7               	movwf	RAM_sequential_SPI_read@latch
  1572  0269  3000               	movlw	0
  1573  026A  00A8               	movwf	RAM_sequential_SPI_read@latch+1
  1574  026B  3002               	movlw	2
  1575  026C  00CC               	movwf	??_main
  1576  026D  084C               	movf	??_main,w
  1577  026E  00A9               	movwf	RAM_sequential_SPI_read@pin_number
  1578  026F  0861               	movf	_i,w
  1579  0270  075B               	addwf	_a,w
  1580  0271  00CD               	movwf	??_main+1
  1581  0272  085C               	movf	_a+1,w
  1582  0273  00CE               	movwf	??_main+2
  1583  0274  0862               	movf	_i+1,w
  1584  0275  1803               	skipnc
  1585  0276  0A62               	incf	_i+1,w
  1586  0277  1D03               	btfss	3,2
  1587  0278  07CE               	addwf	??_main+2,f
  1588  0279  085D               	movf	_a+2,w
  1589  027A  00CF               	movwf	??_main+3
  1590  027B  0863               	movf	_i+2,w
  1591  027C  1803               	skipnc
  1592  027D  0A63               	incf	_i+2,w
  1593  027E  07CF               	addwf	??_main+3,f
  1594  027F  084D               	movf	??_main+1,w
  1595  0280  00AA               	movwf	RAM_sequential_SPI_read@address
  1596  0281  084E               	movf	??_main+2,w
  1597  0282  00AB               	movwf	RAM_sequential_SPI_read@address+1
  1598  0283  084F               	movf	??_main+3,w
  1599  0284  00AC               	movwf	RAM_sequential_SPI_read@address+2
  1600  0285  3065               	movlw	(low (_tvalue| 0))& (0+255)
  1601  0286  00AD               	movwf	RAM_sequential_SPI_read@data_in
  1602  0287  3000               	movlw	0
  1603  0288  00AE               	movwf	RAM_sequential_SPI_read@data_in+1
  1604  0289  3002               	movlw	2
  1605  028A  00D0               	movwf	??_main+4
  1606  028B  0850               	movf	??_main+4,w
  1607  028C  00AF               	movwf	RAM_sequential_SPI_read@data_in_size
  1608  028D  120A  158A  26C8  120A  118A  	fcall	_RAM_sequential_SPI_read
  1609                           
  1610                           ;main.c: 82:                 while (e < cycles);
  1611  0292  3007               	movlw	7
  1612  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0295  00A7               	movwf	RAM_sequential_SPI_read@latch
  1615  0296  3000               	movlw	0
  1616  0297  00A8               	movwf	RAM_sequential_SPI_read@latch+1
  1617  0298  3002               	movlw	2
  1618  0299  00CC               	movwf	??_main
  1619  029A  084C               	movf	??_main,w
  1620  029B  00A9               	movwf	RAM_sequential_SPI_read@pin_number
  1621  029C  3002               	movlw	2
  1622  029D  00CD               	movwf	??_main+1
  1623  029E  3000               	movlw	0
  1624  029F  00CE               	movwf	??_main+2
  1625  02A0  3000               	movlw	0
  1626  02A1  00CF               	movwf	??_main+3
  1627  02A2  0861               	movf	_i,w
  1628  02A3  075B               	addwf	_a,w
  1629  02A4  00D0               	movwf	??_main+4
  1630  02A5  085C               	movf	_a+1,w
  1631  02A6  00D1               	movwf	??_main+5
  1632  02A7  0862               	movf	_i+1,w
  1633  02A8  1803               	skipnc
  1634  02A9  0A62               	incf	_i+1,w
  1635  02AA  1D03               	btfss	3,2
  1636  02AB  07D1               	addwf	??_main+5,f
  1637  02AC  085D               	movf	_a+2,w
  1638  02AD  00D2               	movwf	??_main+6
  1639  02AE  0863               	movf	_i+2,w
  1640  02AF  1803               	skipnc
  1641  02B0  0A63               	incf	_i+2,w
  1642  02B1  07D2               	addwf	??_main+6,f
  1643  02B2  0850               	movf	??_main+4,w
  1644  02B3  07CD               	addwf	??_main+1,f
  1645  02B4  0851               	movf	??_main+5,w
  1646  02B5  1803               	skipnc
  1647  02B6  0F51               	incfsz	??_main+5,w
  1648  02B7  2AB9               	goto	u2371
  1649  02B8  2ABA               	goto	u2372
  1650  02B9                     u2371:	
  1651  02B9  07CE               	addwf	??_main+2,f
  1652  02BA                     u2372:	
  1653  02BA  0852               	movf	??_main+6,w
  1654  02BB  1803               	skipnc
  1655  02BC  0F52               	incfsz	??_main+6,w
  1656  02BD  2ABF               	goto	u2373
  1657  02BE  2AC0               	goto	u2374
  1658  02BF                     u2373:	
  1659  02BF  07CF               	addwf	??_main+3,f
  1660  02C0                     u2374:	
  1661  02C0  084D               	movf	??_main+1,w
  1662  02C1  00AA               	movwf	RAM_sequential_SPI_read@address
  1663  02C2  084E               	movf	??_main+2,w
  1664  02C3  00AB               	movwf	RAM_sequential_SPI_read@address+1
  1665  02C4  084F               	movf	??_main+3,w
  1666  02C5  00AC               	movwf	RAM_sequential_SPI_read@address+2
  1667  02C6  3067               	movlw	(low (_bvalue| 0))& (0+255)
  1668  02C7  00AD               	movwf	RAM_sequential_SPI_read@data_in
  1669  02C8  3000               	movlw	0
  1670  02C9  00AE               	movwf	RAM_sequential_SPI_read@data_in+1
  1671  02CA  01AF               	clrf	RAM_sequential_SPI_read@data_in_size
  1672  02CB  0AAF               	incf	RAM_sequential_SPI_read@data_in_size,f
  1673  02CC  120A  158A  26C8  120A  118A  	fcall	_RAM_sequential_SPI_read
  1674                           
  1675                           ;main.c: 83:                 T1CONbits.TMR1ON = 0;
  1676  02D1  3007               	movlw	7
  1677  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1678  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1679  02D4  00A7               	movwf	RAM_sequential_SPI_write@latch
  1680  02D5  3000               	movlw	0
  1681  02D6  00A8               	movwf	RAM_sequential_SPI_write@latch+1
  1682  02D7  3002               	movlw	2
  1683  02D8  00CC               	movwf	??_main
  1684  02D9  084C               	movf	??_main,w
  1685  02DA  00A9               	movwf	RAM_sequential_SPI_write@pin_number
  1686  02DB  0861               	movf	_i,w
  1687  02DC  00AA               	movwf	RAM_sequential_SPI_write@address
  1688  02DD  0862               	movf	_i+1,w
  1689  02DE  00AB               	movwf	RAM_sequential_SPI_write@address+1
  1690  02DF  0863               	movf	_i+2,w
  1691  02E0  00AC               	movwf	RAM_sequential_SPI_write@address+2
  1692  02E1  3065               	movlw	(low (_tvalue| 0))& (0+255)
  1693  02E2  00AD               	movwf	RAM_sequential_SPI_write@data_out
  1694  02E3  3000               	movlw	0
  1695  02E4  00AE               	movwf	RAM_sequential_SPI_write@data_out+1
  1696  02E5  3002               	movlw	2
  1697  02E6  00CD               	movwf	??_main+1
  1698  02E7  084D               	movf	??_main+1,w
  1699  02E8  00AF               	movwf	RAM_sequential_SPI_write@data_out_size
  1700  02E9  120A  158A  2764  120A  118A  	fcall	_RAM_sequential_SPI_write
  1701                           
  1702                           ;main.c: 84:             }
  1703  02EE  3007               	movlw	7
  1704  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1705  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1706  02F1  00A7               	movwf	RAM_sequential_SPI_write@latch
  1707  02F2  3000               	movlw	0
  1708  02F3  00A8               	movwf	RAM_sequential_SPI_write@latch+1
  1709  02F4  3002               	movlw	2
  1710  02F5  00CC               	movwf	??_main
  1711  02F6  084C               	movf	??_main,w
  1712  02F7  00A9               	movwf	RAM_sequential_SPI_write@pin_number
  1713  02F8  3002               	movlw	2
  1714  02F9  00CD               	movwf	??_main+1
  1715  02FA  3000               	movlw	0
  1716  02FB  00CE               	movwf	??_main+2
  1717  02FC  3000               	movlw	0
  1718  02FD  00CF               	movwf	??_main+3
  1719  02FE  0861               	movf	_i,w
  1720  02FF  07CD               	addwf	??_main+1,f
  1721  0300  0862               	movf	_i+1,w
  1722  0301  1803               	skipnc
  1723  0302  0F62               	incfsz	_i+1,w
  1724  0303  2B05               	goto	u2381
  1725  0304  2B06               	goto	u2382
  1726  0305                     u2381:	
  1727  0305  07CE               	addwf	??_main+2,f
  1728  0306                     u2382:	
  1729  0306  0863               	movf	_i+2,w
  1730  0307  1803               	skipnc
  1731  0308  0F63               	incfsz	_i+2,w
  1732  0309  2B0B               	goto	u2383
  1733  030A  2B0C               	goto	u2384
  1734  030B                     u2383:	
  1735  030B  07CF               	addwf	??_main+3,f
  1736  030C                     u2384:	
  1737  030C  084D               	movf	??_main+1,w
  1738  030D  00AA               	movwf	RAM_sequential_SPI_write@address
  1739  030E  084E               	movf	??_main+2,w
  1740  030F  00AB               	movwf	RAM_sequential_SPI_write@address+1
  1741  0310  084F               	movf	??_main+3,w
  1742  0311  00AC               	movwf	RAM_sequential_SPI_write@address+2
  1743  0312  3067               	movlw	(low (_bvalue| 0))& (0+255)
  1744  0313  00AD               	movwf	RAM_sequential_SPI_write@data_out
  1745  0314  3000               	movlw	0
  1746  0315  00AE               	movwf	RAM_sequential_SPI_write@data_out+1
  1747  0316  01AF               	clrf	RAM_sequential_SPI_write@data_out_size
  1748  0317  0AAF               	incf	RAM_sequential_SPI_write@data_out_size,f
  1749  0318  120A  158A  2764  120A  118A  	fcall	_RAM_sequential_SPI_write
  1750                           
  1751                           ;main.c: 85:             if (c == 't') {
  1752  031D  30EB               	movlw	low (STR_5| (0+32768))
  1753  031E  1283               	bcf	3,5	;RP0=0, select bank0
  1754  031F  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0320  00B5               	movwf	printf@f
  1756  0321  3087               	movlw	high (STR_5| (0+32768))
  1757  0322  00B6               	movwf	printf@f+1
  1758  0323  0862               	movf	_i+1,w
  1759  0324  00B8               	movwf	?_printf+3
  1760  0325  0861               	movf	_i,w
  1761  0326  00B7               	movwf	?_printf+2
  1762  0327  0965               	comf	_tvalue,w
  1763  0328  00CC               	movwf	??_main
  1764  0329  0966               	comf	_tvalue+1,w
  1765  032A  00CD               	movwf	??_main+1
  1766  032B  0ACC               	incf	??_main,f
  1767  032C  1903               	skipnz
  1768  032D  0ACD               	incf	??_main+1,f
  1769  032E  084C               	movf	??_main,w
  1770  032F  3EFF               	addlw	255
  1771  0330  00B9               	movwf	?_printf+4
  1772  0331  084D               	movf	??_main+1,w
  1773  0332  1803               	skipnc
  1774  0333  3E01               	addlw	1
  1775  0334  3EFF               	addlw	255
  1776  0335  00BA               	movwf	?_printf+5
  1777  0336  0867               	movf	_bvalue,w
  1778  0337  00CE               	movwf	??_main+2
  1779  0338  01CF               	clrf	??_main+3
  1780  0339  084E               	movf	??_main+2,w
  1781  033A  00BB               	movwf	?_printf+6
  1782  033B  084F               	movf	??_main+3,w
  1783  033C  00BC               	movwf	?_printf+7
  1784  033D  120A  118A  23E6  120A  118A  	fcall	_printf
  1785                           
  1786                           ;main.c: 86:                 printf("Resettare per uscire.\n\r");
  1787  0342  30FB               	movlw	low (STR_6| (0+32768))
  1788  0343  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0344  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0345  00B5               	movwf	printf@f
  1791  0346  3087               	movlw	high (STR_6| (0+32768))
  1792  0347  00B6               	movwf	printf@f+1
  1793  0348  0866               	movf	_tvalue+1,w
  1794  0349  00B8               	movwf	?_printf+3
  1795  034A  0865               	movf	_tvalue,w
  1796  034B  00B7               	movwf	?_printf+2
  1797  034C  0867               	movf	_bvalue,w
  1798  034D  00CC               	movwf	??_main
  1799  034E  01CD               	clrf	??_main+1
  1800  034F  084C               	movf	??_main,w
  1801  0350  00B9               	movwf	?_printf+4
  1802  0351  084D               	movf	??_main+1,w
  1803  0352  00BA               	movwf	?_printf+5
  1804  0353  120A  118A  23E6  120A  118A  	fcall	_printf
  1805                           
  1806                           ;main.c: 87:                 while (1) {
  1807  0358  3003               	movlw	3
  1808  0359  1283               	bcf	3,5	;RP0=0, select bank0
  1809  035A  1303               	bcf	3,6	;RP1=0, select bank0
  1810  035B  07E1               	addwf	_i,f
  1811  035C  3000               	movlw	0
  1812  035D  1803               	skipnc
  1813  035E  3001               	movlw	1
  1814  035F  07E2               	addwf	_i+1,f
  1815  0360  3000               	movlw	0
  1816  0361  1803               	skipnc
  1817  0362  3001               	movlw	1
  1818  0363  07E3               	addwf	_i+2,f
  1819  0364  2A5B               	goto	l2077
  1820  0365                     l2079:	
  1821                           ;main.c: 88:                     PORTAbits.RA1 = ~PORTBbits.RB4;
  1822                           
  1823                           
  1824                           ;main.c: 89:                     PORTAbits.RA2 = ~PORTBbits.RB4;
  1825  0365  3069               	movlw	105
  1826  0366  0664               	xorwf	_c,w
  1827  0367  1D03               	btfss	3,2
  1828  0368  2BB4               	goto	l2097
  1829                           
  1830                           ;main.c: 90:                 }
  1831  0369  301C               	movlw	low (STR_12| (0+32768))
  1832  036A  00B5               	movwf	printf@f
  1833  036B  3087               	movlw	high (STR_12| (0+32768))
  1834  036C  00B6               	movwf	printf@f+1
  1835  036D  120A  118A  23E6  120A  118A  	fcall	_printf
  1836                           
  1837                           ;main.c: 91:             }
  1838  0372  300A               	movlw	10
  1839  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1841  0375  00A8               	movwf	read_line@max_len
  1842  0376  3000               	movlw	0
  1843  0377  00A9               	movwf	read_line@max_len+1
  1844  0378  30A0               	movlw	(low (_number| 0))& (0+255)
  1845  0379  120A  158A  250C  120A  118A  	fcall	_read_line
  1846                           
  1847                           ;main.c: 92:         } else printf("ERRORE: digitare 'e', 'i' o 't'.\n\r");
  1848  037E  30A0               	movlw	(low (_number| 0))& (0+255)
  1849  037F  120A  158A  249B  120A  118A  	fcall	_atoi
  1850  0384  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0385  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0386  082D               	movf	?_atoi,w
  1853  0387  00D5               	movwf	_cycles
  1854  0388  082E               	movf	?_atoi+1,w
  1855  0389  00D6               	movwf	_cycles+1
  1856  038A  3000               	movlw	0
  1857  038B  1BAE               	btfsc	?_atoi+1,7
  1858  038C  30FF               	movlw	255
  1859  038D  00D7               	movwf	_cycles+2
  1860                           
  1861                           ;main.c: 93:     }
  1862  038E  30C8               	movlw	low (STR_13| (0+32768))
  1863  038F  00B5               	movwf	printf@f
  1864  0390  3087               	movlw	high (STR_13| (0+32768))
  1865  0391  00B6               	movwf	printf@f+1
  1866  0392  120A  118A  23E6  120A  118A  	fcall	_printf
  1867                           
  1868                           ;main.c: 94: }
  1869  0397  3000               	movlw	0
  1870  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1871  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1872  039A  00E1               	movwf	_i
  1873  039B  3000               	movlw	0
  1874  039C  00E2               	movwf	_i+1
  1875  039D  3000               	movlw	0
  1876  039E  00E3               	movwf	_i+2
  1877                           
  1878                           ;main.c: 95: 
  1879  039F  3000               	movlw	0
  1880  03A0  00DE               	movwf	_e
  1881  03A1  3000               	movlw	0
  1882  03A2  00DF               	movwf	_e+1
  1883  03A3  3000               	movlw	0
  1884  03A4  00E0               	movwf	_e+2
  1885                           
  1886                           ;main.c: 96: void setup_peripheals() {
  1887  03A5  100C               	bcf	12,0	;volatile
  1888                           
  1889                           ;main.c: 97: 
  1890  03A6  1410               	bsf	16,0	;volatile
  1891  03A7                     l2095:	
  1892                           ;main.c: 98:     PORTA = 0;
  1893                           
  1894  03A7  0857               	movf	_cycles+2,w
  1895  03A8  0260               	subwf	_e+2,w
  1896  03A9  1D03               	skipz
  1897  03AA  2BB1               	goto	u2415
  1898  03AB  0856               	movf	_cycles+1,w
  1899  03AC  025F               	subwf	_e+1,w
  1900  03AD  1D03               	skipz
  1901  03AE  2BB1               	goto	u2415
  1902  03AF  0855               	movf	_cycles,w
  1903  03B0  025E               	subwf	_e,w
  1904  03B1                     u2415:	
  1905  03B1  1C03               	skipc
  1906  03B2  2BA7               	goto	l2095
  1907                           
  1908                           ;main.c: 99:     ADCON1bits.PCFG = 0x06;
  1909  03B3  1010               	bcf	16,0	;volatile
  1910  03B4                     l2097:	
  1911                           ;main.c: 100: 
  1912                           
  1913                           
  1914                           ;main.c: 101:     TRISA = 0;
  1915  03B4  3074               	movlw	116
  1916  03B5  0664               	xorwf	_c,w
  1917  03B6  1D03               	btfss	3,2
  1918  03B7  2848               	goto	l1991
  1919                           
  1920                           ;main.c: 102:     TRISB = 0x10;
  1921  03B8  30B0               	movlw	low (STR_14| (0+32768))
  1922  03B9  00B5               	movwf	printf@f
  1923  03BA  3087               	movlw	high (STR_14| (0+32768))
  1924  03BB  00B6               	movwf	printf@f+1
  1925  03BC  120A  118A  23E6  120A  118A  	fcall	_printf
  1926  03C1                     l2101:	
  1927                           ;main.c: 103:     TRISC = 0x10;
  1928                           
  1929                           
  1930                           ;main.c: 104: 
  1931  03C1  1003               	clrc
  1932  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1933  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1934  03C4  1E06               	btfss	6,4	;volatile
  1935  03C5  1403               	setc
  1936  03C6  1C03               	btfss	3,0
  1937  03C7  2BCC               	goto	u2430
  1938  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1939  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  1940  03CA  1485               	bsf	5,1	;volatile
  1941  03CB  2BCF               	goto	l2103
  1942  03CC                     u2430:	
  1943  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1944  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1945  03CE  1085               	bcf	5,1	;volatile
  1946  03CF                     l2103:	
  1947                           
  1948                           ;main.c: 105: 
  1949  03CF  1003               	clrc
  1950  03D0  1E06               	btfss	6,4	;volatile
  1951  03D1  1403               	setc
  1952  03D2  1C03               	btfss	3,0
  1953  03D3  2BD8               	goto	u2450
  1954  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1955  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1956  03D6  1505               	bsf	5,2	;volatile
  1957  03D7  2BC1               	goto	l2101
  1958  03D8                     u2450:	
  1959  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1960  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1961  03DA  1105               	bcf	5,2	;volatile
  1962                           
  1963                           ;main.c: 106:     INTCONbits.GIE = 1;
  1964  03DB  2BC1               	goto	l2101
  1965  03DC                     l2105:	
  1966                           ;main.c: 108: 
  1967                           
  1968                           ;main.c: 107:     INTCONbits.PEIE = 1;
  1969                           
  1970  03DC  3074               	movlw	low (STR_15| (0+32768))
  1971  03DD  00B5               	movwf	printf@f
  1972  03DE  3087               	movlw	high (STR_15| (0+32768))
  1973  03DF  00B6               	movwf	printf@f+1
  1974  03E0  120A  118A  23E6  120A  118A  	fcall	_printf
  1975                           
  1976                           ;main.c: 109: 
  1977  03E5  2848               	goto	l1991
  1978  03E6                     __end_of_main:	
  1979                           
  1980                           	psect	text1
  1981  0C55                     __ptext1:	
  1982 ;; *************** function _setup_peripheals *****************
  1983 ;; Defined at:
  1984 ;;		line 112 in file "main.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;		None
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         0       0       0       0       0
  1999 ;;      Locals:         0       0       0       0       0
  2000 ;;      Temps:          0       0       0       0       0
  2001 ;;      Totals:         0       0       0       0       0
  2002 ;;Total ram usage:        0 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    2
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_main
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _setup_peripheals
  2014  0C55                     _setup_peripheals:	
  2015                           
  2016                           ;main.c: 114:     TRISCbits.TRISC6 = 0;
  2017                           
  2018                           ;incstack = 0
  2019                           ; Regs used in _setup_peripheals: [wreg+status,2+status,0]
  2020  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0C57  0185               	clrf	5	;volatile
  2023                           
  2024                           ;main.c: 115:     TRISCbits.TRISC7 = 1;
  2025  0C58  1683               	bsf	3,5	;RP0=1, select bank1
  2026  0C59  1303               	bcf	3,6	;RP1=0, select bank1
  2027  0C5A  081F               	movf	31,w	;volatile
  2028  0C5B  39F0               	andlw	-16
  2029  0C5C  3806               	iorlw	6
  2030  0C5D  009F               	movwf	31	;volatile
  2031                           
  2032                           ;main.c: 117: 
  2033  0C5E  0185               	clrf	5	;volatile
  2034                           
  2035                           ;main.c: 118:     TXSTAbits.SYNC = 0;
  2036  0C5F  3010               	movlw	16
  2037  0C60  0086               	movwf	6	;volatile
  2038                           
  2039                           ;main.c: 119:     TXSTAbits.TX9 = 0;
  2040  0C61  3010               	movlw	16
  2041  0C62  0087               	movwf	7	;volatile
  2042                           
  2043                           ;main.c: 122: 
  2044  0C63  178B               	bsf	11,7	;volatile
  2045                           
  2046                           ;main.c: 123:     TXSTAbits.BRGH = 0;
  2047  0C64  170B               	bsf	11,6	;volatile
  2048                           
  2049                           ;main.c: 126:     RCSTAbits.CREN = 1;
  2050  0C65  100B               	bcf	11,0	;volatile
  2051                           
  2052                           ;main.c: 127:     RCSTAbits.SPEN = 1;
  2053  0C66  118B               	bcf	11,3	;volatile
  2054                           
  2055                           ;main.c: 130:     PIE1bits.RCIE = 0;
  2056  0C67  1307               	bcf	7,6	;volatile
  2057                           
  2058                           ;main.c: 131: 
  2059  0C68  1787               	bsf	7,7	;volatile
  2060                           
  2061                           ;main.c: 132: 
  2062  0C69  1283               	bcf	3,5	;RP0=0, select bank0
  2063  0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  2064  0C6B  1707               	bsf	7,6	;volatile
  2065                           
  2066                           ;main.c: 134:     T1CONbits.T1OSCEN = 0;
  2067  0C6C  1683               	bsf	3,5	;RP0=1, select bank1
  2068  0C6D  1303               	bcf	3,6	;RP1=0, select bank1
  2069  0C6E  1218               	bcf	24,4	;volatile
  2070                           
  2071                           ;main.c: 135:     T1CONbits.TMR1CS = 0;
  2072  0C6F  1318               	bcf	24,6	;volatile
  2073                           
  2074                           ;main.c: 136:     T1CONbits.TMR1ON = 0;
  2075  0C70  1698               	bsf	24,5	;volatile
  2076                           
  2077                           ;main.c: 137:     TMR1 = 0;
  2078  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0C73  1318               	bcf	24,6	;volatile
  2081                           
  2082                           ;main.c: 139:     PIE1bits.TMR1IE = 1;
  2083  0C74  1683               	bsf	3,5	;RP0=1, select bank1
  2084  0C75  1303               	bcf	3,6	;RP1=0, select bank1
  2085  0C76  1118               	bcf	24,2	;volatile
  2086                           
  2087                           ;main.c: 140:     PIR1bits.TMR1IF = 0;
  2088  0C77  300F               	movlw	15
  2089  0C78  0099               	movwf	25	;volatile
  2090                           
  2091                           ;main.c: 142: 
  2092  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0C7B  1618               	bsf	24,4	;volatile
  2095                           
  2096                           ;main.c: 143: 
  2097  0C7C  1798               	bsf	24,7	;volatile
  2098                           
  2099                           ;main.c: 145:     SSPSTATbits.CKE = 1;
  2100  0C7D  1683               	bsf	3,5	;RP0=1, select bank1
  2101  0C7E  1303               	bcf	3,6	;RP1=0, select bank1
  2102  0C7F  120C               	bcf	12,4	;volatile
  2103                           
  2104                           ;main.c: 146:     SSPCONbits.SSPEN = 1;
  2105  0C80  128C               	bcf	12,5	;volatile
  2106                           
  2107                           ;main.c: 149: }
  2108  0C81  3030               	movlw	48
  2109  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0C84  0490               	iorwf	16,f	;volatile
  2112                           
  2113                           ;main.c: 150: 
  2114  0C85  1190               	bcf	16,3	;volatile
  2115                           
  2116                           ;main.c: 151: void putch(char c) {
  2117  0C86  1090               	bcf	16,1	;volatile
  2118                           
  2119                           ;main.c: 152: 
  2120  0C87  1010               	bcf	16,0	;volatile
  2121                           
  2122                           ;main.c: 153:     while (TXSTAbits.TRMT == 0) {
  2123  0C88  018E               	clrf	14	;volatile
  2124  0C89  018F               	clrf	15	;volatile
  2125                           
  2126                           ;main.c: 155:     TXREG = c;
  2127  0C8A  1683               	bsf	3,5	;RP0=1, select bank1
  2128  0C8B  1303               	bcf	3,6	;RP1=0, select bank1
  2129  0C8C  140C               	bsf	12,0	;volatile
  2130                           
  2131                           ;main.c: 156: }
  2132  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0C8F  100C               	bcf	12,0	;volatile
  2135                           
  2136                           ;main.c: 160:         if (RCSTAbits.OERR == 1) {
  2137  0C90  1683               	bsf	3,5	;RP0=1, select bank1
  2138  0C91  1303               	bcf	3,6	;RP1=0, select bank1
  2139  0C92  1794               	bsf	20,7	;volatile
  2140                           
  2141                           ;main.c: 161:             RCSTAbits.OERR = 0;
  2142  0C93  1714               	bsf	20,6	;volatile
  2143                           
  2144                           ;main.c: 162:             RCSTAbits.CREN = 0;
  2145  0C94  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0C95  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0C96  1694               	bsf	20,5	;volatile
  2148                           
  2149                           ;main.c: 163:             RCSTAbits.CREN = 1;
  2150  0C97  1214               	bcf	20,4	;volatile
  2151                           
  2152                           ;main.c: 164:         }
  2153  0C98  30F0               	movlw	-16
  2154  0C99  0594               	andwf	20,f	;volatile
  2155  0C9A  0008               	return
  2156  0C9B                     __end_of_setup_peripheals:	
  2157                           
  2158                           	psect	text2
  2159  0D0C                     __ptext2:	
  2160 ;; *************** function _read_line *****************
  2161 ;; Defined at:
  2162 ;;		line 185 in file "main.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  s               1    wreg     PTR unsigned char 
  2165 ;;		 -> number(10), 
  2166 ;;  max_len         2    8[BANK0 ] int 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  s               1   12[BANK0 ] PTR unsigned char 
  2169 ;;		 -> number(10), 
  2170 ;;  c               1   15[BANK0 ] unsigned char 
  2171 ;;  i               2   13[BANK0 ] int 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2181 ;;      Params:         0       2       0       0       0
  2182 ;;      Locals:         0       4       0       0       0
  2183 ;;      Temps:          0       2       0       0       0
  2184 ;;      Totals:         0       8       0       0       0
  2185 ;;Total ram usage:        8 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    3
  2188 ;; This function calls:
  2189 ;;		_putch
  2190 ;;		_read_char
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           
  2197                           ;psect for function _read_line
  2198  0D0C                     _read_line:	
  2199                           
  2200                           ;incstack = 0
  2201                           ; Regs used in _read_line: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2202                           ;read_line@s stored from wreg
  2203  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0D0E  00AC               	movwf	read_line@s
  2206                           
  2207                           ;main.c: 186:             if (i < max_len) {
  2208  0D0F  01AD               	clrf	read_line@i
  2209  0D10  01AE               	clrf	read_line@i+1
  2210  0D11  2D26               	goto	l1837
  2211  0D12                     l1841:	
  2212                           
  2213                           ;main.c: 190:             }
  2214  0D12  082F               	movf	read_line@c,w
  2215  0D13  120A  158A  23A0  120A  158A  	fcall	_putch
  2216                           
  2217                           ;main.c: 191:         }
  2218  0D18  300A               	movlw	10
  2219  0D19  120A  158A  23A0   	fcall	_putch
  2220                           
  2221                           ;main.c: 192:     }
  2222  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0D1E  082D               	movf	read_line@i,w
  2225  0D1F  072C               	addwf	read_line@s,w
  2226  0D20  00AA               	movwf	??_read_line
  2227  0D21  082A               	movf	??_read_line,w
  2228  0D22  0084               	movwf	4
  2229  0D23  1383               	bcf	3,7	;select IRP bank0
  2230  0D24  0180               	clrf	0
  2231                           
  2232                           ;main.c: 193: }
  2233  0D25  0008               	return
  2234  0D26                     l1837:	
  2235                           ;main.c: 187:                 putch(c);
  2236                           
  2237                           ;main.c: 194: 
  2238                           
  2239                           
  2240                           ;main.c: 188:                 s[i] = c;
  2241  0D26  120A  158A  23AC  120A  158A  	fcall	_read_char
  2242  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0D2D  00AA               	movwf	??_read_line
  2245  0D2E  082A               	movf	??_read_line,w
  2246  0D2F  00AF               	movwf	read_line@c
  2247                           
  2248                           ;main.c: 189:                 ++i;
  2249  0D30  300D               	movlw	13
  2250  0D31  062F               	xorwf	read_line@c,w
  2251  0D32  1903               	btfsc	3,2
  2252  0D33  2D12               	goto	l1841
  2253  0D34  307F               	movlw	127
  2254  0D35  062F               	xorwf	read_line@c,w
  2255  0D36  1903               	btfsc	3,2
  2256  0D37  2D3C               	goto	l1853
  2257  0D38  3008               	movlw	8
  2258  0D39  062F               	xorwf	read_line@c,w
  2259  0D3A  1D03               	btfss	3,2
  2260  0D3B  2D65               	goto	l1859
  2261  0D3C                     l1853:	
  2262                           
  2263                           ;main.c: 195: void RAM_set_SPI_mode(volatile unsigned char* latch, uint8_t pin_number) {
  2264  0D3C  082E               	movf	read_line@i+1,w
  2265  0D3D  3A80               	xorlw	128
  2266  0D3E  00FF               	movwf	127
  2267  0D3F  3080               	movlw	128
  2268  0D40  027F               	subwf	127,w
  2269  0D41  1D03               	skipz
  2270  0D42  2D45               	goto	u1915
  2271  0D43  3001               	movlw	1
  2272  0D44  022D               	subwf	read_line@i,w
  2273  0D45                     u1915:	
  2274  0D45  1C03               	skipc
  2275  0D46  2D26               	goto	l1837
  2276                           
  2277                           ;main.c: 196:     uint8_t dummy = 0;
  2278  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  2280  0D49  082F               	movf	read_line@c,w
  2281  0D4A  120A  158A  23A0  120A  158A  	fcall	_putch
  2282                           
  2283                           ;main.c: 197:     *latch &= ~(1 << pin_number);
  2284  0D4F  3020               	movlw	32
  2285  0D50  120A  158A  23A0  120A  158A  	fcall	_putch
  2286                           
  2287                           ;main.c: 198: 
  2288  0D55  1283               	bcf	3,5	;RP0=0, select bank0
  2289  0D56  1303               	bcf	3,6	;RP1=0, select bank0
  2290  0D57  082F               	movf	read_line@c,w
  2291  0D58  120A  158A  23A0  120A  158A  	fcall	_putch
  2292                           
  2293                           ;main.c: 199:     SSPCONbits.WCOL = 0;
  2294  0D5D  30FF               	movlw	255
  2295  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0D60  07AD               	addwf	read_line@i,f
  2298  0D61  1803               	skipnc
  2299  0D62  0AAE               	incf	read_line@i+1,f
  2300  0D63  30FF               	movlw	255
  2301  0D64  2D8E               	goto	L1
  2302  0D65                     l1859:	
  2303                           ;main.c: 201:     while (SSPSTATbits.BF == 0);
  2304                           
  2305                           ;main.c: 200:     SSPBUF = 0b11111111;
  2306                           
  2307  0D65  3020               	movlw	32
  2308  0D66  022F               	subwf	read_line@c,w
  2309  0D67  1C03               	skipc
  2310  0D68  2D26               	goto	l1837
  2311                           
  2312                           ;main.c: 202:     dummy = SSPBUF;
  2313  0D69  082E               	movf	read_line@i+1,w
  2314  0D6A  3A80               	xorlw	128
  2315  0D6B  00AA               	movwf	??_read_line
  2316  0D6C  0829               	movf	read_line@max_len+1,w
  2317  0D6D  3A80               	xorlw	128
  2318  0D6E  022A               	subwf	??_read_line,w
  2319  0D6F  1D03               	skipz
  2320  0D70  2D73               	goto	u1935
  2321  0D71  0828               	movf	read_line@max_len,w
  2322  0D72  022D               	subwf	read_line@i,w
  2323  0D73                     u1935:	
  2324  0D73  1803               	skipnc
  2325  0D74  2D26               	goto	l1837
  2326                           
  2327                           ;main.c: 203:     *latch |= (1 << pin_number);
  2328  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0D77  082F               	movf	read_line@c,w
  2331  0D78  120A  158A  23A0  120A  158A  	fcall	_putch
  2332                           
  2333                           ;main.c: 204: }
  2334  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0D7F  082F               	movf	read_line@c,w
  2337  0D80  00AA               	movwf	??_read_line
  2338  0D81  082D               	movf	read_line@i,w
  2339  0D82  072C               	addwf	read_line@s,w
  2340  0D83  00AB               	movwf	??_read_line+1
  2341  0D84  082B               	movf	??_read_line+1,w
  2342  0D85  0084               	movwf	4
  2343  0D86  082A               	movf	??_read_line,w
  2344  0D87  1383               	bcf	3,7	;select IRP bank0
  2345  0D88  0080               	movwf	0
  2346                           
  2347                           ;main.c: 205: 
  2348  0D89  3001               	movlw	1
  2349  0D8A  07AD               	addwf	read_line@i,f
  2350  0D8B  1803               	skipnc
  2351  0D8C  0AAE               	incf	read_line@i+1,f
  2352  0D8D  3000               	movlw	0
  2353  0D8E                     L1:	
  2354  0D8E  07AE               	addwf	read_line@i+1,f
  2355                           
  2356                           ;main.c: 208:     *latch &= ~(1 << pin_number);
  2357                           
  2358                           ;main.c: 207:     uint8_t i, dummy = 0;
  2359                           
  2360                           ;main.c: 206: void RAM_sequential_SPI_write(volatile unsigned char* latch, uint8_t pin_n
      +                          umber, uint24_t address, uint8_t *data_out, uint8_t data_out_size) {
  2361  0D8F  2D26               	goto	l1837
  2362  0D90                     __end_of_read_line:	
  2363                           
  2364                           	psect	text3
  2365  0BAC                     __ptext3:	
  2366 ;; *************** function _read_char *****************
  2367 ;; Defined at:
  2368 ;;		line 174 in file "main.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      unsigned char 
  2375 ;; Registers used:
  2376 ;;		wreg
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2382 ;;      Params:         0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0
  2385 ;;      Totals:         0       0       0       0       0
  2386 ;;Total ram usage:        0 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    2
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;;		_read_line
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           
  2398                           ;psect for function _read_char
  2399  0BAC                     _read_char:	
  2400  0BAC                     l121:	
  2401                           ;main.c: 181:                 putch(' ');
  2402                           
  2403                           ;main.c: 180:                 putch(c);
  2404                           
  2405                           ;main.c: 175:             putch(10);
  2406                           
  2407                           ;incstack = 0
  2408                           ; Regs used in _read_char: [wreg]
  2409                           
  2410                           
  2411                           ;main.c: 175:             putch(10);
  2412  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0BAE  1A8C               	btfsc	12,5	;volatile
  2415  0BAF  2BB6               	goto	l1505
  2416                           
  2417                           ;main.c: 176:             s[i] = 0;
  2418  0BB0  1C98               	btfss	24,1	;volatile
  2419  0BB1  2BAC               	goto	l121
  2420                           
  2421                           ;main.c: 177:             return;
  2422  0BB2  1098               	bcf	24,1	;volatile
  2423                           
  2424                           ;main.c: 178:         } else if (c == 127 || c == 8) {
  2425  0BB3  1218               	bcf	24,4	;volatile
  2426                           
  2427                           ;main.c: 179:             if (i > 0) {
  2428  0BB4  1618               	bsf	24,4	;volatile
  2429  0BB5  2BAC               	goto	l121
  2430  0BB6                     l1505:	
  2431                           
  2432                           ;main.c: 182:                 putch(c);
  2433  0BB6  081A               	movf	26,w	;volatile
  2434  0BB7  0008               	return
  2435  0BB8                     __end_of_read_char:	
  2436                           
  2437                           	psect	text4
  2438  03E6                     __ptext4:	
  2439 ;; *************** function _printf *****************
  2440 ;; Defined at:
  2441 ;;		line 472 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  f               2   21[BANK0 ] PTR const unsigned char 
  2444 ;;		 -> STR_15(35), STR_14(24), STR_13(18), STR_12(47), 
  2445 ;;		 -> STR_11(9), STR_10(16), STR_9(7), STR_8(9), 
  2446 ;;		 -> STR_7(25), STR_6(9), STR_5(16), STR_4(17), 
  2447 ;;		 -> STR_3(5), STR_2(41), STR_1(8), 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  tmpval          4    0        struct .
  2450 ;;  width           2   41[BANK0 ] int 
  2451 ;;  len             2   39[BANK0 ] unsigned int 
  2452 ;;  val             2   35[BANK0 ] unsigned int 
  2453 ;;  c               1   43[BANK0 ] unsigned char 
  2454 ;;  ap              1   38[BANK0 ] PTR void [1]
  2455 ;;		 -> ?_printf(2), 
  2456 ;;  prec            1   37[BANK0 ] char 
  2457 ;;  cp              1   34[BANK0 ] PTR const unsigned char 
  2458 ;;		 -> printf@c(1), 
  2459 ;;  flag            1   33[BANK0 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2   21[BANK0 ] int 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       8       0       0       0
  2470 ;;      Locals:         0      11       0       0       0
  2471 ;;      Temps:          0       4       0       0       0
  2472 ;;      Totals:         0      23       0       0       0
  2473 ;;Total ram usage:       23 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    3
  2476 ;; This function calls:
  2477 ;;		___lwdiv
  2478 ;;		___lwmod
  2479 ;;		___wmul
  2480 ;;		_isdigit
  2481 ;;		_putch
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function _printf
  2489  03E6                     _printf:	
  2490                           
  2491                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 472: printf
      +                          (const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\
      +                          doprnt.c: 473: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprn
      +                          t.c: 474:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common
      +                          \doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\comm
      +                          on\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90
      +                          \common\doprnt.c: 516:  signed char prec;
  2492                           
  2493                           ;incstack = 0
  2494                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2495  03E6  3037               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2496  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2497  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2498  03E9  00BD               	movwf	??_printf
  2499  03EA  083D               	movf	??_printf,w
  2500  03EB  00C6               	movwf	printf@ap
  2501  03EC                     l1741:	
  2502                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  2503                           
  2504                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2505                           
  2506                           
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2508  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2509  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2510  03EE  0836               	movf	printf@f+1,w
  2511  03EF  00BE               	movwf	??_printf+1
  2512  03F0  0835               	movf	printf@f,w
  2513  03F1  00BD               	movwf	??_printf
  2514  03F2  0AB5               	incf	printf@f,f
  2515  03F3  1903               	skipnz
  2516  03F4  0AB6               	incf	printf@f+1,f
  2517  03F5  083E               	movf	??_printf+1,w
  2518  03F6  00FF               	movwf	127
  2519  03F7  083D               	movf	??_printf,w
  2520  03F8  0084               	movwf	4
  2521  03F9  120A  118A  2700  120A  118A  	fcall	stringtab
  2522  03FE  00BF               	movwf	??_printf+2
  2523  03FF  083F               	movf	??_printf+2,w
  2524  0400  00CB               	movwf	printf@c
  2525  0401  084B               	movf	printf@c,w
  2526  0402  1903               	btfsc	3,2
  2527  0403  0008               	return
  2528                           
  2529                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  2530  0404  3025               	movlw	37
  2531  0405  064B               	xorwf	printf@c,w
  2532  0406  1903               	btfsc	3,2
  2533  0407  2C0F               	goto	l1661
  2534                           
  2535                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    (putch
      +                          (c) );
  2536  0408  084B               	movf	printf@c,w
  2537  0409  120A  158A  23A0  120A  118A  	fcall	_putch
  2538                           
  2539                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2540  040E  2BEC               	goto	l1741
  2541  040F                     l1661:	
  2542                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  2543                           
  2544                           
  2545                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 558:   widt
      +                          h = 0;
  2546  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2548  0411  01C9               	clrf	printf@width
  2549  0412  01CA               	clrf	printf@width+1
  2550                           
  2551                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2552  0413  01C1               	clrf	printf@flag
  2553                           
  2554                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 609:   if(i
      +                          sdigit((unsigned)*f)) {
  2555  0414  0836               	movf	printf@f+1,w
  2556  0415  00FF               	movwf	127
  2557  0416  0835               	movf	printf@f,w
  2558  0417  0084               	movwf	4
  2559  0418  120A  118A  2700  120A  118A  	fcall	stringtab
  2560  041D  120A  158A  23B8  120A  118A  	fcall	_isdigit
  2561  0422  1C03               	btfss	3,0
  2562  0423  2CC3               	goto	l1703
  2563                           
  2564                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 610:    wid
      +                          th = 0;
  2565  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0426  01C9               	clrf	printf@width
  2568  0427  01CA               	clrf	printf@width+1
  2569  0428                     l1667:	
  2570                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 611:    do 
      +                          {
  2571                           
  2572                           
  2573                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 612:     wi
      +                          dth *= 10;
  2574  0428  300A               	movlw	10
  2575  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2576  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2577  042B  00A7               	movwf	___wmul@multiplier
  2578  042C  3000               	movlw	0
  2579  042D  00A8               	movwf	___wmul@multiplier+1
  2580  042E  084A               	movf	printf@width+1,w
  2581  042F  00AA               	movwf	___wmul@multiplicand+1
  2582  0430  0849               	movf	printf@width,w
  2583  0431  00A9               	movwf	___wmul@multiplicand
  2584  0432  120A  158A  23C8  120A  118A  	fcall	___wmul
  2585  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2586  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2587  0439  0828               	movf	?___wmul+1,w
  2588  043A  00CA               	movwf	printf@width+1
  2589  043B  0827               	movf	?___wmul,w
  2590  043C  00C9               	movwf	printf@width
  2591                           
  2592                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 613:       
      +                           width += *f++ - '0';
  2593  043D  0836               	movf	printf@f+1,w
  2594  043E  00FF               	movwf	127
  2595  043F  0835               	movf	printf@f,w
  2596  0440  0084               	movwf	4
  2597  0441  120A  118A  2700  120A  118A  	fcall	stringtab
  2598  0446  3ED0               	addlw	208
  2599  0447  00BD               	movwf	??_printf
  2600  0448  30FF               	movlw	255
  2601  0449  1803               	skipnc
  2602  044A  3000               	movlw	0
  2603  044B  00BE               	movwf	??_printf+1
  2604  044C  083D               	movf	??_printf,w
  2605  044D  07C9               	addwf	printf@width,f
  2606  044E  1803               	skipnc
  2607  044F  0ACA               	incf	printf@width+1,f
  2608  0450  083E               	movf	??_printf+1,w
  2609  0451  07CA               	addwf	printf@width+1,f
  2610  0452  3001               	movlw	1
  2611  0453  07B5               	addwf	printf@f,f
  2612  0454  1803               	skipnc
  2613  0455  0AB6               	incf	printf@f+1,f
  2614                           
  2615                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 614:    } w
      +                          hile(isdigit((unsigned)*f));
  2616  0456  0836               	movf	printf@f+1,w
  2617  0457  00FF               	movwf	127
  2618  0458  0835               	movf	printf@f,w
  2619  0459  0084               	movwf	4
  2620  045A  120A  118A  2700  120A  118A  	fcall	stringtab
  2621  045F  120A  158A  23B8  120A  118A  	fcall	_isdigit
  2622  0464  1C03               	btfss	3,0
  2623  0465  2CC3               	goto	l1703
  2624  0466  2C28               	goto	l1667
  2625  0467                     l1675:	
  2626                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 769: dostri
      +                          ng:
  2627                           
  2628                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
      +                          o alldone;
  2629                           
  2630                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
      +                           0:
  2631                           
  2632                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  2633                           
  2634                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 620:   }
  2635                           
  2636                           
  2637                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 776:    if(
      +                          width > len)
  2638  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2639  0468  1303               	bcf	3,6	;RP1=0, select bank0
  2640  0469  084A               	movf	printf@width+1,w
  2641  046A  0248               	subwf	printf@len+1,w
  2642  046B  1D03               	skipz
  2643  046C  2C6F               	goto	u1545
  2644  046D  0849               	movf	printf@width,w
  2645  046E  0247               	subwf	printf@len,w
  2646  046F                     u1545:	
  2647  046F  1803               	skipnc
  2648  0470  2C78               	goto	l1679
  2649                           
  2650                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 777:     wi
      +                          dth -= len;
  2651  0471  0847               	movf	printf@len,w
  2652  0472  02C9               	subwf	printf@width,f
  2653  0473  0848               	movf	printf@len+1,w
  2654  0474  1C03               	skipc
  2655  0475  03CA               	decf	printf@width+1,f
  2656  0476  02CA               	subwf	printf@width+1,f
  2657  0477  2C7A               	goto	l1683
  2658  0478                     l1679:	
  2659                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 778:    els
      +                          e
  2660                           
  2661                           
  2662                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 779:     wi
      +                          dth = 0;
  2663  0478  01C9               	clrf	printf@width
  2664  0479  01CA               	clrf	printf@width+1
  2665  047A                     l1683:	
  2666                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 783:     wh
      +                          ile(width--)
  2667                           
  2668                           
  2669                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 783:     wh
      +                          ile(width--)
  2670  047A  30FF               	movlw	255
  2671  047B  1283               	bcf	3,5	;RP0=0, select bank0
  2672  047C  1303               	bcf	3,6	;RP1=0, select bank0
  2673  047D  07C9               	addwf	printf@width,f
  2674  047E  1803               	skipnc
  2675  047F  0ACA               	incf	printf@width+1,f
  2676  0480  30FF               	movlw	255
  2677  0481  07CA               	addwf	printf@width+1,f
  2678  0482  0A49               	incf	printf@width,w
  2679  0483  1903               	btfsc	3,2
  2680  0484  0A4A               	incf	printf@width+1,w
  2681  0485  1903               	btfsc	3,2
  2682  0486  2C9D               	goto	l1689
  2683                           
  2684                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 784:      (
      +                          putch(' ') );
  2685  0487  3020               	movlw	32
  2686  0488  120A  158A  23A0  120A  118A  	fcall	_putch
  2687  048D  2C7A               	goto	l1683
  2688  048E                     l1685:	
  2689                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 786:    whi
      +                          le(len--)
  2690                           
  2691                           
  2692                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 787:     (p
      +                          utch(*cp++) );
  2693  048E  0842               	movf	printf@cp,w
  2694  048F  0084               	movwf	4
  2695  0490  1383               	bcf	3,7	;select IRP bank0
  2696  0491  0800               	movf	0,w
  2697  0492  120A  158A  23A0  120A  118A  	fcall	_putch
  2698  0497  3001               	movlw	1
  2699  0498  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0499  1303               	bcf	3,6	;RP1=0, select bank0
  2701  049A  00BD               	movwf	??_printf
  2702  049B  083D               	movf	??_printf,w
  2703  049C  07C2               	addwf	printf@cp,f
  2704  049D                     l1689:	
  2705                           
  2706                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 786:    whi
      +                          le(len--)
  2707  049D  3001               	movlw	1
  2708  049E  02C7               	subwf	printf@len,f
  2709  049F  3000               	movlw	0
  2710  04A0  1C03               	skipc
  2711  04A1  03C8               	decf	printf@len+1,f
  2712  04A2  02C8               	subwf	printf@len+1,f
  2713  04A3  0A47               	incf	printf@len,w
  2714  04A4  1D03               	skipz
  2715  04A5  2C8E               	goto	l1685
  2716  04A6  0A48               	incf	printf@len+1,w
  2717  04A7  1903               	btfsc	3,2
  2718  04A8  2BEC               	goto	l1741
  2719  04A9  2C8E               	goto	l1685
  2720  04AA                     l1691:	
  2721                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 803:   case
      +                           'c':
  2722                           
  2723                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 793:    con
      +                          tinue;
  2724                           
  2725                           
  2726                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 818:    c =
      +                           (*(int *)__va_arg((*(int **)ap), (int)0));
  2727  04AA  0846               	movf	printf@ap,w
  2728  04AB  0084               	movwf	4
  2729  04AC  1383               	bcf	3,7	;select IRP bank0
  2730  04AD  0800               	movf	0,w
  2731  04AE  00BD               	movwf	??_printf
  2732  04AF  083D               	movf	??_printf,w
  2733  04B0  00CB               	movwf	printf@c
  2734  04B1  3002               	movlw	2
  2735  04B2  00BD               	movwf	??_printf
  2736  04B3  083D               	movf	??_printf,w
  2737  04B4  07C6               	addwf	printf@ap,f
  2738  04B5                     l1695:	
  2739                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
      +                          ult:
  2740                           
  2741                           
  2742                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 824:    cp 
      +                          = (char *)&c;
  2743  04B5  304B               	movlw	(low (printf@c| 0))& (0+255)
  2744  04B6  00BD               	movwf	??_printf
  2745  04B7  083D               	movf	??_printf,w
  2746  04B8  00C2               	movwf	printf@cp
  2747                           
  2748                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 825:    len
      +                           = 1;
  2749  04B9  3001               	movlw	1
  2750  04BA  00C7               	movwf	printf@len
  2751  04BB  3000               	movlw	0
  2752  04BC  00C8               	movwf	printf@len+1
  2753                           
  2754                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 826:    got
      +                          o dostring;
  2755  04BD  2C67               	goto	l1675
  2756  04BE                     l1699:	
  2757                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 836:   case
      +                           'u':
  2758                           
  2759                           
  2760                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 837:    fla
      +                          g |= 0xC0;
  2761  04BE  30C0               	movlw	192
  2762  04BF  00BD               	movwf	??_printf
  2763  04C0  083D               	movf	??_printf,w
  2764  04C1  04C1               	iorwf	printf@flag,f
  2765                           
  2766                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  2767                           
  2768                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 838:    bre
      +                          ak;
  2769  04C2  2CE8               	goto	l1705
  2770  04C3                     l1703:	
  2771  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2772  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2773  04C5  0836               	movf	printf@f+1,w
  2774  04C6  00BE               	movwf	??_printf+1
  2775  04C7  0835               	movf	printf@f,w
  2776  04C8  00BD               	movwf	??_printf
  2777  04C9  0AB5               	incf	printf@f,f
  2778  04CA  1903               	skipnz
  2779  04CB  0AB6               	incf	printf@f+1,f
  2780  04CC  083E               	movf	??_printf+1,w
  2781  04CD  00FF               	movwf	127
  2782  04CE  083D               	movf	??_printf,w
  2783  04CF  0084               	movwf	4
  2784  04D0  120A  118A  2700  120A  118A  	fcall	stringtab
  2785  04D5  00CB               	movwf	printf@c
  2786  04D6  00BF               	movwf	??_printf+2
  2787  04D7  01C0               	clrf	??_printf+3
  2788                           
  2789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2790                           ; Switch size 1, requested type "space"
  2791                           ; Number of cases is 1, Range of values is 0 to 0
  2792                           ; switch strategies available:
  2793                           ; Name         Instructions Cycles
  2794                           ; simple_byte            4     3 (average)
  2795                           ; direct_byte           11     8 (fixed)
  2796                           ; jumptable            260     6 (fixed)
  2797                           ;	Chosen strategy is simple_byte
  2798  04D8  0840               	movf	??_printf+3,w
  2799  04D9  3A00               	xorlw	0	; case 0
  2800  04DA  1903               	skipnz
  2801  04DB  2CDD               	goto	l2163
  2802  04DC  2CB5               	goto	l1695
  2803  04DD                     l2163:	
  2804                           
  2805                           ; Switch size 1, requested type "space"
  2806                           ; Number of cases is 3, Range of values is 0 to 117
  2807                           ; switch strategies available:
  2808                           ; Name         Instructions Cycles
  2809                           ; simple_byte           10     6 (average)
  2810                           ; jumptable            260     6 (fixed)
  2811                           ;	Chosen strategy is simple_byte
  2812  04DD  083F               	movf	??_printf+2,w
  2813  04DE  3A00               	xorlw	0	; case 0
  2814  04DF  1903               	skipnz
  2815  04E0  2D96               	goto	l328
  2816  04E1  3A63               	xorlw	99	; case 99
  2817  04E2  1903               	skipnz
  2818  04E3  2CAA               	goto	l1691
  2819  04E4  3A16               	xorlw	22	; case 117
  2820  04E5  1903               	skipnz
  2821  04E6  2CBE               	goto	l1699
  2822  04E7  2CB5               	goto	l1695
  2823  04E8                     l1705:	
  2824                           
  2825                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1292:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1305:     val
      +                           = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2826  04E8  0846               	movf	printf@ap,w
  2827  04E9  0084               	movwf	4
  2828  04EA  1383               	bcf	3,7	;select IRP bank0
  2829  04EB  0800               	movf	0,w
  2830  04EC  00C3               	movwf	printf@val
  2831  04ED  0A84               	incf	4,f
  2832  04EE  0800               	movf	0,w
  2833  04EF  00C4               	movwf	printf@val+1
  2834  04F0  3002               	movlw	2
  2835  04F1  00BD               	movwf	??_printf
  2836  04F2  083D               	movf	??_printf,w
  2837  04F3  07C6               	addwf	printf@ap,f
  2838                           
  2839                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1306:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2840  04F4  01CB               	clrf	printf@c
  2841  04F5  0ACB               	incf	printf@c,f
  2842  04F6  3005               	movlw	5
  2843  04F7  064B               	xorwf	printf@c,w
  2844  04F8  1903               	btfsc	3,2
  2845  04F9  2D1F               	goto	l1721
  2846  04FA                     l1715:	
  2847                           
  2848                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2849  04FA  084B               	movf	printf@c,w
  2850  04FB  00BD               	movwf	??_printf
  2851  04FC  073D               	addwf	??_printf,w
  2852  04FD  3E12               	addlw	low (_dpowers| (0+32768))
  2853  04FE  0084               	movwf	4
  2854  04FF  3087               	movlw	high (_dpowers| (0+32768))
  2855  0500  1803               	skipnc
  2856  0501  3E01               	addlw	1
  2857  0502  00FF               	movwf	127
  2858  0503  120A  118A  2700  120A  118A  	fcall	stringtab
  2859  0508  00BE               	movwf	??_printf+1
  2860  0509  120A  118A  2700  120A  118A  	fcall	stringtab
  2861  050E  00BF               	movwf	??_printf+2
  2862  050F  083F               	movf	??_printf+2,w
  2863  0510  0244               	subwf	printf@val+1,w
  2864  0511  1D03               	skipz
  2865  0512  2D15               	goto	u1585
  2866  0513  083E               	movf	??_printf+1,w
  2867  0514  0243               	subwf	printf@val,w
  2868  0515                     u1585:	
  2869  0515  1C03               	btfss	3,0
  2870  0516  2D1F               	goto	l1721
  2871                           
  2872                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
      +                          break;
  2873  0517  3001               	movlw	1
  2874  0518  00BD               	movwf	??_printf
  2875  0519  083D               	movf	??_printf,w
  2876  051A  07CB               	addwf	printf@c,f
  2877  051B  3005               	movlw	5
  2878  051C  064B               	xorwf	printf@c,w
  2879  051D  1D03               	btfss	3,2
  2880  051E  2CFA               	goto	l1715
  2881  051F                     l1721:	
  2882                           
  2883                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1400:   if(
      +                          width > c)
  2884  051F  084A               	movf	printf@width+1,w
  2885  0520  3A80               	xorlw	128
  2886  0521  3C80               	sublw	128
  2887  0522  1D03               	skipz
  2888  0523  2D26               	goto	u1605
  2889  0524  0849               	movf	printf@width,w
  2890  0525  024B               	subwf	printf@c,w
  2891  0526                     u1605:	
  2892  0526  1803               	skipnc
  2893  0527  2D34               	goto	l1725
  2894                           
  2895                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1401:    wi
      +                          dth -= c;
  2896  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2897  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2898  052A  084B               	movf	printf@c,w
  2899  052B  00BD               	movwf	??_printf
  2900  052C  01BE               	clrf	??_printf+1
  2901  052D  083D               	movf	??_printf,w
  2902  052E  02C9               	subwf	printf@width,f
  2903  052F  083E               	movf	??_printf+1,w
  2904  0530  1C03               	skipc
  2905  0531  03CA               	decf	printf@width+1,f
  2906  0532  02CA               	subwf	printf@width+1,f
  2907  0533  2D38               	goto	l1727
  2908  0534                     l1725:	
  2909                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1402:   els
      +                          e
  2910                           
  2911                           
  2912                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1403:    wi
      +                          dth = 0;
  2913  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0535  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0536  01C9               	clrf	printf@width
  2916  0537  01CA               	clrf	printf@width+1
  2917  0538                     l1727:	
  2918                           
  2919                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1443:    if(w
      +                          idth
  2920  0538  0849               	movf	printf@width,w
  2921  0539  044A               	iorwf	printf@width+1,w
  2922  053A  1903               	btfsc	3,2
  2923  053B  2D4E               	goto	l1733
  2924  053C                     l1729:	
  2925                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1448:     d
      +                          o
  2926                           
  2927                           
  2928                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1449:      
      +                          (putch(' ') );
  2929  053C  3020               	movlw	32
  2930  053D  120A  158A  23A0  120A  118A  	fcall	_putch
  2931  0542  30FF               	movlw	255
  2932  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0545  07C9               	addwf	printf@width,f
  2935  0546  1803               	skipnc
  2936  0547  0ACA               	incf	printf@width+1,f
  2937  0548  30FF               	movlw	255
  2938  0549  07CA               	addwf	printf@width+1,f
  2939  054A  0849               	movf	printf@width,w
  2940  054B  044A               	iorwf	printf@width+1,w
  2941  054C  1D03               	btfss	3,2
  2942  054D  2D3C               	goto	l1729
  2943  054E                     l1733:	
  2944                           
  2945                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  2946  054E  084B               	movf	printf@c,w
  2947  054F  00BD               	movwf	??_printf
  2948  0550  083D               	movf	??_printf,w
  2949  0551  00C5               	movwf	printf@prec
  2950  0552                     l1739:	
  2951                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  2952                           
  2953                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2954                           
  2955                           
  2956                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2957  0552  30FF               	movlw	255
  2958  0553  1283               	bcf	3,5	;RP0=0, select bank0
  2959  0554  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0555  00BD               	movwf	??_printf
  2961  0556  083D               	movf	??_printf,w
  2962  0557  07C5               	addwf	printf@prec,f
  2963  0558  0A45               	incf	printf@prec,w
  2964  0559  1903               	btfsc	3,2
  2965  055A  2BEC               	goto	l1741
  2966                           
  2967                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2968  055B  300A               	movlw	10
  2969  055C  00AF               	movwf	___lwmod@divisor
  2970  055D  3000               	movlw	0
  2971  055E  00B0               	movwf	___lwmod@divisor+1
  2972  055F  0845               	movf	printf@prec,w
  2973  0560  00BD               	movwf	??_printf
  2974  0561  073D               	addwf	??_printf,w
  2975  0562  3E12               	addlw	low (_dpowers| (0+32768))
  2976  0563  0084               	movwf	4
  2977  0564  3087               	movlw	high (_dpowers| (0+32768))
  2978  0565  1803               	skipnc
  2979  0566  3E01               	addlw	1
  2980  0567  00FF               	movwf	127
  2981  0568  120A  118A  2700  120A  118A  	fcall	stringtab
  2982  056D  00A7               	movwf	___lwdiv@divisor
  2983  056E  120A  118A  2700  120A  118A  	fcall	stringtab
  2984  0573  00A8               	movwf	___lwdiv@divisor+1
  2985  0574  0844               	movf	printf@val+1,w
  2986  0575  00AA               	movwf	___lwdiv@dividend+1
  2987  0576  0843               	movf	printf@val,w
  2988  0577  00A9               	movwf	___lwdiv@dividend
  2989  0578  120A  118A  26BB  120A  118A  	fcall	___lwdiv
  2990  057D  1283               	bcf	3,5	;RP0=0, select bank0
  2991  057E  1303               	bcf	3,6	;RP1=0, select bank0
  2992  057F  0828               	movf	?___lwdiv+1,w
  2993  0580  00B2               	movwf	___lwmod@dividend+1
  2994  0581  0827               	movf	?___lwdiv,w
  2995  0582  00B1               	movwf	___lwmod@dividend
  2996  0583  120A  158A  23EB  120A  118A  	fcall	___lwmod
  2997  0588  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0589  1303               	bcf	3,6	;RP1=0, select bank0
  2999  058A  082F               	movf	?___lwmod,w
  3000  058B  3E30               	addlw	48
  3001  058C  00BE               	movwf	??_printf+1
  3002  058D  083E               	movf	??_printf+1,w
  3003  058E  00CB               	movwf	printf@c
  3004                           
  3005                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    (pu
      +                          tch(c) );
  3006  058F  084B               	movf	printf@c,w
  3007  0590  120A  158A  23A0  120A  118A  	fcall	_putch
  3008  0595  2D52               	goto	l1739
  3009  0596                     l328:	
  3010                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
      +                          rn 0;;	Return value of _printf is never used
  3011                           
  3012                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
      +                          ne:
  3013                           
  3014  0596  0008               	return
  3015  0597                     __end_of_printf:	
  3016                           
  3017                           	psect	text5
  3018  0BA0                     __ptext5:	
  3019 ;; *************** function _putch *****************
  3020 ;; Defined at:
  3021 ;;		line 167 in file "main.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  c               1    wreg     unsigned char 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  c               1    7[BANK0 ] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3035 ;;      Params:         0       0       0       0       0
  3036 ;;      Locals:         0       1       0       0       0
  3037 ;;      Temps:          0       0       0       0       0
  3038 ;;      Totals:         0       1       0       0       0
  3039 ;;Total ram usage:        1 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    2
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_read_line
  3046 ;;		_printf
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function _putch
  3052  0BA0                     _putch:	
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in _putch: [wreg]
  3056                           ;putch@c stored from wreg
  3057  0BA0  1283               	bcf	3,5	;RP0=0, select bank0
  3058  0BA1  1303               	bcf	3,6	;RP1=0, select bank0
  3059  0BA2  00A7               	movwf	putch@c
  3060  0BA3                     l115:	
  3061                           ;main.c: 170:     int i = 0;
  3062                           
  3063                           ;main.c: 169: void read_line(char * s, int max_len) {
  3064                           
  3065                           
  3066                           ;main.c: 169: void read_line(char * s, int max_len) {
  3067  0BA3  1683               	bsf	3,5	;RP0=1, select bank1
  3068  0BA4  1303               	bcf	3,6	;RP1=0, select bank1
  3069  0BA5  1C98               	btfss	24,1	;volatile
  3070  0BA6  2BA3               	goto	l115
  3071                           
  3072                           ;main.c: 171:     for (;;) {
  3073  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  3074  0BA8  1303               	bcf	3,6	;RP1=0, select bank0
  3075  0BA9  0827               	movf	putch@c,w
  3076  0BAA  0099               	movwf	25	;volatile
  3077  0BAB  0008               	return
  3078  0BAC                     __end_of_putch:	
  3079                           
  3080                           	psect	text6
  3081  0BEB                     __ptext6:	
  3082 ;; *************** function ___lwmod *****************
  3083 ;; Defined at:
  3084 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  divisor         2   15[BANK0 ] unsigned int 
  3087 ;;  dividend        2   17[BANK0 ] unsigned int 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  counter         1   20[BANK0 ] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  2   15[BANK0 ] unsigned int 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         0       4       0       0       0
  3100 ;;      Locals:         0       1       0       0       0
  3101 ;;      Temps:          0       1       0       0       0
  3102 ;;      Totals:         0       6       0       0       0
  3103 ;;Total ram usage:        6 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    2
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_printf
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           
  3114                           ;psect for function ___lwmod
  3115  0BEB                     ___lwmod:	
  3116                           
  3117                           ;incstack = 0
  3118                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3119  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  3120  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  3121  0BED  082F               	movf	___lwmod@divisor,w
  3122  0BEE  0430               	iorwf	___lwmod@divisor+1,w
  3123  0BEF  1903               	btfsc	3,2
  3124  0BF0  2C1A               	goto	l1583
  3125  0BF1  01B4               	clrf	___lwmod@counter
  3126  0BF2  0AB4               	incf	___lwmod@counter,f
  3127  0BF3                     l1573:	
  3128  0BF3  1BB0               	btfsc	___lwmod@divisor+1,7
  3129  0BF4  2C01               	goto	l1575
  3130  0BF5  3001               	movlw	1
  3131  0BF6                     u1465:	
  3132  0BF6  1003               	clrc
  3133  0BF7  0DAF               	rlf	___lwmod@divisor,f
  3134  0BF8  0DB0               	rlf	___lwmod@divisor+1,f
  3135  0BF9  3EFF               	addlw	-1
  3136  0BFA  1D03               	skipz
  3137  0BFB  2BF6               	goto	u1465
  3138  0BFC  3001               	movlw	1
  3139  0BFD  00B3               	movwf	??___lwmod
  3140  0BFE  0833               	movf	??___lwmod,w
  3141  0BFF  07B4               	addwf	___lwmod@counter,f
  3142  0C00  2BF3               	goto	l1573
  3143  0C01                     l1575:	
  3144  0C01  0830               	movf	___lwmod@divisor+1,w
  3145  0C02  0232               	subwf	___lwmod@dividend+1,w
  3146  0C03  1D03               	skipz
  3147  0C04  2C07               	goto	u1485
  3148  0C05  082F               	movf	___lwmod@divisor,w
  3149  0C06  0231               	subwf	___lwmod@dividend,w
  3150  0C07                     u1485:	
  3151  0C07  1C03               	skipc
  3152  0C08  2C0F               	goto	l1579
  3153  0C09  082F               	movf	___lwmod@divisor,w
  3154  0C0A  02B1               	subwf	___lwmod@dividend,f
  3155  0C0B  0830               	movf	___lwmod@divisor+1,w
  3156  0C0C  1C03               	skipc
  3157  0C0D  03B2               	decf	___lwmod@dividend+1,f
  3158  0C0E  02B2               	subwf	___lwmod@dividend+1,f
  3159  0C0F                     l1579:	
  3160  0C0F  3001               	movlw	1
  3161  0C10                     u1495:	
  3162  0C10  1003               	clrc
  3163  0C11  0CB0               	rrf	___lwmod@divisor+1,f
  3164  0C12  0CAF               	rrf	___lwmod@divisor,f
  3165  0C13  3EFF               	addlw	-1
  3166  0C14  1D03               	skipz
  3167  0C15  2C10               	goto	u1495
  3168  0C16  3001               	movlw	1
  3169  0C17  02B4               	subwf	___lwmod@counter,f
  3170  0C18  1D03               	btfss	3,2
  3171  0C19  2C01               	goto	l1575
  3172  0C1A                     l1583:	
  3173  0C1A  0832               	movf	___lwmod@dividend+1,w
  3174  0C1B  00B0               	movwf	?___lwmod+1
  3175  0C1C  0831               	movf	___lwmod@dividend,w
  3176  0C1D  00AF               	movwf	?___lwmod
  3177  0C1E  0008               	return
  3178  0C1F                     __end_of___lwmod:	
  3179                           
  3180                           	psect	text7
  3181  06BB                     __ptext7:	
  3182 ;; *************** function ___lwdiv *****************
  3183 ;; Defined at:
  3184 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  divisor         2    7[BANK0 ] unsigned int 
  3187 ;;  dividend        2    9[BANK0 ] unsigned int 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  quotient        2   12[BANK0 ] unsigned int 
  3190 ;;  counter         1   14[BANK0 ] unsigned char 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  2    7[BANK0 ] unsigned int 
  3193 ;; Registers used:
  3194 ;;		wreg, status,2, status,0
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3200 ;;      Params:         0       4       0       0       0
  3201 ;;      Locals:         0       3       0       0       0
  3202 ;;      Temps:          0       1       0       0       0
  3203 ;;      Totals:         0       8       0       0       0
  3204 ;;Total ram usage:        8 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:    2
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_printf
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           
  3215                           ;psect for function ___lwdiv
  3216  06BB                     ___lwdiv:	
  3217                           
  3218                           ;incstack = 0
  3219                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3220  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3221  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3222  06BD  01AC               	clrf	___lwdiv@quotient
  3223  06BE  01AD               	clrf	___lwdiv@quotient+1
  3224  06BF  0827               	movf	___lwdiv@divisor,w
  3225  06C0  0428               	iorwf	___lwdiv@divisor+1,w
  3226  06C1  1903               	btfsc	3,2
  3227  06C2  2EF4               	goto	l1561
  3228  06C3  01AE               	clrf	___lwdiv@counter
  3229  06C4  0AAE               	incf	___lwdiv@counter,f
  3230  06C5                     l1549:	
  3231  06C5  1BA8               	btfsc	___lwdiv@divisor+1,7
  3232  06C6  2ED3               	goto	l1551
  3233  06C7  3001               	movlw	1
  3234  06C8                     u1395:	
  3235  06C8  1003               	clrc
  3236  06C9  0DA7               	rlf	___lwdiv@divisor,f
  3237  06CA  0DA8               	rlf	___lwdiv@divisor+1,f
  3238  06CB  3EFF               	addlw	-1
  3239  06CC  1D03               	skipz
  3240  06CD  2EC8               	goto	u1395
  3241  06CE  3001               	movlw	1
  3242  06CF  00AB               	movwf	??___lwdiv
  3243  06D0  082B               	movf	??___lwdiv,w
  3244  06D1  07AE               	addwf	___lwdiv@counter,f
  3245  06D2  2EC5               	goto	l1549
  3246  06D3                     l1551:	
  3247  06D3  3001               	movlw	1
  3248  06D4                     u1415:	
  3249  06D4  1003               	clrc
  3250  06D5  0DAC               	rlf	___lwdiv@quotient,f
  3251  06D6  0DAD               	rlf	___lwdiv@quotient+1,f
  3252  06D7  3EFF               	addlw	-1
  3253  06D8  1D03               	skipz
  3254  06D9  2ED4               	goto	u1415
  3255  06DA  0828               	movf	___lwdiv@divisor+1,w
  3256  06DB  022A               	subwf	___lwdiv@dividend+1,w
  3257  06DC  1D03               	skipz
  3258  06DD  2EE0               	goto	u1425
  3259  06DE  0827               	movf	___lwdiv@divisor,w
  3260  06DF  0229               	subwf	___lwdiv@dividend,w
  3261  06E0                     u1425:	
  3262  06E0  1C03               	skipc
  3263  06E1  2EE9               	goto	l1557
  3264  06E2  0827               	movf	___lwdiv@divisor,w
  3265  06E3  02A9               	subwf	___lwdiv@dividend,f
  3266  06E4  0828               	movf	___lwdiv@divisor+1,w
  3267  06E5  1C03               	skipc
  3268  06E6  03AA               	decf	___lwdiv@dividend+1,f
  3269  06E7  02AA               	subwf	___lwdiv@dividend+1,f
  3270  06E8  142C               	bsf	___lwdiv@quotient,0
  3271  06E9                     l1557:	
  3272  06E9  3001               	movlw	1
  3273  06EA                     u1435:	
  3274  06EA  1003               	clrc
  3275  06EB  0CA8               	rrf	___lwdiv@divisor+1,f
  3276  06EC  0CA7               	rrf	___lwdiv@divisor,f
  3277  06ED  3EFF               	addlw	-1
  3278  06EE  1D03               	skipz
  3279  06EF  2EEA               	goto	u1435
  3280  06F0  3001               	movlw	1
  3281  06F1  02AE               	subwf	___lwdiv@counter,f
  3282  06F2  1D03               	btfss	3,2
  3283  06F3  2ED3               	goto	l1551
  3284  06F4                     l1561:	
  3285  06F4  082D               	movf	___lwdiv@quotient+1,w
  3286  06F5  00A8               	movwf	?___lwdiv+1
  3287  06F6  082C               	movf	___lwdiv@quotient,w
  3288  06F7  00A7               	movwf	?___lwdiv
  3289  06F8  0008               	return
  3290  06F9                     __end_of___lwdiv:	
  3291                           
  3292                           	psect	text8
  3293  0C9B                     __ptext8:	
  3294 ;; *************** function _atoi *****************
  3295 ;; Defined at:
  3296 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  s               1    wreg     PTR const unsigned char 
  3299 ;;		 -> number(10), 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  s               1   20[BANK0 ] PTR const unsigned char 
  3302 ;;		 -> number(10), 
  3303 ;;  a               2   18[BANK0 ] int 
  3304 ;;  sign            1   17[BANK0 ] unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  2   13[BANK0 ] int 
  3307 ;; Registers used:
  3308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3314 ;;      Params:         0       2       0       0       0
  3315 ;;      Locals:         0       4       0       0       0
  3316 ;;      Temps:          0       2       0       0       0
  3317 ;;      Totals:         0       8       0       0       0
  3318 ;;Total ram usage:        8 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    3
  3321 ;; This function calls:
  3322 ;;		___wmul
  3323 ;;		_isdigit
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           
  3330                           ;psect for function _atoi
  3331  0C9B                     _atoi:	
  3332                           
  3333                           ;incstack = 0
  3334                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3335                           ;atoi@s stored from wreg
  3336  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  3338  0C9D  00B4               	movwf	atoi@s
  3339  0C9E                     l1873:	
  3340  0C9E  0834               	movf	atoi@s,w
  3341  0C9F  0084               	movwf	4
  3342  0CA0  3020               	movlw	32
  3343  0CA1  1383               	bcf	3,7	;select IRP bank0
  3344  0CA2  0600               	xorwf	0,w
  3345  0CA3  1D03               	btfss	3,2
  3346  0CA4  2CAA               	goto	l1875
  3347  0CA5                     l1871:	
  3348  0CA5  3001               	movlw	1
  3349  0CA6  00AF               	movwf	??_atoi
  3350  0CA7  082F               	movf	??_atoi,w
  3351  0CA8  07B4               	addwf	atoi@s,f
  3352  0CA9  2C9E               	goto	l1873
  3353  0CAA                     l1875:	
  3354  0CAA  0834               	movf	atoi@s,w
  3355  0CAB  0084               	movwf	4
  3356  0CAC  3009               	movlw	9
  3357  0CAD  0600               	xorwf	0,w
  3358  0CAE  1903               	btfsc	3,2
  3359  0CAF  2CA5               	goto	l1871
  3360  0CB0  01B2               	clrf	atoi@a
  3361  0CB1  01B3               	clrf	atoi@a+1
  3362  0CB2  01B1               	clrf	atoi@sign
  3363  0CB3  0834               	movf	atoi@s,w
  3364  0CB4  0084               	movwf	4
  3365  0CB5  302D               	movlw	45
  3366  0CB6  0600               	xorwf	0,w
  3367  0CB7  1D03               	btfss	3,2
  3368  0CB8  2CBE               	goto	l1883
  3369  0CB9  3001               	movlw	1
  3370  0CBA  00AF               	movwf	??_atoi
  3371  0CBB  082F               	movf	??_atoi,w
  3372  0CBC  07B1               	addwf	atoi@sign,f
  3373  0CBD  2CC4               	goto	l1889
  3374  0CBE                     l1883:	
  3375  0CBE  0834               	movf	atoi@s,w
  3376  0CBF  0084               	movwf	4
  3377  0CC0  302B               	movlw	43
  3378  0CC1  0600               	xorwf	0,w
  3379  0CC2  1D03               	btfss	3,2
  3380  0CC3  2CC8               	goto	l1891
  3381  0CC4                     l1889:	
  3382  0CC4  3001               	movlw	1
  3383  0CC5  00AF               	movwf	??_atoi
  3384  0CC6  082F               	movf	??_atoi,w
  3385  0CC7  07B4               	addwf	atoi@s,f
  3386  0CC8                     l1891:	
  3387  0CC8  0834               	movf	atoi@s,w
  3388  0CC9  0084               	movwf	4
  3389  0CCA  0800               	movf	0,w
  3390  0CCB  120A  158A  23B8  120A  158A  	fcall	_isdigit
  3391  0CD0  1C03               	btfss	3,0
  3392  0CD1  2CF6               	goto	l1893
  3393  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0CD4  0833               	movf	atoi@a+1,w
  3396  0CD5  00A8               	movwf	___wmul@multiplier+1
  3397  0CD6  0832               	movf	atoi@a,w
  3398  0CD7  00A7               	movwf	___wmul@multiplier
  3399  0CD8  300A               	movlw	10
  3400  0CD9  00A9               	movwf	___wmul@multiplicand
  3401  0CDA  3000               	movlw	0
  3402  0CDB  00AA               	movwf	___wmul@multiplicand+1
  3403  0CDC  120A  158A  23C8  120A  158A  	fcall	___wmul
  3404  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0CE3  0834               	movf	atoi@s,w
  3407  0CE4  0084               	movwf	4
  3408  0CE5  1383               	bcf	3,7	;select IRP bank0
  3409  0CE6  0800               	movf	0,w
  3410  0CE7  0727               	addwf	?___wmul,w
  3411  0CE8  00AF               	movwf	??_atoi
  3412  0CE9  0828               	movf	?___wmul+1,w
  3413  0CEA  1803               	skipnc
  3414  0CEB  0A28               	incf	?___wmul+1,w
  3415  0CEC  00B0               	movwf	??_atoi+1
  3416  0CED  082F               	movf	??_atoi,w
  3417  0CEE  3ED0               	addlw	208
  3418  0CEF  00B2               	movwf	atoi@a
  3419  0CF0  0830               	movf	??_atoi+1,w
  3420  0CF1  1803               	skipnc
  3421  0CF2  3E01               	addlw	1
  3422  0CF3  3EFF               	addlw	255
  3423  0CF4  00B3               	movwf	atoi@a+1
  3424  0CF5  2CC4               	goto	l1889
  3425  0CF6                     l1893:	
  3426  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  3428  0CF8  0831               	movf	atoi@sign,w
  3429  0CF9  1903               	btfsc	3,2
  3430  0CFA  2D07               	goto	l1899
  3431  0CFB  0932               	comf	atoi@a,w
  3432  0CFC  00AF               	movwf	??_atoi
  3433  0CFD  0933               	comf	atoi@a+1,w
  3434  0CFE  00B0               	movwf	??_atoi+1
  3435  0CFF  0AAF               	incf	??_atoi,f
  3436  0D00  1903               	skipnz
  3437  0D01  0AB0               	incf	??_atoi+1,f
  3438  0D02  082F               	movf	??_atoi,w
  3439  0D03  00AD               	movwf	?_atoi
  3440  0D04  0830               	movf	??_atoi+1,w
  3441  0D05  00AE               	movwf	?_atoi+1
  3442  0D06  0008               	return
  3443  0D07                     l1899:	
  3444  0D07  0833               	movf	atoi@a+1,w
  3445  0D08  00AE               	movwf	?_atoi+1
  3446  0D09  0832               	movf	atoi@a,w
  3447  0D0A  00AD               	movwf	?_atoi
  3448  0D0B  0008               	return
  3449  0D0C                     __end_of_atoi:	
  3450                           
  3451                           	psect	text9
  3452  0BB8                     __ptext9:	
  3453 ;; *************** function _isdigit *****************
  3454 ;; Defined at:
  3455 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  c               1    wreg     unsigned char 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  c               1    8[BANK0 ] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;		None               void
  3462 ;; Registers used:
  3463 ;;		wreg, status,2, status,0
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3469 ;;      Params:         0       0       0       0       0
  3470 ;;      Locals:         0       2       0       0       0
  3471 ;;      Temps:          0       0       0       0       0
  3472 ;;      Totals:         0       2       0       0       0
  3473 ;;Total ram usage:        2 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    2
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_printf
  3480 ;;		_atoi
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           
  3485                           ;psect for function _isdigit
  3486  0BB8                     _isdigit:	
  3487                           
  3488                           ;incstack = 0
  3489                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3490                           ;isdigit@c stored from wreg
  3491  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  3493  0BBA  00A8               	movwf	isdigit@c
  3494  0BBB  01A7               	clrf	_isdigit$1090
  3495  0BBC  303A               	movlw	58
  3496  0BBD  0228               	subwf	isdigit@c,w
  3497  0BBE  1803               	skipnc
  3498  0BBF  2BC6               	goto	l1521
  3499  0BC0  3030               	movlw	48
  3500  0BC1  0228               	subwf	isdigit@c,w
  3501  0BC2  1C03               	skipc
  3502  0BC3  2BC6               	goto	l1521
  3503  0BC4  01A7               	clrf	_isdigit$1090
  3504  0BC5  0AA7               	incf	_isdigit$1090,f
  3505  0BC6                     l1521:	
  3506  0BC6  0C27               	rrf	_isdigit$1090,w
  3507  0BC7  0008               	return
  3508  0BC8                     __end_of_isdigit:	
  3509                           
  3510                           	psect	text10
  3511  0BC8                     __ptext10:	
  3512 ;; *************** function ___wmul *****************
  3513 ;; Defined at:
  3514 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  multiplier      2    7[BANK0 ] unsigned int 
  3517 ;;  multiplicand    2    9[BANK0 ] unsigned int 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  product         2   11[BANK0 ] unsigned int 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  2    7[BANK0 ] unsigned int 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2, status,0
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3529 ;;      Params:         0       4       0       0       0
  3530 ;;      Locals:         0       2       0       0       0
  3531 ;;      Temps:          0       0       0       0       0
  3532 ;;      Totals:         0       6       0       0       0
  3533 ;;Total ram usage:        6 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    2
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_printf
  3540 ;;		_atoi
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           
  3545                           ;psect for function ___wmul
  3546  0BC8                     ___wmul:	
  3547                           
  3548                           ;incstack = 0
  3549                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3550  0BC8  1283               	bcf	3,5	;RP0=0, select bank0
  3551  0BC9  1303               	bcf	3,6	;RP1=0, select bank0
  3552  0BCA  01AB               	clrf	___wmul@product
  3553  0BCB  01AC               	clrf	___wmul@product+1
  3554  0BCC                     l1527:	
  3555  0BCC  1C27               	btfss	___wmul@multiplier,0
  3556  0BCD  2BD4               	goto	l332
  3557  0BCE  0829               	movf	___wmul@multiplicand,w
  3558  0BCF  07AB               	addwf	___wmul@product,f
  3559  0BD0  1803               	skipnc
  3560  0BD1  0AAC               	incf	___wmul@product+1,f
  3561  0BD2  082A               	movf	___wmul@multiplicand+1,w
  3562  0BD3  07AC               	addwf	___wmul@product+1,f
  3563  0BD4                     l332:	
  3564  0BD4  3001               	movlw	1
  3565  0BD5                     u1355:	
  3566  0BD5  1003               	clrc
  3567  0BD6  0DA9               	rlf	___wmul@multiplicand,f
  3568  0BD7  0DAA               	rlf	___wmul@multiplicand+1,f
  3569  0BD8  3EFF               	addlw	-1
  3570  0BD9  1D03               	skipz
  3571  0BDA  2BD5               	goto	u1355
  3572  0BDB  3001               	movlw	1
  3573  0BDC                     u1365:	
  3574  0BDC  1003               	clrc
  3575  0BDD  0CA8               	rrf	___wmul@multiplier+1,f
  3576  0BDE  0CA7               	rrf	___wmul@multiplier,f
  3577  0BDF  3EFF               	addlw	-1
  3578  0BE0  1D03               	skipz
  3579  0BE1  2BDC               	goto	u1365
  3580  0BE2  0827               	movf	___wmul@multiplier,w
  3581  0BE3  0428               	iorwf	___wmul@multiplier+1,w
  3582  0BE4  1D03               	btfss	3,2
  3583  0BE5  2BCC               	goto	l1527
  3584  0BE6  082C               	movf	___wmul@product+1,w
  3585  0BE7  00A8               	movwf	?___wmul+1
  3586  0BE8  082B               	movf	___wmul@product,w
  3587  0BE9  00A7               	movwf	?___wmul
  3588  0BEA  0008               	return
  3589  0BEB                     __end_of___wmul:	
  3590                           
  3591                           	psect	text11
  3592  0C1F                     __ptext11:	
  3593 ;; *************** function _RAM_set_SPI_mode *****************
  3594 ;; Defined at:
  3595 ;;		line 211 in file "main.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  latch           2    7[BANK0 ] PTR volatile unsigned ch
  3598 ;;		 -> PORTC(1), 
  3599 ;;  pin_number      1    9[BANK0 ] unsigned char 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  dummy           1   12[BANK0 ] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3611 ;;      Params:         0       3       0       0       0
  3612 ;;      Locals:         0       1       0       0       0
  3613 ;;      Temps:          0       2       0       0       0
  3614 ;;      Totals:         0       6       0       0       0
  3615 ;;Total ram usage:        6 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    2
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           
  3626                           ;psect for function _RAM_set_SPI_mode
  3627  0C1F                     _RAM_set_SPI_mode:	
  3628                           
  3629                           ;main.c: 212:     while (SSPSTATbits.BF == 0);
  3630                           
  3631                           ;incstack = 0
  3632                           ; Regs used in _RAM_set_SPI_mode: [wreg-fsr0h+status,2+status,0]
  3633  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  3635  0C21  01AC               	clrf	RAM_set_SPI_mode@dummy
  3636                           
  3637                           ;main.c: 213:     dummy = SSPBUF;
  3638  0C22  3001               	movlw	1
  3639  0C23  00AA               	movwf	??_RAM_set_SPI_mode
  3640  0C24  0A29               	incf	RAM_set_SPI_mode@pin_number,w
  3641  0C25  2C28               	goto	u1654
  3642  0C26                     u1655:	
  3643  0C26  1003               	clrc
  3644  0C27  0DAA               	rlf	??_RAM_set_SPI_mode,f
  3645  0C28                     u1654:	
  3646  0C28  3EFF               	addlw	-1
  3647  0C29  1D03               	skipz
  3648  0C2A  2C26               	goto	u1655
  3649  0C2B  082A               	movf	??_RAM_set_SPI_mode,w
  3650  0C2C  3AFF               	xorlw	255
  3651  0C2D  00AB               	movwf	??_RAM_set_SPI_mode+1
  3652  0C2E  0827               	movf	RAM_set_SPI_mode@latch,w
  3653  0C2F  0084               	movwf	4
  3654  0C30  1783               	bsf	3,7
  3655  0C31  1C28               	btfss	RAM_set_SPI_mode@latch+1,0
  3656  0C32  1383               	bcf	3,7
  3657  0C33  082B               	movf	??_RAM_set_SPI_mode+1,w
  3658  0C34  0580               	andwf	0,f
  3659                           
  3660                           ;main.c: 215:     SSPCONbits.WCOL = 0;
  3661  0C35  1394               	bcf	20,7	;volatile
  3662                           
  3663                           ;main.c: 216:     SSPBUF = address >> 16;
  3664  0C36  30FF               	movlw	255
  3665  0C37  0093               	movwf	19	;volatile
  3666  0C38                     l142:	
  3667                           ;main.c: 217:     while (SSPSTATbits.BF == 0);
  3668                           
  3669  0C38  1683               	bsf	3,5	;RP0=1, select bank1
  3670  0C39  1303               	bcf	3,6	;RP1=0, select bank1
  3671  0C3A  1C14               	btfss	20,0	;volatile
  3672  0C3B  2C38               	goto	l142
  3673                           
  3674                           ;main.c: 218:     dummy = SSPBUF;
  3675  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  3676  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  3677  0C3E  0813               	movf	19,w	;volatile
  3678  0C3F  00AA               	movwf	??_RAM_set_SPI_mode
  3679  0C40  082A               	movf	??_RAM_set_SPI_mode,w
  3680  0C41  00AC               	movwf	RAM_set_SPI_mode@dummy
  3681                           
  3682                           ;main.c: 219:     SSPCONbits.WCOL = 0;
  3683  0C42  3001               	movlw	1
  3684  0C43  00AA               	movwf	??_RAM_set_SPI_mode
  3685  0C44  0A29               	incf	RAM_set_SPI_mode@pin_number,w
  3686  0C45  2C48               	goto	u1674
  3687  0C46                     u1675:	
  3688  0C46  1003               	clrc
  3689  0C47  0DAA               	rlf	??_RAM_set_SPI_mode,f
  3690  0C48                     u1674:	
  3691  0C48  3EFF               	addlw	-1
  3692  0C49  1D03               	skipz
  3693  0C4A  2C46               	goto	u1675
  3694  0C4B  082A               	movf	??_RAM_set_SPI_mode,w
  3695  0C4C  00AB               	movwf	??_RAM_set_SPI_mode+1
  3696  0C4D  0827               	movf	RAM_set_SPI_mode@latch,w
  3697  0C4E  0084               	movwf	4
  3698  0C4F  1783               	bsf	3,7
  3699  0C50  1C28               	btfss	RAM_set_SPI_mode@latch+1,0
  3700  0C51  1383               	bcf	3,7
  3701  0C52  082B               	movf	??_RAM_set_SPI_mode+1,w
  3702  0C53  0480               	iorwf	0,f
  3703  0C54  0008               	return
  3704  0C55                     __end_of_RAM_set_SPI_mode:	
  3705                           
  3706                           	psect	text12
  3707  0F64                     __ptext12:	
  3708 ;; *************** function _RAM_sequential_SPI_write *****************
  3709 ;; Defined at:
  3710 ;;		line 222 in file "main.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  latch           2    7[BANK0 ] PTR volatile unsigned ch
  3713 ;;		 -> PORTC(1), 
  3714 ;;  pin_number      1    9[BANK0 ] unsigned char 
  3715 ;;  address         3   10[BANK0 ] unsigned um
  3716 ;;  data_out        2   13[BANK0 ] PTR unsigned char 
  3717 ;;		 -> TMR1(2), tvalue(2), bvalue(1), 
  3718 ;;  data_out_siz    1   15[BANK0 ] unsigned char 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  i               1   20[BANK0 ] unsigned char 
  3721 ;;  dummy           1   19[BANK0 ] unsigned char 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3731 ;;      Params:         0       9       0       0       0
  3732 ;;      Locals:         0       2       0       0       0
  3733 ;;      Temps:          0       3       0       0       0
  3734 ;;      Totals:         0      14       0       0       0
  3735 ;;Total ram usage:       14 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    2
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_main
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           
  3746                           ;psect for function _RAM_sequential_SPI_write
  3747  0F64                     _RAM_sequential_SPI_write:	
  3748                           
  3749                           ;main.c: 223:     SSPCONbits.WCOL = 0;
  3750                           
  3751                           ;incstack = 0
  3752                           ; Regs used in _RAM_sequential_SPI_write: [wreg-fsr0h+status,2+status,0]
  3753  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  3755  0F66  01B3               	clrf	RAM_sequential_SPI_write@dummy
  3756                           
  3757                           ;main.c: 224:     SSPBUF = address;
  3758  0F67  3001               	movlw	1
  3759  0F68  00B0               	movwf	??_RAM_sequential_SPI_write
  3760  0F69  0A29               	incf	RAM_sequential_SPI_write@pin_number,w
  3761  0F6A  2F6D               	goto	u1684
  3762  0F6B                     u1685:	
  3763  0F6B  1003               	clrc
  3764  0F6C  0DB0               	rlf	??_RAM_sequential_SPI_write,f
  3765  0F6D                     u1684:	
  3766  0F6D  3EFF               	addlw	-1
  3767  0F6E  1D03               	skipz
  3768  0F6F  2F6B               	goto	u1685
  3769  0F70  0830               	movf	??_RAM_sequential_SPI_write,w
  3770  0F71  3AFF               	xorlw	255
  3771  0F72  00B1               	movwf	??_RAM_sequential_SPI_write+1
  3772  0F73  0827               	movf	RAM_sequential_SPI_write@latch,w
  3773  0F74  0084               	movwf	4
  3774  0F75  1783               	bsf	3,7
  3775  0F76  1C28               	btfss	RAM_sequential_SPI_write@latch+1,0
  3776  0F77  1383               	bcf	3,7
  3777  0F78  0831               	movf	??_RAM_sequential_SPI_write+1,w
  3778  0F79  0580               	andwf	0,f
  3779                           
  3780                           ;main.c: 226:     dummy = SSPBUF;
  3781  0F7A  1394               	bcf	20,7	;volatile
  3782                           
  3783                           ;main.c: 227: 
  3784  0F7B  3002               	movlw	2
  3785  0F7C  0093               	movwf	19	;volatile
  3786  0F7D                     l148:	
  3787                           ;main.c: 228:     for (i = 0; i < data_out_size; i++) {
  3788                           
  3789  0F7D  1683               	bsf	3,5	;RP0=1, select bank1
  3790  0F7E  1303               	bcf	3,6	;RP1=0, select bank1
  3791  0F7F  1C14               	btfss	20,0	;volatile
  3792  0F80  2F7D               	goto	l148
  3793                           
  3794                           ;main.c: 229: 
  3795  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  3797  0F83  0813               	movf	19,w	;volatile
  3798  0F84  00B0               	movwf	??_RAM_sequential_SPI_write
  3799  0F85  0830               	movf	??_RAM_sequential_SPI_write,w
  3800  0F86  00B3               	movwf	RAM_sequential_SPI_write@dummy
  3801                           
  3802                           ;main.c: 231:         SSPBUF = data_out[i];
  3803  0F87  1394               	bcf	20,7	;volatile
  3804                           
  3805                           ;main.c: 232:         while (SSPSTATbits.BF == 0) {}
  3806  0F88  082A               	movf	RAM_sequential_SPI_write@address,w
  3807  0F89  00B0               	movwf	??_RAM_sequential_SPI_write
  3808  0F8A  082B               	movf	RAM_sequential_SPI_write@address+1,w
  3809  0F8B  00B1               	movwf	??_RAM_sequential_SPI_write+1
  3810  0F8C  082C               	movf	RAM_sequential_SPI_write@address+2,w
  3811  0F8D  00B2               	movwf	??_RAM_sequential_SPI_write+2
  3812  0F8E  3010               	movlw	16
  3813  0F8F                     u1705:	
  3814  0F8F  1003               	clrc
  3815  0F90  0CB2               	rrf	??_RAM_sequential_SPI_write+2,f
  3816  0F91  0CB1               	rrf	??_RAM_sequential_SPI_write+1,f
  3817  0F92  0CB0               	rrf	??_RAM_sequential_SPI_write,f
  3818  0F93  3EFF               	addlw	-1
  3819  0F94  1D03               	skipz
  3820  0F95  2F8F               	goto	u1705
  3821  0F96  0830               	movf	??_RAM_sequential_SPI_write,w
  3822  0F97  0093               	movwf	19	;volatile
  3823  0F98                     l151:	
  3824                           ;main.c: 233:         dummy = SSPBUF;
  3825                           
  3826  0F98  1683               	bsf	3,5	;RP0=1, select bank1
  3827  0F99  1303               	bcf	3,6	;RP1=0, select bank1
  3828  0F9A  1C14               	btfss	20,0	;volatile
  3829  0F9B  2F98               	goto	l151
  3830                           
  3831                           ;main.c: 234:     }
  3832  0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  3833  0F9D  1303               	bcf	3,6	;RP1=0, select bank0
  3834  0F9E  0813               	movf	19,w	;volatile
  3835  0F9F  00B0               	movwf	??_RAM_sequential_SPI_write
  3836  0FA0  0830               	movf	??_RAM_sequential_SPI_write,w
  3837  0FA1  00B3               	movwf	RAM_sequential_SPI_write@dummy
  3838                           
  3839                           ;main.c: 235:     *latch |= (1 << pin_number);
  3840  0FA2  1394               	bcf	20,7	;volatile
  3841                           
  3842                           ;main.c: 236: }
  3843  0FA3  082A               	movf	RAM_sequential_SPI_write@address,w
  3844  0FA4  00B0               	movwf	??_RAM_sequential_SPI_write
  3845  0FA5  082B               	movf	RAM_sequential_SPI_write@address+1,w
  3846  0FA6  00B1               	movwf	??_RAM_sequential_SPI_write+1
  3847  0FA7  082C               	movf	RAM_sequential_SPI_write@address+2,w
  3848  0FA8  00B2               	movwf	??_RAM_sequential_SPI_write+2
  3849  0FA9  3008               	movlw	8
  3850  0FAA                     u1725:	
  3851  0FAA  1003               	clrc
  3852  0FAB  0CB2               	rrf	??_RAM_sequential_SPI_write+2,f
  3853  0FAC  0CB1               	rrf	??_RAM_sequential_SPI_write+1,f
  3854  0FAD  0CB0               	rrf	??_RAM_sequential_SPI_write,f
  3855  0FAE  3EFF               	addlw	-1
  3856  0FAF  1D03               	skipz
  3857  0FB0  2FAA               	goto	u1725
  3858  0FB1  0830               	movf	??_RAM_sequential_SPI_write,w
  3859  0FB2  0093               	movwf	19	;volatile
  3860  0FB3                     l154:	
  3861                           ;main.c: 237: 
  3862                           
  3863  0FB3  1683               	bsf	3,5	;RP0=1, select bank1
  3864  0FB4  1303               	bcf	3,6	;RP1=0, select bank1
  3865  0FB5  1C14               	btfss	20,0	;volatile
  3866  0FB6  2FB3               	goto	l154
  3867                           
  3868                           ;main.c: 238: void RAM_sequential_SPI_read(volatile unsigned char* latch, uint8_t pin_nu
      +                          mber, uint24_t address, uint8_t *data_in, uint8_t data_in_size) {
  3869  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  3870  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  3871  0FB9  0813               	movf	19,w	;volatile
  3872  0FBA  00B0               	movwf	??_RAM_sequential_SPI_write
  3873  0FBB  0830               	movf	??_RAM_sequential_SPI_write,w
  3874  0FBC  00B3               	movwf	RAM_sequential_SPI_write@dummy
  3875                           
  3876                           ;main.c: 239:     uint8_t i, dummy = 0;
  3877  0FBD  1394               	bcf	20,7	;volatile
  3878                           
  3879                           ;main.c: 240:     *latch &= ~(1 << pin_number);
  3880  0FBE  082A               	movf	RAM_sequential_SPI_write@address,w
  3881  0FBF  0093               	movwf	19	;volatile
  3882  0FC0                     l157:	
  3883                           ;main.c: 241: 
  3884                           
  3885  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3886  0FC1  1303               	bcf	3,6	;RP1=0, select bank1
  3887  0FC2  1C14               	btfss	20,0	;volatile
  3888  0FC3  2FC0               	goto	l157
  3889                           
  3890                           ;main.c: 242:     SSPCONbits.WCOL = 0;
  3891  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3892  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3893  0FC6  0813               	movf	19,w	;volatile
  3894  0FC7  00B0               	movwf	??_RAM_sequential_SPI_write
  3895  0FC8  0830               	movf	??_RAM_sequential_SPI_write,w
  3896  0FC9  00B3               	movwf	RAM_sequential_SPI_write@dummy
  3897                           
  3898                           ;main.c: 244:     while (SSPSTATbits.BF == 0);
  3899  0FCA  01B4               	clrf	RAM_sequential_SPI_write@i
  3900  0FCB                     l1793:	
  3901  0FCB  082F               	movf	RAM_sequential_SPI_write@data_out_size,w
  3902  0FCC  0234               	subwf	RAM_sequential_SPI_write@i,w
  3903  0FCD  1803               	btfsc	3,0
  3904  0FCE  2FED               	goto	l1795
  3905                           
  3906                           ;main.c: 246: 
  3907  0FCF  1394               	bcf	20,7	;volatile
  3908                           
  3909                           ;main.c: 247:     SSPCONbits.WCOL = 0;
  3910  0FD0  0834               	movf	RAM_sequential_SPI_write@i,w
  3911  0FD1  072D               	addwf	RAM_sequential_SPI_write@data_out,w
  3912  0FD2  00B0               	movwf	??_RAM_sequential_SPI_write
  3913  0FD3  082E               	movf	RAM_sequential_SPI_write@data_out+1,w
  3914  0FD4  1803               	skipnc
  3915  0FD5  3E01               	addlw	1
  3916  0FD6  00B1               	movwf	??_RAM_sequential_SPI_write+1
  3917  0FD7  0830               	movf	??_RAM_sequential_SPI_write,w
  3918  0FD8  0084               	movwf	4
  3919  0FD9  1783               	bsf	3,7
  3920  0FDA  1C31               	btfss	??_RAM_sequential_SPI_write+1,0
  3921  0FDB  1383               	bcf	3,7
  3922  0FDC  0800               	movf	0,w
  3923  0FDD  0093               	movwf	19	;volatile
  3924  0FDE                     l162:	
  3925                           ;main.c: 248:     SSPBUF = address >> 16;
  3926                           
  3927  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  3928  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  3929  0FE0  1C14               	btfss	20,0	;volatile
  3930  0FE1  2FDE               	goto	l162
  3931                           
  3932                           ;main.c: 249:     while (SSPSTATbits.BF == 0);
  3933  0FE2  1283               	bcf	3,5	;RP0=0, select bank0
  3934  0FE3  1303               	bcf	3,6	;RP1=0, select bank0
  3935  0FE4  0813               	movf	19,w	;volatile
  3936  0FE5  00B0               	movwf	??_RAM_sequential_SPI_write
  3937  0FE6  0830               	movf	??_RAM_sequential_SPI_write,w
  3938  0FE7  00B3               	movwf	RAM_sequential_SPI_write@dummy
  3939                           
  3940                           ;main.c: 250:     dummy = SSPBUF;
  3941  0FE8  3001               	movlw	1
  3942  0FE9  00B0               	movwf	??_RAM_sequential_SPI_write
  3943  0FEA  0830               	movf	??_RAM_sequential_SPI_write,w
  3944  0FEB  07B4               	addwf	RAM_sequential_SPI_write@i,f
  3945  0FEC  2FCB               	goto	l1793
  3946  0FED                     l1795:	
  3947                           
  3948                           ;main.c: 251:     SSPCONbits.WCOL = 0;
  3949  0FED  3001               	movlw	1
  3950  0FEE  00B0               	movwf	??_RAM_sequential_SPI_write
  3951  0FEF  0A29               	incf	RAM_sequential_SPI_write@pin_number,w
  3952  0FF0  2FF3               	goto	u1774
  3953  0FF1                     u1775:	
  3954  0FF1  1003               	clrc
  3955  0FF2  0DB0               	rlf	??_RAM_sequential_SPI_write,f
  3956  0FF3                     u1774:	
  3957  0FF3  3EFF               	addlw	-1
  3958  0FF4  1D03               	skipz
  3959  0FF5  2FF1               	goto	u1775
  3960  0FF6  0830               	movf	??_RAM_sequential_SPI_write,w
  3961  0FF7  00B1               	movwf	??_RAM_sequential_SPI_write+1
  3962  0FF8  0827               	movf	RAM_sequential_SPI_write@latch,w
  3963  0FF9  0084               	movwf	4
  3964  0FFA  1783               	bsf	3,7
  3965  0FFB  1C28               	btfss	RAM_sequential_SPI_write@latch+1,0
  3966  0FFC  1383               	bcf	3,7
  3967  0FFD  0831               	movf	??_RAM_sequential_SPI_write+1,w
  3968  0FFE  0480               	iorwf	0,f
  3969  0FFF  0008               	return
  3970  1000                     __end_of_RAM_sequential_SPI_write:	
  3971                           
  3972                           	psect	text13
  3973  0EC8                     __ptext13:	
  3974 ;; *************** function _RAM_sequential_SPI_read *****************
  3975 ;; Defined at:
  3976 ;;		line 254 in file "main.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  latch           2    7[BANK0 ] PTR volatile unsigned ch
  3979 ;;		 -> PORTC(1), 
  3980 ;;  pin_number      1    9[BANK0 ] unsigned char 
  3981 ;;  address         3   10[BANK0 ] unsigned um
  3982 ;;  data_in         2   13[BANK0 ] PTR unsigned char 
  3983 ;;		 -> TMR1(2), tvalue(2), bvalue(1), 
  3984 ;;  data_in_size    1   15[BANK0 ] unsigned char 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  i               1   20[BANK0 ] unsigned char 
  3987 ;;  dummy           1   19[BANK0 ] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3997 ;;      Params:         0       9       0       0       0
  3998 ;;      Locals:         0       2       0       0       0
  3999 ;;      Temps:          0       3       0       0       0
  4000 ;;      Totals:         0      14       0       0       0
  4001 ;;Total ram usage:       14 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    2
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           
  4012                           ;psect for function _RAM_sequential_SPI_read
  4013  0EC8                     _RAM_sequential_SPI_read:	
  4014                           
  4015                           ;main.c: 255:     SSPCONbits.WCOL = 0;
  4016                           
  4017                           ;incstack = 0
  4018                           ; Regs used in _RAM_sequential_SPI_read: [wreg-fsr0h+status,2+status,0]
  4019  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  4020  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  4021  0ECA  01B3               	clrf	RAM_sequential_SPI_read@dummy
  4022                           
  4023                           ;main.c: 256:     SSPBUF = address;
  4024  0ECB  3001               	movlw	1
  4025  0ECC  00B0               	movwf	??_RAM_sequential_SPI_read
  4026  0ECD  0A29               	incf	RAM_sequential_SPI_read@pin_number,w
  4027  0ECE  2ED1               	goto	u1784
  4028  0ECF                     u1785:	
  4029  0ECF  1003               	clrc
  4030  0ED0  0DB0               	rlf	??_RAM_sequential_SPI_read,f
  4031  0ED1                     u1784:	
  4032  0ED1  3EFF               	addlw	-1
  4033  0ED2  1D03               	skipz
  4034  0ED3  2ECF               	goto	u1785
  4035  0ED4  0830               	movf	??_RAM_sequential_SPI_read,w
  4036  0ED5  3AFF               	xorlw	255
  4037  0ED6  00B1               	movwf	??_RAM_sequential_SPI_read+1
  4038  0ED7  0827               	movf	RAM_sequential_SPI_read@latch,w
  4039  0ED8  0084               	movwf	4
  4040  0ED9  1783               	bsf	3,7
  4041  0EDA  1C28               	btfss	RAM_sequential_SPI_read@latch+1,0
  4042  0EDB  1383               	bcf	3,7
  4043  0EDC  0831               	movf	??_RAM_sequential_SPI_read+1,w
  4044  0EDD  0580               	andwf	0,f
  4045                           
  4046                           ;main.c: 258:     dummy = SSPBUF;
  4047  0EDE  1394               	bcf	20,7	;volatile
  4048                           
  4049                           ;main.c: 259: 
  4050  0EDF  3003               	movlw	3
  4051  0EE0  0093               	movwf	19	;volatile
  4052  0EE1                     l169:	
  4053                           ;main.c: 260:     for (i = 0; i < data_in_size; i++) {
  4054                           
  4055  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  4056  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  4057  0EE3  1C14               	btfss	20,0	;volatile
  4058  0EE4  2EE1               	goto	l169
  4059                           
  4060                           ;main.c: 261:         SSPCONbits.WCOL = 0;
  4061  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  4062  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  4063  0EE7  0813               	movf	19,w	;volatile
  4064  0EE8  00B0               	movwf	??_RAM_sequential_SPI_read
  4065  0EE9  0830               	movf	??_RAM_sequential_SPI_read,w
  4066  0EEA  00B3               	movwf	RAM_sequential_SPI_read@dummy
  4067                           
  4068                           ;main.c: 263:         while (SSPSTATbits.BF == 0) {}
  4069  0EEB  1394               	bcf	20,7	;volatile
  4070                           
  4071                           ;main.c: 264:         data_in[i] = SSPBUF;
  4072  0EEC  082A               	movf	RAM_sequential_SPI_read@address,w
  4073  0EED  00B0               	movwf	??_RAM_sequential_SPI_read
  4074  0EEE  082B               	movf	RAM_sequential_SPI_read@address+1,w
  4075  0EEF  00B1               	movwf	??_RAM_sequential_SPI_read+1
  4076  0EF0  082C               	movf	RAM_sequential_SPI_read@address+2,w
  4077  0EF1  00B2               	movwf	??_RAM_sequential_SPI_read+2
  4078  0EF2  3010               	movlw	16
  4079  0EF3                     u1805:	
  4080  0EF3  1003               	clrc
  4081  0EF4  0CB2               	rrf	??_RAM_sequential_SPI_read+2,f
  4082  0EF5  0CB1               	rrf	??_RAM_sequential_SPI_read+1,f
  4083  0EF6  0CB0               	rrf	??_RAM_sequential_SPI_read,f
  4084  0EF7  3EFF               	addlw	-1
  4085  0EF8  1D03               	skipz
  4086  0EF9  2EF3               	goto	u1805
  4087  0EFA  0830               	movf	??_RAM_sequential_SPI_read,w
  4088  0EFB  0093               	movwf	19	;volatile
  4089  0EFC                     l172:	
  4090                           ;main.c: 265:     }
  4091                           
  4092  0EFC  1683               	bsf	3,5	;RP0=1, select bank1
  4093  0EFD  1303               	bcf	3,6	;RP1=0, select bank1
  4094  0EFE  1C14               	btfss	20,0	;volatile
  4095  0EFF  2EFC               	goto	l172
  4096                           
  4097                           ;main.c: 266:     *latch |= (1 << pin_number);
  4098  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  4099  0F01  1303               	bcf	3,6	;RP1=0, select bank0
  4100  0F02  0813               	movf	19,w	;volatile
  4101  0F03  00B0               	movwf	??_RAM_sequential_SPI_read
  4102  0F04  0830               	movf	??_RAM_sequential_SPI_read,w
  4103  0F05  00B3               	movwf	RAM_sequential_SPI_read@dummy
  4104                           
  4105                           ;main.c: 267: }
  4106  0F06  1394               	bcf	20,7	;volatile
  4107                           
  4108                           ;main.c: 268: 
  4109  0F07  082A               	movf	RAM_sequential_SPI_read@address,w
  4110  0F08  00B0               	movwf	??_RAM_sequential_SPI_read
  4111  0F09  082B               	movf	RAM_sequential_SPI_read@address+1,w
  4112  0F0A  00B1               	movwf	??_RAM_sequential_SPI_read+1
  4113  0F0B  082C               	movf	RAM_sequential_SPI_read@address+2,w
  4114  0F0C  00B2               	movwf	??_RAM_sequential_SPI_read+2
  4115  0F0D  3008               	movlw	8
  4116  0F0E                     u1825:	
  4117  0F0E  1003               	clrc
  4118  0F0F  0CB2               	rrf	??_RAM_sequential_SPI_read+2,f
  4119  0F10  0CB1               	rrf	??_RAM_sequential_SPI_read+1,f
  4120  0F11  0CB0               	rrf	??_RAM_sequential_SPI_read,f
  4121  0F12  3EFF               	addlw	-1
  4122  0F13  1D03               	skipz
  4123  0F14  2F0E               	goto	u1825
  4124  0F15  0830               	movf	??_RAM_sequential_SPI_read,w
  4125  0F16  0093               	movwf	19	;volatile
  4126  0F17                     l175:	
  4127                           ;main.c: 269: void __attribute__((picinterrupt(""))) ISR() {
  4128                           
  4129  0F17  1683               	bsf	3,5	;RP0=1, select bank1
  4130  0F18  1303               	bcf	3,6	;RP1=0, select bank1
  4131  0F19  1C14               	btfss	20,0	;volatile
  4132  0F1A  2F17               	goto	l175
  4133                           
  4134                           ;main.c: 270:     if (c == 'e') {
  4135  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  4136  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  4137  0F1D  0813               	movf	19,w	;volatile
  4138  0F1E  00B0               	movwf	??_RAM_sequential_SPI_read
  4139  0F1F  0830               	movf	??_RAM_sequential_SPI_read,w
  4140  0F20  00B3               	movwf	RAM_sequential_SPI_read@dummy
  4141                           
  4142                           ;main.c: 271:         tvalue = TMR1;
  4143  0F21  1394               	bcf	20,7	;volatile
  4144                           
  4145                           ;main.c: 272:         RAM_sequential_SPI_write(&PORTC, 2, i, (uint8_t*) & TMR1, 2);
  4146  0F22  082A               	movf	RAM_sequential_SPI_read@address,w
  4147  0F23  0093               	movwf	19	;volatile
  4148  0F24                     l178:	
  4149                           ;main.c: 273:         TMR1 = 0;
  4150                           
  4151  0F24  1683               	bsf	3,5	;RP0=1, select bank1
  4152  0F25  1303               	bcf	3,6	;RP1=0, select bank1
  4153  0F26  1C14               	btfss	20,0	;volatile
  4154  0F27  2F24               	goto	l178
  4155                           
  4156                           ;main.c: 274:         i += 3;
  4157  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  4158  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  4159  0F2A  0813               	movf	19,w	;volatile
  4160  0F2B  00B0               	movwf	??_RAM_sequential_SPI_read
  4161  0F2C  0830               	movf	??_RAM_sequential_SPI_read,w
  4162  0F2D  00B3               	movwf	RAM_sequential_SPI_read@dummy
  4163                           
  4164                           ;main.c: 276:             bvalue = ~PORTBbits.RB4;
  4165  0F2E  01B4               	clrf	RAM_sequential_SPI_read@i
  4166  0F2F                     l1831:	
  4167  0F2F  082F               	movf	RAM_sequential_SPI_read@data_in_size,w
  4168  0F30  0234               	subwf	RAM_sequential_SPI_read@i,w
  4169  0F31  1803               	btfsc	3,0
  4170  0F32  2F51               	goto	l1833
  4171                           
  4172                           ;main.c: 277:             RAM_sequential_SPI_write(&PORTC, 2, i + 2, &bvalue, 1);
  4173  0F33  1394               	bcf	20,7	;volatile
  4174                           
  4175                           ;main.c: 278:         } else {
  4176  0F34  0833               	movf	RAM_sequential_SPI_read@dummy,w
  4177  0F35  0093               	movwf	19	;volatile
  4178  0F36                     l183:	
  4179                           ;main.c: 279:             T1CONbits.TMR1ON = 0;
  4180                           
  4181  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  4182  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  4183  0F38  1C14               	btfss	20,0	;volatile
  4184  0F39  2F36               	goto	l183
  4185                           
  4186                           ;main.c: 280:             INTCONbits.RBIE = 0;
  4187  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  4189  0F3C  0813               	movf	19,w	;volatile
  4190  0F3D  00B0               	movwf	??_RAM_sequential_SPI_read
  4191  0F3E  0834               	movf	RAM_sequential_SPI_read@i,w
  4192  0F3F  072D               	addwf	RAM_sequential_SPI_read@data_in,w
  4193  0F40  00B1               	movwf	??_RAM_sequential_SPI_read+1
  4194  0F41  082E               	movf	RAM_sequential_SPI_read@data_in+1,w
  4195  0F42  1803               	skipnc
  4196  0F43  3E01               	addlw	1
  4197  0F44  00B2               	movwf	??_RAM_sequential_SPI_read+2
  4198  0F45  0831               	movf	??_RAM_sequential_SPI_read+1,w
  4199  0F46  0084               	movwf	4
  4200  0F47  1783               	bsf	3,7
  4201  0F48  1C32               	btfss	??_RAM_sequential_SPI_read+2,0
  4202  0F49  1383               	bcf	3,7
  4203  0F4A  0830               	movf	??_RAM_sequential_SPI_read,w
  4204  0F4B  0080               	movwf	0
  4205                           
  4206                           ;main.c: 281:         }
  4207  0F4C  3001               	movlw	1
  4208  0F4D  00B0               	movwf	??_RAM_sequential_SPI_read
  4209  0F4E  0830               	movf	??_RAM_sequential_SPI_read,w
  4210  0F4F  07B4               	addwf	RAM_sequential_SPI_read@i,f
  4211  0F50  2F2F               	goto	l1831
  4212  0F51                     l1833:	
  4213                           
  4214                           ;main.c: 282:         PORTAbits.RA1 = ~PORTBbits.RB4;
  4215  0F51  3001               	movlw	1
  4216  0F52  00B0               	movwf	??_RAM_sequential_SPI_read
  4217  0F53  0A29               	incf	RAM_sequential_SPI_read@pin_number,w
  4218  0F54  2F57               	goto	u1874
  4219  0F55                     u1875:	
  4220  0F55  1003               	clrc
  4221  0F56  0DB0               	rlf	??_RAM_sequential_SPI_read,f
  4222  0F57                     u1874:	
  4223  0F57  3EFF               	addlw	-1
  4224  0F58  1D03               	skipz
  4225  0F59  2F55               	goto	u1875
  4226  0F5A  0830               	movf	??_RAM_sequential_SPI_read,w
  4227  0F5B  00B1               	movwf	??_RAM_sequential_SPI_read+1
  4228  0F5C  0827               	movf	RAM_sequential_SPI_read@latch,w
  4229  0F5D  0084               	movwf	4
  4230  0F5E  1783               	bsf	3,7
  4231  0F5F  1C28               	btfss	RAM_sequential_SPI_read@latch+1,0
  4232  0F60  1383               	bcf	3,7
  4233  0F61  0831               	movf	??_RAM_sequential_SPI_read+1,w
  4234  0F62  0480               	iorwf	0,f
  4235  0F63  0008               	return
  4236  0F64                     __end_of_RAM_sequential_SPI_read:	
  4237                           
  4238                           	psect	text14
  4239  0597                     __ptext14:	
  4240 ;; *************** function _ISR *****************
  4241 ;; Defined at:
  4242 ;;		line 285 in file "main.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4256 ;;      Params:         0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0
  4258 ;;      Temps:          0       7       0       0       0
  4259 ;;      Totals:         0       7       0       0       0
  4260 ;;Total ram usage:        7 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    1
  4263 ;; This function calls:
  4264 ;;		i1_RAM_sequential_SPI_read
  4265 ;;		i1_RAM_sequential_SPI_write
  4266 ;; This function is called by:
  4267 ;;		Interrupt level 1
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _ISR
  4273  0597                     _ISR:	
  4274                           
  4275                           ;main.c: 286:     } else {
  4276  0597  3065               	movlw	101
  4277  0598  0664               	xorwf	_c,w
  4278  0599  1D03               	btfss	3,2
  4279  059A  2E27               	goto	i1l2129
  4280                           
  4281                           ;main.c: 287:         if (e < cycles) {
  4282  059B  080F               	movf	15,w	;volatile
  4283  059C  00E6               	movwf	_tvalue+1
  4284  059D  080E               	movf	14,w	;volatile
  4285  059E  00E5               	movwf	_tvalue
  4286                           
  4287                           ;main.c: 288:             RAM_sequential_SPI_read(&PORTC, 2, i, (uint8_t*) & TMR1, 2);
  4288  059F  3007               	movlw	7
  4289  05A0  00F0               	movwf	i1RAM_sequential_SPI_write@latch
  4290  05A1  3000               	movlw	0
  4291  05A2  00F1               	movwf	i1RAM_sequential_SPI_write@latch+1
  4292  05A3  3002               	movlw	2
  4293  05A4  00A0               	movwf	??_ISR
  4294  05A5  0820               	movf	??_ISR,w
  4295  05A6  00F2               	movwf	i1RAM_sequential_SPI_write@pin_number
  4296  05A7  0861               	movf	_i,w
  4297  05A8  00F3               	movwf	i1RAM_sequential_SPI_write@address
  4298  05A9  0862               	movf	_i+1,w
  4299  05AA  00F4               	movwf	i1RAM_sequential_SPI_write@address+1
  4300  05AB  0863               	movf	_i+2,w
  4301  05AC  00F5               	movwf	i1RAM_sequential_SPI_write@address+2
  4302  05AD  300E               	movlw	14
  4303  05AE  00F6               	movwf	i1RAM_sequential_SPI_write@data_out
  4304  05AF  3000               	movlw	0
  4305  05B0  00F7               	movwf	i1RAM_sequential_SPI_write@data_out+1
  4306  05B1  3002               	movlw	2
  4307  05B2  00A1               	movwf	??_ISR+1
  4308  05B3  0821               	movf	??_ISR+1,w
  4309  05B4  00F8               	movwf	i1RAM_sequential_SPI_write@data_out_size
  4310  05B5  120A  158A  262C  120A  118A  	fcall	i1_RAM_sequential_SPI_write
  4311                           
  4312                           ;main.c: 289:             RAM_sequential_SPI_read(&PORTC, 2, i + 2, &bvalue, 1);
  4313  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  4314  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  4315  05BC  018E               	clrf	14	;volatile
  4316  05BD  018F               	clrf	15	;volatile
  4317                           
  4318                           ;main.c: 290:             PORTAbits.RA2 = bvalue;
  4319  05BE  3003               	movlw	3
  4320  05BF  07E1               	addwf	_i,f
  4321  05C0  3000               	movlw	0
  4322  05C1  1803               	skipnc
  4323  05C2  3001               	movlw	1
  4324  05C3  07E2               	addwf	_i+1,f
  4325  05C4  3000               	movlw	0
  4326  05C5  1803               	skipnc
  4327  05C6  3001               	movlw	1
  4328  05C7  07E3               	addwf	_i+2,f
  4329                           
  4330                           ;main.c: 291:             PORTAbits.RA1 = bvalue;
  4331  05C8  3000               	movlw	0
  4332  05C9  0263               	subwf	_i+2,w
  4333  05CA  1D03               	skipz
  4334  05CB  2DD2               	goto	u248_25
  4335  05CC  3004               	movlw	4
  4336  05CD  0262               	subwf	_i+1,w
  4337  05CE  1D03               	skipz
  4338  05CF  2DD2               	goto	u248_25
  4339  05D0  3000               	movlw	0
  4340  05D1  0261               	subwf	_i,w
  4341  05D2                     u248_25:	
  4342  05D2  1803               	skipnc
  4343  05D3  2E09               	goto	i1l193
  4344                           
  4345                           ;main.c: 292:             i += 3;
  4346  05D4  1003               	clrc
  4347  05D5  1E06               	btfss	6,4	;volatile
  4348  05D6  1403               	setc
  4349  05D7  3000               	movlw	0
  4350  05D8  1803               	btfsc	3,0
  4351  05D9  3001               	movlw	1
  4352  05DA  00E7               	movwf	_bvalue
  4353                           
  4354                           ;main.c: 293:             if (i >= b) {
  4355  05DB  3007               	movlw	7
  4356  05DC  00F0               	movwf	i1RAM_sequential_SPI_write@latch
  4357  05DD  3000               	movlw	0
  4358  05DE  00F1               	movwf	i1RAM_sequential_SPI_write@latch+1
  4359  05DF  3002               	movlw	2
  4360  05E0  00A0               	movwf	??_ISR
  4361  05E1  0820               	movf	??_ISR,w
  4362  05E2  00F2               	movwf	i1RAM_sequential_SPI_write@pin_number
  4363  05E3  3002               	movlw	2
  4364  05E4  00A1               	movwf	??_ISR+1
  4365  05E5  3000               	movlw	0
  4366  05E6  00A2               	movwf	??_ISR+2
  4367  05E7  3000               	movlw	0
  4368  05E8  00A3               	movwf	??_ISR+3
  4369  05E9  0861               	movf	_i,w
  4370  05EA  07A1               	addwf	??_ISR+1,f
  4371  05EB  0862               	movf	_i+1,w
  4372  05EC  1803               	skipnc
  4373  05ED  0F62               	incfsz	_i+1,w
  4374  05EE  2DF0               	goto	u249_21
  4375  05EF  2DF1               	goto	u249_22
  4376  05F0                     u249_21:	
  4377  05F0  07A2               	addwf	??_ISR+2,f
  4378  05F1                     u249_22:	
  4379  05F1  0863               	movf	_i+2,w
  4380  05F2  1803               	skipnc
  4381  05F3  0F63               	incfsz	_i+2,w
  4382  05F4  2DF6               	goto	u249_23
  4383  05F5  2DF7               	goto	u249_24
  4384  05F6                     u249_23:	
  4385  05F6  07A3               	addwf	??_ISR+3,f
  4386  05F7                     u249_24:	
  4387  05F7  0821               	movf	??_ISR+1,w
  4388  05F8  00F3               	movwf	i1RAM_sequential_SPI_write@address
  4389  05F9  0822               	movf	??_ISR+2,w
  4390  05FA  00F4               	movwf	i1RAM_sequential_SPI_write@address+1
  4391  05FB  0823               	movf	??_ISR+3,w
  4392  05FC  00F5               	movwf	i1RAM_sequential_SPI_write@address+2
  4393  05FD  3067               	movlw	(low (_bvalue| 0))& (0+255)
  4394  05FE  00F6               	movwf	i1RAM_sequential_SPI_write@data_out
  4395  05FF  3000               	movlw	0
  4396  0600  00F7               	movwf	i1RAM_sequential_SPI_write@data_out+1
  4397  0601  01F8               	clrf	i1RAM_sequential_SPI_write@data_out_size
  4398  0602  0AF8               	incf	i1RAM_sequential_SPI_write@data_out_size,f
  4399  0603  120A  158A  262C  120A  118A  	fcall	i1_RAM_sequential_SPI_write
  4400                           
  4401                           ;main.c: 294:                 e++;
  4402  0608  2E0B               	goto	i1l2123
  4403  0609                     i1l193:	
  4404                           
  4405                           ;main.c: 295:                 i = 0;
  4406  0609  1010               	bcf	16,0	;volatile
  4407                           
  4408                           ;main.c: 296:             }
  4409  060A  118B               	bcf	11,3	;volatile
  4410  060B                     i1l2123:	
  4411                           ;main.c: 297:         } else T1CONbits.TMR1ON = 0;
  4412                           
  4413                           
  4414                           ;main.c: 298:         PIR1bits.TMR1IF = 0;
  4415  060B  1003               	clrc
  4416  060C  1283               	bcf	3,5	;RP0=0, select bank0
  4417  060D  1303               	bcf	3,6	;RP1=0, select bank0
  4418  060E  1E06               	btfss	6,4	;volatile
  4419  060F  1403               	setc
  4420  0610  1C03               	btfss	3,0
  4421  0611  2E16               	goto	u250_20
  4422  0612  1283               	bcf	3,5	;RP0=0, select bank0
  4423  0613  1303               	bcf	3,6	;RP1=0, select bank0
  4424  0614  1485               	bsf	5,1	;volatile
  4425  0615  2E19               	goto	u251_24
  4426  0616                     u250_20:	
  4427  0616  1283               	bcf	3,5	;RP0=0, select bank0
  4428  0617  1303               	bcf	3,6	;RP1=0, select bank0
  4429  0618  1085               	bcf	5,1	;volatile
  4430  0619                     u251_24:	
  4431                           
  4432                           ;main.c: 299:     }
  4433  0619  1003               	clrc
  4434  061A  1E06               	btfss	6,4	;volatile
  4435  061B  1403               	setc
  4436  061C  1C03               	btfss	3,0
  4437  061D  2E22               	goto	u252_20
  4438  061E  1283               	bcf	3,5	;RP0=0, select bank0
  4439  061F  1303               	bcf	3,6	;RP1=0, select bank0
  4440  0620  1505               	bsf	5,2	;volatile
  4441  0621  2E25               	goto	i1l2125
  4442  0622                     u252_20:	
  4443  0622  1283               	bcf	3,5	;RP0=0, select bank0
  4444  0623  1303               	bcf	3,6	;RP1=0, select bank0
  4445  0624  1105               	bcf	5,2	;volatile
  4446  0625                     i1l2125:	
  4447                           
  4448                           ;main.c: 300: }
  4449  0625  100B               	bcf	11,0	;volatile
  4450  0626  2EB1               	goto	i1l198
  4451  0627                     i1l2129:	
  4452  0627  0857               	movf	_cycles+2,w
  4453  0628  0260               	subwf	_e+2,w
  4454  0629  1D03               	skipz
  4455  062A  2E31               	goto	u254_25
  4456  062B  0856               	movf	_cycles+1,w
  4457  062C  025F               	subwf	_e+1,w
  4458  062D  1D03               	skipz
  4459  062E  2E31               	goto	u254_25
  4460  062F  0855               	movf	_cycles,w
  4461  0630  025E               	subwf	_e,w
  4462  0631                     u254_25:	
  4463  0631  1803               	skipnc
  4464  0632  2EB0               	goto	i1l196
  4465  0633  3007               	movlw	7
  4466  0634  00F0               	movwf	i1RAM_sequential_SPI_read@latch
  4467  0635  3000               	movlw	0
  4468  0636  00F1               	movwf	i1RAM_sequential_SPI_read@latch+1
  4469  0637  3002               	movlw	2
  4470  0638  00A0               	movwf	??_ISR
  4471  0639  0820               	movf	??_ISR,w
  4472  063A  00F2               	movwf	i1RAM_sequential_SPI_read@pin_number
  4473  063B  0861               	movf	_i,w
  4474  063C  00F3               	movwf	i1RAM_sequential_SPI_read@address
  4475  063D  0862               	movf	_i+1,w
  4476  063E  00F4               	movwf	i1RAM_sequential_SPI_read@address+1
  4477  063F  0863               	movf	_i+2,w
  4478  0640  00F5               	movwf	i1RAM_sequential_SPI_read@address+2
  4479  0641  300E               	movlw	14
  4480  0642  00F6               	movwf	i1RAM_sequential_SPI_read@data_in
  4481  0643  3000               	movlw	0
  4482  0644  00F7               	movwf	i1RAM_sequential_SPI_read@data_in+1
  4483  0645  3002               	movlw	2
  4484  0646  00A1               	movwf	??_ISR+1
  4485  0647  0821               	movf	??_ISR+1,w
  4486  0648  00F8               	movwf	i1RAM_sequential_SPI_read@data_in_size
  4487  0649  120A  158A  2590  120A  118A  	fcall	i1_RAM_sequential_SPI_read
  4488  064E  3007               	movlw	7
  4489  064F  00F0               	movwf	i1RAM_sequential_SPI_read@latch
  4490  0650  3000               	movlw	0
  4491  0651  00F1               	movwf	i1RAM_sequential_SPI_read@latch+1
  4492  0652  3002               	movlw	2
  4493  0653  1283               	bcf	3,5	;RP0=0, select bank0
  4494  0654  1303               	bcf	3,6	;RP1=0, select bank0
  4495  0655  00A0               	movwf	??_ISR
  4496  0656  0820               	movf	??_ISR,w
  4497  0657  00F2               	movwf	i1RAM_sequential_SPI_read@pin_number
  4498  0658  3002               	movlw	2
  4499  0659  00A1               	movwf	??_ISR+1
  4500  065A  3000               	movlw	0
  4501  065B  00A2               	movwf	??_ISR+2
  4502  065C  3000               	movlw	0
  4503  065D  00A3               	movwf	??_ISR+3
  4504  065E  0861               	movf	_i,w
  4505  065F  07A1               	addwf	??_ISR+1,f
  4506  0660  0862               	movf	_i+1,w
  4507  0661  1803               	skipnc
  4508  0662  0F62               	incfsz	_i+1,w
  4509  0663  2E65               	goto	u255_21
  4510  0664  2E66               	goto	u255_22
  4511  0665                     u255_21:	
  4512  0665  07A2               	addwf	??_ISR+2,f
  4513  0666                     u255_22:	
  4514  0666  0863               	movf	_i+2,w
  4515  0667  1803               	skipnc
  4516  0668  0F63               	incfsz	_i+2,w
  4517  0669  2E6B               	goto	u255_23
  4518  066A  2E6C               	goto	u255_24
  4519  066B                     u255_23:	
  4520  066B  07A3               	addwf	??_ISR+3,f
  4521  066C                     u255_24:	
  4522  066C  0821               	movf	??_ISR+1,w
  4523  066D  00F3               	movwf	i1RAM_sequential_SPI_read@address
  4524  066E  0822               	movf	??_ISR+2,w
  4525  066F  00F4               	movwf	i1RAM_sequential_SPI_read@address+1
  4526  0670  0823               	movf	??_ISR+3,w
  4527  0671  00F5               	movwf	i1RAM_sequential_SPI_read@address+2
  4528  0672  3067               	movlw	(low (_bvalue| 0))& (0+255)
  4529  0673  00F6               	movwf	i1RAM_sequential_SPI_read@data_in
  4530  0674  3000               	movlw	0
  4531  0675  00F7               	movwf	i1RAM_sequential_SPI_read@data_in+1
  4532  0676  01F8               	clrf	i1RAM_sequential_SPI_read@data_in_size
  4533  0677  0AF8               	incf	i1RAM_sequential_SPI_read@data_in_size,f
  4534  0678  120A  158A  2590  120A  118A  	fcall	i1_RAM_sequential_SPI_read
  4535  067D  1283               	bcf	3,5	;RP0=0, select bank0
  4536  067E  1303               	bcf	3,6	;RP1=0, select bank0
  4537  067F  0C67               	rrf	_bvalue,w
  4538  0680  1C03               	skipc
  4539  0681  1105               	bcf	5,2	;volatile
  4540  0682  1803               	skipnc
  4541  0683  1505               	bsf	5,2	;volatile
  4542  0684  0C67               	rrf	_bvalue,w
  4543  0685  1C03               	skipc
  4544  0686  1085               	bcf	5,1	;volatile
  4545  0687  1803               	skipnc
  4546  0688  1485               	bsf	5,1	;volatile
  4547  0689  3003               	movlw	3
  4548  068A  07E1               	addwf	_i,f
  4549  068B  3000               	movlw	0
  4550  068C  1803               	skipnc
  4551  068D  3001               	movlw	1
  4552  068E  07E2               	addwf	_i+1,f
  4553  068F  3000               	movlw	0
  4554  0690  1803               	skipnc
  4555  0691  3001               	movlw	1
  4556  0692  07E3               	addwf	_i+2,f
  4557  0693  085A               	movf	_b+2,w
  4558  0694  0263               	subwf	_i+2,w
  4559  0695  1D03               	skipz
  4560  0696  2E9D               	goto	u256_25
  4561  0697  0859               	movf	_b+1,w
  4562  0698  0262               	subwf	_i+1,w
  4563  0699  1D03               	skipz
  4564  069A  2E9D               	goto	u256_25
  4565  069B  0858               	movf	_b,w
  4566  069C  0261               	subwf	_i,w
  4567  069D                     u256_25:	
  4568  069D  1C03               	skipc
  4569  069E  2EB1               	goto	i1l198
  4570  069F  3001               	movlw	1
  4571  06A0  07DE               	addwf	_e,f
  4572  06A1  3000               	movlw	0
  4573  06A2  1803               	skipnc
  4574  06A3  3001               	movlw	1
  4575  06A4  07DF               	addwf	_e+1,f
  4576  06A5  3000               	movlw	0
  4577  06A6  1803               	skipnc
  4578  06A7  3001               	movlw	1
  4579  06A8  07E0               	addwf	_e+2,f
  4580  06A9  3000               	movlw	0
  4581  06AA  00E1               	movwf	_i
  4582  06AB  3000               	movlw	0
  4583  06AC  00E2               	movwf	_i+1
  4584  06AD  3000               	movlw	0
  4585  06AE  00E3               	movwf	_i+2
  4586  06AF  2EB1               	goto	i1l198
  4587  06B0                     i1l196:	
  4588  06B0  1010               	bcf	16,0	;volatile
  4589  06B1                     i1l198:	
  4590  06B1  100C               	bcf	12,0	;volatile
  4591  06B2  0826               	movf	??_ISR+6,w
  4592  06B3  008A               	movwf	10
  4593  06B4  0825               	movf	??_ISR+5,w
  4594  06B5  0084               	movwf	4
  4595  06B6  0E24               	swapf	(??_ISR+4)^0,w
  4596  06B7  0083               	movwf	3
  4597  06B8  0EFE               	swapf	126,f
  4598  06B9  0E7E               	swapf	126,w
  4599  06BA  0009               	retfie
  4600  06BB                     __end_of_ISR:	
  4601                           
  4602                           	psect	intentry
  4603  0004                     __pintentry:	
  4604                           ;incstack = 0
  4605                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4606                           
  4607  0004                     interrupt_function:	
  4608  007E                     saved_w	set	btemp
  4609  0004  00FE               	movwf	btemp
  4610  0005  0E03               	swapf	3,w
  4611  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4612  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4613  0008  00A4               	movwf	??_ISR+4
  4614  0009  0804               	movf	4,w
  4615  000A  00A5               	movwf	??_ISR+5
  4616  000B  080A               	movf	10,w
  4617  000C  00A6               	movwf	??_ISR+6
  4618  000D  120A  118A  2D97   	ljmp	_ISR
  4619                           
  4620                           	psect	text15
  4621  0E2C                     __ptext15:	
  4622 ;; *************** function i1_RAM_sequential_SPI_write *****************
  4623 ;; Defined at:
  4624 ;;		line 222 in file "main.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  latch           2    0[COMMON] PTR volatile unsigned ch
  4627 ;;		 -> PORTC(1), 
  4628 ;;  pin_number      1    2[COMMON] unsigned char 
  4629 ;;  address         3    3[COMMON] unsigned um
  4630 ;;  data_out        2    6[COMMON] PTR unsigned char 
  4631 ;;		 -> TMR1(2), tvalue(2), bvalue(1), 
  4632 ;;  data_out_siz    1    8[COMMON] unsigned char 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  RAM_sequenti    1   13[COMMON] unsigned char 
  4635 ;;  RAM_sequenti    1   12[COMMON] unsigned char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4645 ;;      Params:         9       0       0       0       0
  4646 ;;      Locals:         2       0       0       0       0
  4647 ;;      Temps:          3       0       0       0       0
  4648 ;;      Totals:        14       0       0       0       0
  4649 ;;Total ram usage:       14 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_ISR
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           
  4659                           ;psect for function i1_RAM_sequential_SPI_write
  4660  0E2C                     i1_RAM_sequential_SPI_write:	
  4661                           
  4662                           ;main.c: 223:     SSPCONbits.WCOL = 0;
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in i1_RAM_sequential_SPI_write: [wreg-fsr0h+status,2+status,0]
  4666  0E2C  01FC               	clrf	i1RAM_sequential_SPI_write@dummy
  4667                           
  4668                           ;main.c: 224:     SSPBUF = address;
  4669  0E2D  3001               	movlw	1
  4670  0E2E  00F9               	movwf	??i1_RAM_sequential_SPI_write
  4671  0E2F  0A72               	incf	i1RAM_sequential_SPI_write@pin_number,w
  4672  0E30  2E33               	goto	u200_24
  4673  0E31                     u200_25:	
  4674  0E31  1003               	clrc
  4675  0E32  0DF9               	rlf	??i1_RAM_sequential_SPI_write,f
  4676  0E33                     u200_24:	
  4677  0E33  3EFF               	addlw	-1
  4678  0E34  1D03               	skipz
  4679  0E35  2E31               	goto	u200_25
  4680  0E36  0879               	movf	??i1_RAM_sequential_SPI_write,w
  4681  0E37  3AFF               	xorlw	255
  4682  0E38  00FA               	movwf	??i1_RAM_sequential_SPI_write+1
  4683  0E39  0870               	movf	i1RAM_sequential_SPI_write@latch,w
  4684  0E3A  0084               	movwf	4
  4685  0E3B  1783               	bsf	3,7
  4686  0E3C  1C71               	btfss	i1RAM_sequential_SPI_write@latch+1,0
  4687  0E3D  1383               	bcf	3,7
  4688  0E3E  087A               	movf	??i1_RAM_sequential_SPI_write+1,w
  4689  0E3F  0580               	andwf	0,f
  4690                           
  4691                           ;main.c: 226:     dummy = SSPBUF;
  4692  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  4693  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  4694  0E42  1394               	bcf	20,7	;volatile
  4695                           
  4696                           ;main.c: 227: 
  4697  0E43  3002               	movlw	2
  4698  0E44  0093               	movwf	19	;volatile
  4699  0E45                     i1l148:	
  4700                           ;main.c: 228:     for (i = 0; i < data_out_size; i++) {
  4701                           
  4702  0E45  1683               	bsf	3,5	;RP0=1, select bank1
  4703  0E46  1303               	bcf	3,6	;RP1=0, select bank1
  4704  0E47  1C14               	btfss	20,0	;volatile
  4705  0E48  2E45               	goto	i1l148
  4706                           
  4707                           ;main.c: 229: 
  4708  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  4709  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  4710  0E4B  0813               	movf	19,w	;volatile
  4711  0E4C  00F9               	movwf	??i1_RAM_sequential_SPI_write
  4712  0E4D  0879               	movf	??i1_RAM_sequential_SPI_write,w
  4713  0E4E  00FC               	movwf	i1RAM_sequential_SPI_write@dummy
  4714                           
  4715                           ;main.c: 231:         SSPBUF = data_out[i];
  4716  0E4F  1394               	bcf	20,7	;volatile
  4717                           
  4718                           ;main.c: 232:         while (SSPSTATbits.BF == 0) {}
  4719  0E50  0873               	movf	i1RAM_sequential_SPI_write@address,w
  4720  0E51  00F9               	movwf	??i1_RAM_sequential_SPI_write
  4721  0E52  0874               	movf	i1RAM_sequential_SPI_write@address+1,w
  4722  0E53  00FA               	movwf	??i1_RAM_sequential_SPI_write+1
  4723  0E54  0875               	movf	i1RAM_sequential_SPI_write@address+2,w
  4724  0E55  00FB               	movwf	??i1_RAM_sequential_SPI_write+2
  4725  0E56  3010               	movlw	16
  4726  0E57                     u202_25:	
  4727  0E57  1003               	clrc
  4728  0E58  0CFB               	rrf	??i1_RAM_sequential_SPI_write+2,f
  4729  0E59  0CFA               	rrf	??i1_RAM_sequential_SPI_write+1,f
  4730  0E5A  0CF9               	rrf	??i1_RAM_sequential_SPI_write,f
  4731  0E5B  3EFF               	addlw	-1
  4732  0E5C  1D03               	skipz
  4733  0E5D  2E57               	goto	u202_25
  4734  0E5E  0879               	movf	??i1_RAM_sequential_SPI_write,w
  4735  0E5F  0093               	movwf	19	;volatile
  4736  0E60                     i1l151:	
  4737                           ;main.c: 233:         dummy = SSPBUF;
  4738                           
  4739  0E60  1683               	bsf	3,5	;RP0=1, select bank1
  4740  0E61  1303               	bcf	3,6	;RP1=0, select bank1
  4741  0E62  1C14               	btfss	20,0	;volatile
  4742  0E63  2E60               	goto	i1l151
  4743                           
  4744                           ;main.c: 234:     }
  4745  0E64  1283               	bcf	3,5	;RP0=0, select bank0
  4746  0E65  1303               	bcf	3,6	;RP1=0, select bank0
  4747  0E66  0813               	movf	19,w	;volatile
  4748  0E67  00F9               	movwf	??i1_RAM_sequential_SPI_write
  4749  0E68  0879               	movf	??i1_RAM_sequential_SPI_write,w
  4750  0E69  00FC               	movwf	i1RAM_sequential_SPI_write@dummy
  4751                           
  4752                           ;main.c: 235:     *latch |= (1 << pin_number);
  4753  0E6A  1394               	bcf	20,7	;volatile
  4754                           
  4755                           ;main.c: 236: }
  4756  0E6B  0873               	movf	i1RAM_sequential_SPI_write@address,w
  4757  0E6C  00F9               	movwf	??i1_RAM_sequential_SPI_write
  4758  0E6D  0874               	movf	i1RAM_sequential_SPI_write@address+1,w
  4759  0E6E  00FA               	movwf	??i1_RAM_sequential_SPI_write+1
  4760  0E6F  0875               	movf	i1RAM_sequential_SPI_write@address+2,w
  4761  0E70  00FB               	movwf	??i1_RAM_sequential_SPI_write+2
  4762  0E71  3008               	movlw	8
  4763  0E72                     u204_25:	
  4764  0E72  1003               	clrc
  4765  0E73  0CFB               	rrf	??i1_RAM_sequential_SPI_write+2,f
  4766  0E74  0CFA               	rrf	??i1_RAM_sequential_SPI_write+1,f
  4767  0E75  0CF9               	rrf	??i1_RAM_sequential_SPI_write,f
  4768  0E76  3EFF               	addlw	-1
  4769  0E77  1D03               	skipz
  4770  0E78  2E72               	goto	u204_25
  4771  0E79  0879               	movf	??i1_RAM_sequential_SPI_write,w
  4772  0E7A  0093               	movwf	19	;volatile
  4773  0E7B                     i1l154:	
  4774                           ;main.c: 237: 
  4775                           
  4776  0E7B  1683               	bsf	3,5	;RP0=1, select bank1
  4777  0E7C  1303               	bcf	3,6	;RP1=0, select bank1
  4778  0E7D  1C14               	btfss	20,0	;volatile
  4779  0E7E  2E7B               	goto	i1l154
  4780                           
  4781                           ;main.c: 238: void RAM_sequential_SPI_read(volatile unsigned char* latch, uint8_t pin_nu
      +                          mber, uint24_t address, uint8_t *data_in, uint8_t data_in_size) {
  4782  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  4783  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  4784  0E81  0813               	movf	19,w	;volatile
  4785  0E82  00F9               	movwf	??i1_RAM_sequential_SPI_write
  4786  0E83  0879               	movf	??i1_RAM_sequential_SPI_write,w
  4787  0E84  00FC               	movwf	i1RAM_sequential_SPI_write@dummy
  4788                           
  4789                           ;main.c: 239:     uint8_t i, dummy = 0;
  4790  0E85  1394               	bcf	20,7	;volatile
  4791                           
  4792                           ;main.c: 240:     *latch &= ~(1 << pin_number);
  4793  0E86  0873               	movf	i1RAM_sequential_SPI_write@address,w
  4794  0E87  0093               	movwf	19	;volatile
  4795  0E88                     i1l157:	
  4796                           ;main.c: 241: 
  4797                           
  4798  0E88  1683               	bsf	3,5	;RP0=1, select bank1
  4799  0E89  1303               	bcf	3,6	;RP1=0, select bank1
  4800  0E8A  1C14               	btfss	20,0	;volatile
  4801  0E8B  2E88               	goto	i1l157
  4802                           
  4803                           ;main.c: 242:     SSPCONbits.WCOL = 0;
  4804  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  4805  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  4806  0E8E  0813               	movf	19,w	;volatile
  4807  0E8F  00F9               	movwf	??i1_RAM_sequential_SPI_write
  4808  0E90  0879               	movf	??i1_RAM_sequential_SPI_write,w
  4809  0E91  00FC               	movwf	i1RAM_sequential_SPI_write@dummy
  4810                           
  4811                           ;main.c: 244:     while (SSPSTATbits.BF == 0);
  4812  0E92  01FD               	clrf	i1RAM_sequential_SPI_write@i
  4813  0E93                     i1l1937:	
  4814  0E93  0878               	movf	i1RAM_sequential_SPI_write@data_out_size,w
  4815  0E94  027D               	subwf	i1RAM_sequential_SPI_write@i,w
  4816  0E95  1803               	btfsc	3,0
  4817  0E96  2EB5               	goto	i1l1939
  4818                           
  4819                           ;main.c: 246: 
  4820  0E97  1394               	bcf	20,7	;volatile
  4821                           
  4822                           ;main.c: 247:     SSPCONbits.WCOL = 0;
  4823  0E98  087D               	movf	i1RAM_sequential_SPI_write@i,w
  4824  0E99  0776               	addwf	i1RAM_sequential_SPI_write@data_out,w
  4825  0E9A  00F9               	movwf	??i1_RAM_sequential_SPI_write
  4826  0E9B  0877               	movf	i1RAM_sequential_SPI_write@data_out+1,w
  4827  0E9C  1803               	skipnc
  4828  0E9D  3E01               	addlw	1
  4829  0E9E  00FA               	movwf	??i1_RAM_sequential_SPI_write+1
  4830  0E9F  0879               	movf	??i1_RAM_sequential_SPI_write,w
  4831  0EA0  0084               	movwf	4
  4832  0EA1  1783               	bsf	3,7
  4833  0EA2  1C7A               	btfss	??i1_RAM_sequential_SPI_write+1,0
  4834  0EA3  1383               	bcf	3,7
  4835  0EA4  0800               	movf	0,w
  4836  0EA5  0093               	movwf	19	;volatile
  4837  0EA6                     i1l162:	
  4838                           ;main.c: 248:     SSPBUF = address >> 16;
  4839                           
  4840  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  4841  0EA7  1303               	bcf	3,6	;RP1=0, select bank1
  4842  0EA8  1C14               	btfss	20,0	;volatile
  4843  0EA9  2EA6               	goto	i1l162
  4844                           
  4845                           ;main.c: 249:     while (SSPSTATbits.BF == 0);
  4846  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  4847  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  4848  0EAC  0813               	movf	19,w	;volatile
  4849  0EAD  00F9               	movwf	??i1_RAM_sequential_SPI_write
  4850  0EAE  0879               	movf	??i1_RAM_sequential_SPI_write,w
  4851  0EAF  00FC               	movwf	i1RAM_sequential_SPI_write@dummy
  4852                           
  4853                           ;main.c: 250:     dummy = SSPBUF;
  4854  0EB0  3001               	movlw	1
  4855  0EB1  00F9               	movwf	??i1_RAM_sequential_SPI_write
  4856  0EB2  0879               	movf	??i1_RAM_sequential_SPI_write,w
  4857  0EB3  07FD               	addwf	i1RAM_sequential_SPI_write@i,f
  4858  0EB4  2E93               	goto	i1l1937
  4859  0EB5                     i1l1939:	
  4860                           
  4861                           ;main.c: 251:     SSPCONbits.WCOL = 0;
  4862  0EB5  3001               	movlw	1
  4863  0EB6  00F9               	movwf	??i1_RAM_sequential_SPI_write
  4864  0EB7  0A72               	incf	i1RAM_sequential_SPI_write@pin_number,w
  4865  0EB8  2EBB               	goto	u209_24
  4866  0EB9                     u209_25:	
  4867  0EB9  1003               	clrc
  4868  0EBA  0DF9               	rlf	??i1_RAM_sequential_SPI_write,f
  4869  0EBB                     u209_24:	
  4870  0EBB  3EFF               	addlw	-1
  4871  0EBC  1D03               	skipz
  4872  0EBD  2EB9               	goto	u209_25
  4873  0EBE  0879               	movf	??i1_RAM_sequential_SPI_write,w
  4874  0EBF  00FA               	movwf	??i1_RAM_sequential_SPI_write+1
  4875  0EC0  0870               	movf	i1RAM_sequential_SPI_write@latch,w
  4876  0EC1  0084               	movwf	4
  4877  0EC2  1783               	bsf	3,7
  4878  0EC3  1C71               	btfss	i1RAM_sequential_SPI_write@latch+1,0
  4879  0EC4  1383               	bcf	3,7
  4880  0EC5  087A               	movf	??i1_RAM_sequential_SPI_write+1,w
  4881  0EC6  0480               	iorwf	0,f
  4882  0EC7  0008               	return
  4883  0EC8                     __end_ofi1_RAM_sequential_SPI_write:	
  4884                           
  4885                           	psect	text16
  4886  0D90                     __ptext16:	
  4887 ;; *************** function i1_RAM_sequential_SPI_read *****************
  4888 ;; Defined at:
  4889 ;;		line 254 in file "main.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  latch           2    0[COMMON] PTR volatile unsigned ch
  4892 ;;		 -> PORTC(1), 
  4893 ;;  pin_number      1    2[COMMON] unsigned char 
  4894 ;;  address         3    3[COMMON] unsigned um
  4895 ;;  data_in         2    6[COMMON] PTR unsigned char 
  4896 ;;		 -> TMR1(2), tvalue(2), bvalue(1), 
  4897 ;;  data_in_size    1    8[COMMON] unsigned char 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  RAM_sequenti    1   13[COMMON] unsigned char 
  4900 ;;  RAM_sequenti    1   12[COMMON] unsigned char 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4910 ;;      Params:         9       0       0       0       0
  4911 ;;      Locals:         2       0       0       0       0
  4912 ;;      Temps:          3       0       0       0       0
  4913 ;;      Totals:        14       0       0       0       0
  4914 ;;Total ram usage:       14 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_ISR
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           
  4924                           ;psect for function i1_RAM_sequential_SPI_read
  4925  0D90                     i1_RAM_sequential_SPI_read:	
  4926                           
  4927                           ;main.c: 255:     SSPCONbits.WCOL = 0;
  4928                           
  4929                           ;incstack = 0
  4930                           ; Regs used in i1_RAM_sequential_SPI_read: [wreg-fsr0h+status,2+status,0]
  4931  0D90  01FC               	clrf	i1RAM_sequential_SPI_read@dummy
  4932                           
  4933                           ;main.c: 256:     SSPBUF = address;
  4934  0D91  3001               	movlw	1
  4935  0D92  00F9               	movwf	??i1_RAM_sequential_SPI_read
  4936  0D93  0A72               	incf	i1RAM_sequential_SPI_read@pin_number,w
  4937  0D94  2D97               	goto	u210_24
  4938  0D95                     u210_25:	
  4939  0D95  1003               	clrc
  4940  0D96  0DF9               	rlf	??i1_RAM_sequential_SPI_read,f
  4941  0D97                     u210_24:	
  4942  0D97  3EFF               	addlw	-1
  4943  0D98  1D03               	skipz
  4944  0D99  2D95               	goto	u210_25
  4945  0D9A  0879               	movf	??i1_RAM_sequential_SPI_read,w
  4946  0D9B  3AFF               	xorlw	255
  4947  0D9C  00FA               	movwf	??i1_RAM_sequential_SPI_read+1
  4948  0D9D  0870               	movf	i1RAM_sequential_SPI_read@latch,w
  4949  0D9E  0084               	movwf	4
  4950  0D9F  1783               	bsf	3,7
  4951  0DA0  1C71               	btfss	i1RAM_sequential_SPI_read@latch+1,0
  4952  0DA1  1383               	bcf	3,7
  4953  0DA2  087A               	movf	??i1_RAM_sequential_SPI_read+1,w
  4954  0DA3  0580               	andwf	0,f
  4955                           
  4956                           ;main.c: 258:     dummy = SSPBUF;
  4957  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  4958  0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  4959  0DA6  1394               	bcf	20,7	;volatile
  4960                           
  4961                           ;main.c: 259: 
  4962  0DA7  3003               	movlw	3
  4963  0DA8  0093               	movwf	19	;volatile
  4964  0DA9                     i1l169:	
  4965                           ;main.c: 260:     for (i = 0; i < data_in_size; i++) {
  4966                           
  4967  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  4968  0DAA  1303               	bcf	3,6	;RP1=0, select bank1
  4969  0DAB  1C14               	btfss	20,0	;volatile
  4970  0DAC  2DA9               	goto	i1l169
  4971                           
  4972                           ;main.c: 261:         SSPCONbits.WCOL = 0;
  4973  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4974  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4975  0DAF  0813               	movf	19,w	;volatile
  4976  0DB0  00F9               	movwf	??i1_RAM_sequential_SPI_read
  4977  0DB1  0879               	movf	??i1_RAM_sequential_SPI_read,w
  4978  0DB2  00FC               	movwf	i1RAM_sequential_SPI_read@dummy
  4979                           
  4980                           ;main.c: 263:         while (SSPSTATbits.BF == 0) {}
  4981  0DB3  1394               	bcf	20,7	;volatile
  4982                           
  4983                           ;main.c: 264:         data_in[i] = SSPBUF;
  4984  0DB4  0873               	movf	i1RAM_sequential_SPI_read@address,w
  4985  0DB5  00F9               	movwf	??i1_RAM_sequential_SPI_read
  4986  0DB6  0874               	movf	i1RAM_sequential_SPI_read@address+1,w
  4987  0DB7  00FA               	movwf	??i1_RAM_sequential_SPI_read+1
  4988  0DB8  0875               	movf	i1RAM_sequential_SPI_read@address+2,w
  4989  0DB9  00FB               	movwf	??i1_RAM_sequential_SPI_read+2
  4990  0DBA  3010               	movlw	16
  4991  0DBB                     u212_25:	
  4992  0DBB  1003               	clrc
  4993  0DBC  0CFB               	rrf	??i1_RAM_sequential_SPI_read+2,f
  4994  0DBD  0CFA               	rrf	??i1_RAM_sequential_SPI_read+1,f
  4995  0DBE  0CF9               	rrf	??i1_RAM_sequential_SPI_read,f
  4996  0DBF  3EFF               	addlw	-1
  4997  0DC0  1D03               	skipz
  4998  0DC1  2DBB               	goto	u212_25
  4999  0DC2  0879               	movf	??i1_RAM_sequential_SPI_read,w
  5000  0DC3  0093               	movwf	19	;volatile
  5001  0DC4                     i1l172:	
  5002                           ;main.c: 265:     }
  5003                           
  5004  0DC4  1683               	bsf	3,5	;RP0=1, select bank1
  5005  0DC5  1303               	bcf	3,6	;RP1=0, select bank1
  5006  0DC6  1C14               	btfss	20,0	;volatile
  5007  0DC7  2DC4               	goto	i1l172
  5008                           
  5009                           ;main.c: 266:     *latch |= (1 << pin_number);
  5010  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0DCA  0813               	movf	19,w	;volatile
  5013  0DCB  00F9               	movwf	??i1_RAM_sequential_SPI_read
  5014  0DCC  0879               	movf	??i1_RAM_sequential_SPI_read,w
  5015  0DCD  00FC               	movwf	i1RAM_sequential_SPI_read@dummy
  5016                           
  5017                           ;main.c: 267: }
  5018  0DCE  1394               	bcf	20,7	;volatile
  5019                           
  5020                           ;main.c: 268: 
  5021  0DCF  0873               	movf	i1RAM_sequential_SPI_read@address,w
  5022  0DD0  00F9               	movwf	??i1_RAM_sequential_SPI_read
  5023  0DD1  0874               	movf	i1RAM_sequential_SPI_read@address+1,w
  5024  0DD2  00FA               	movwf	??i1_RAM_sequential_SPI_read+1
  5025  0DD3  0875               	movf	i1RAM_sequential_SPI_read@address+2,w
  5026  0DD4  00FB               	movwf	??i1_RAM_sequential_SPI_read+2
  5027  0DD5  3008               	movlw	8
  5028  0DD6                     u214_25:	
  5029  0DD6  1003               	clrc
  5030  0DD7  0CFB               	rrf	??i1_RAM_sequential_SPI_read+2,f
  5031  0DD8  0CFA               	rrf	??i1_RAM_sequential_SPI_read+1,f
  5032  0DD9  0CF9               	rrf	??i1_RAM_sequential_SPI_read,f
  5033  0DDA  3EFF               	addlw	-1
  5034  0DDB  1D03               	skipz
  5035  0DDC  2DD6               	goto	u214_25
  5036  0DDD  0879               	movf	??i1_RAM_sequential_SPI_read,w
  5037  0DDE  0093               	movwf	19	;volatile
  5038  0DDF                     i1l175:	
  5039                           ;main.c: 269: void __attribute__((picinterrupt(""))) ISR() {
  5040                           
  5041  0DDF  1683               	bsf	3,5	;RP0=1, select bank1
  5042  0DE0  1303               	bcf	3,6	;RP1=0, select bank1
  5043  0DE1  1C14               	btfss	20,0	;volatile
  5044  0DE2  2DDF               	goto	i1l175
  5045                           
  5046                           ;main.c: 270:     if (c == 'e') {
  5047  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  5048  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  5049  0DE5  0813               	movf	19,w	;volatile
  5050  0DE6  00F9               	movwf	??i1_RAM_sequential_SPI_read
  5051  0DE7  0879               	movf	??i1_RAM_sequential_SPI_read,w
  5052  0DE8  00FC               	movwf	i1RAM_sequential_SPI_read@dummy
  5053                           
  5054                           ;main.c: 271:         tvalue = TMR1;
  5055  0DE9  1394               	bcf	20,7	;volatile
  5056                           
  5057                           ;main.c: 272:         RAM_sequential_SPI_write(&PORTC, 2, i, (uint8_t*) & TMR1, 2);
  5058  0DEA  0873               	movf	i1RAM_sequential_SPI_read@address,w
  5059  0DEB  0093               	movwf	19	;volatile
  5060  0DEC                     i1l178:	
  5061                           ;main.c: 273:         TMR1 = 0;
  5062                           
  5063  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  5064  0DED  1303               	bcf	3,6	;RP1=0, select bank1
  5065  0DEE  1C14               	btfss	20,0	;volatile
  5066  0DEF  2DEC               	goto	i1l178
  5067                           
  5068                           ;main.c: 274:         i += 3;
  5069  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  5070  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  5071  0DF2  0813               	movf	19,w	;volatile
  5072  0DF3  00F9               	movwf	??i1_RAM_sequential_SPI_read
  5073  0DF4  0879               	movf	??i1_RAM_sequential_SPI_read,w
  5074  0DF5  00FC               	movwf	i1RAM_sequential_SPI_read@dummy
  5075                           
  5076                           ;main.c: 276:             bvalue = ~PORTBbits.RB4;
  5077  0DF6  01FD               	clrf	i1RAM_sequential_SPI_read@i
  5078  0DF7                     i1l1975:	
  5079  0DF7  0878               	movf	i1RAM_sequential_SPI_read@data_in_size,w
  5080  0DF8  027D               	subwf	i1RAM_sequential_SPI_read@i,w
  5081  0DF9  1803               	btfsc	3,0
  5082  0DFA  2E19               	goto	i1l1977
  5083                           
  5084                           ;main.c: 277:             RAM_sequential_SPI_write(&PORTC, 2, i + 2, &bvalue, 1);
  5085  0DFB  1394               	bcf	20,7	;volatile
  5086                           
  5087                           ;main.c: 278:         } else {
  5088  0DFC  087C               	movf	i1RAM_sequential_SPI_read@dummy,w
  5089  0DFD  0093               	movwf	19	;volatile
  5090  0DFE                     i1l183:	
  5091                           ;main.c: 279:             T1CONbits.TMR1ON = 0;
  5092                           
  5093  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  5094  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  5095  0E00  1C14               	btfss	20,0	;volatile
  5096  0E01  2DFE               	goto	i1l183
  5097                           
  5098                           ;main.c: 280:             INTCONbits.RBIE = 0;
  5099  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0E04  0813               	movf	19,w	;volatile
  5102  0E05  00F9               	movwf	??i1_RAM_sequential_SPI_read
  5103  0E06  087D               	movf	i1RAM_sequential_SPI_read@i,w
  5104  0E07  0776               	addwf	i1RAM_sequential_SPI_read@data_in,w
  5105  0E08  00FA               	movwf	??i1_RAM_sequential_SPI_read+1
  5106  0E09  0877               	movf	i1RAM_sequential_SPI_read@data_in+1,w
  5107  0E0A  1803               	skipnc
  5108  0E0B  3E01               	addlw	1
  5109  0E0C  00FB               	movwf	??i1_RAM_sequential_SPI_read+2
  5110  0E0D  087A               	movf	??i1_RAM_sequential_SPI_read+1,w
  5111  0E0E  0084               	movwf	4
  5112  0E0F  1783               	bsf	3,7
  5113  0E10  1C7B               	btfss	??i1_RAM_sequential_SPI_read+2,0
  5114  0E11  1383               	bcf	3,7
  5115  0E12  0879               	movf	??i1_RAM_sequential_SPI_read,w
  5116  0E13  0080               	movwf	0
  5117                           
  5118                           ;main.c: 281:         }
  5119  0E14  3001               	movlw	1
  5120  0E15  00F9               	movwf	??i1_RAM_sequential_SPI_read
  5121  0E16  0879               	movf	??i1_RAM_sequential_SPI_read,w
  5122  0E17  07FD               	addwf	i1RAM_sequential_SPI_read@i,f
  5123  0E18  2DF7               	goto	i1l1975
  5124  0E19                     i1l1977:	
  5125                           
  5126                           ;main.c: 282:         PORTAbits.RA1 = ~PORTBbits.RB4;
  5127  0E19  3001               	movlw	1
  5128  0E1A  00F9               	movwf	??i1_RAM_sequential_SPI_read
  5129  0E1B  0A72               	incf	i1RAM_sequential_SPI_read@pin_number,w
  5130  0E1C  2E1F               	goto	u219_24
  5131  0E1D                     u219_25:	
  5132  0E1D  1003               	clrc
  5133  0E1E  0DF9               	rlf	??i1_RAM_sequential_SPI_read,f
  5134  0E1F                     u219_24:	
  5135  0E1F  3EFF               	addlw	-1
  5136  0E20  1D03               	skipz
  5137  0E21  2E1D               	goto	u219_25
  5138  0E22  0879               	movf	??i1_RAM_sequential_SPI_read,w
  5139  0E23  00FA               	movwf	??i1_RAM_sequential_SPI_read+1
  5140  0E24  0870               	movf	i1RAM_sequential_SPI_read@latch,w
  5141  0E25  0084               	movwf	4
  5142  0E26  1783               	bsf	3,7
  5143  0E27  1C71               	btfss	i1RAM_sequential_SPI_read@latch+1,0
  5144  0E28  1383               	bcf	3,7
  5145  0E29  087A               	movf	??i1_RAM_sequential_SPI_read+1,w
  5146  0E2A  0480               	iorwf	0,f
  5147  0E2B  0008               	return
  5148  0E2C                     __end_ofi1_RAM_sequential_SPI_read:	
  5149  007E                     btemp	set	126	;btemp
  5150  007E                     wtemp0	set	126


Data Sizes:
    Strings     261
    Constant    10
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      72
    BANK1            80      0      10
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 10
		 -> number(BANK1[10]), 

    printf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> printf@c(BANK0[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 47
		 -> STR_15(CODE[35]), STR_14(CODE[24]), STR_13(CODE[18]), STR_12(CODE[47]), 
		 -> STR_11(CODE[9]), STR_10(CODE[16]), STR_9(CODE[7]), STR_8(CODE[9]), 
		 -> STR_7(CODE[25]), STR_6(CODE[9]), STR_5(CODE[16]), STR_4(CODE[17]), 
		 -> STR_3(CODE[5]), STR_2(CODE[41]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    RAM_sequential_SPI_read@data_in	PTR unsigned char  size(2) Largest target is 2
		 -> TMR1(SFR0[2]), tvalue(BANK0[2]), bvalue(BANK0[1]), 

    RAM_sequential_SPI_read@latch	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    RAM_sequential_SPI_write@data_out	PTR unsigned char  size(2) Largest target is 2
		 -> TMR1(SFR0[2]), tvalue(BANK0[2]), bvalue(BANK0[1]), 

    RAM_sequential_SPI_write@latch	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    RAM_set_SPI_mode@latch	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    read_line@s	PTR unsigned char  size(1) Largest target is 10
		 -> number(BANK1[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_RAM_sequential_SPI_read
    _ISR->i1_RAM_sequential_SPI_write

Critical Paths under _main in BANK0

    _main->_printf
    _read_line->_putch
    _printf->___lwmod
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    9258
                                             44 BANK0      9     9      0
            _RAM_sequential_SPI_read
           _RAM_sequential_SPI_write
                   _RAM_set_SPI_mode
                               _atoi
                             _printf
                          _read_char
                          _read_line
                   _setup_peripheals
 ---------------------------------------------------------------------------------
 (1) _setup_peripheals                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_line                                            8     6      2     705
                                              8 BANK0      8     6      2
                              _putch
                          _read_char
 ---------------------------------------------------------------------------------
 (2) _read_char                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    19      8    2959
                                             21 BANK0     23    15      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              7 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             15 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              7 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     791
                                             13 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              7 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              7 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _RAM_set_SPI_mode                                     6     3      3     242
                                              7 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _RAM_sequential_SPI_write                            14     5      9    2270
                                              7 BANK0     14     5      9
 ---------------------------------------------------------------------------------
 (1) _RAM_sequential_SPI_read                             14     5      9    2291
                                              7 BANK0     14     5      9
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  7     7      0    1041
                                              0 BANK0      7     7      0
          i1_RAM_sequential_SPI_read
         i1_RAM_sequential_SPI_write
 ---------------------------------------------------------------------------------
 (4) i1_RAM_sequential_SPI_write                          14     5      9     510
                                              0 COMMON    14     5      9
 ---------------------------------------------------------------------------------
 (4) i1_RAM_sequential_SPI_read                           14     5      9     531
                                              0 COMMON    14     5      9
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RAM_sequential_SPI_read
   _RAM_sequential_SPI_write
   _RAM_set_SPI_mode
   _atoi
     ___wmul
     _isdigit
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
   _read_char
   _read_line
     _putch
     _read_char
   _setup_peripheals

 _ISR (ROOT)
   i1_RAM_sequential_SPI_read
   i1_RAM_sequential_SPI_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      60       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     35      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       A       7       12.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      60      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Jul 28 21:46:03 2018

                                      _a 005B                                        _b 0058  
                                      _c 0064                                        _e 005E  
                                      _i 0061                                        pc 0002  
                            __CFG_CP$OFF 0000                              _SSPSTATbits 0094  
                                     fsr 0004                      ___wmul@multiplicand 0029  
           RAM_sequential_SPI_read@latch 0027             RAM_sequential_SPI_read@dummy 0033  
                                    l121 0BAC                                      l115 0BA3  
                                    l142 0C38                                      l151 0F98  
                                    l162 0FDE                                      l154 0FB3  
                                    l172 0EFC                                      l148 0F7D  
                                    l332 0BD4                                      l157 0FC0  
                                    l183 0F36                                      l175 0F17  
                                    l328 0596                                      l169 0EE1  
                                    l178 0F24                             __CFG_CPD$OFF 0000  
                                    _ISR 0597                                      fsr0 0004  
                                    indf 0000                             __CFG_FOSC$HS 0000  
                           __CFG_LVP$OFF 0000                                     ?_ISR 0070  
                                   l2101 03C1                                     l2103 03CF  
                                   l2007 007D                                     l2041 0109  
                                   l2033 00DD                                     l2105 03DC  
                                   l2035 00E9                                     l2055 01C7  
                                   l1521 0BC6                                     l1505 0BB6  
                                   l2163 04DD                                     l2077 025B  
                                   l1527 0BCC                                     l1551 06D3  
                                   l1703 04C3                                     l2095 03A7  
                                   l2079 0365                                     l1561 06F4  
                                   l1721 051F                                     l1705 04E8  
                                   l2097 03B4                                     l1715 04FA  
                                   l1557 06E9                                     l1549 06C5  
                                   l1573 0BF3                                     l1733 054E  
                                   l1725 0534                                     l1661 040F  
                                   l1741 03EC              i1RAM_sequential_SPI_write@i 007D  
                                   l1831 0F2F                                     l1575 0C01  
                                   l1583 0C1A                                     l1727 0538  
                                   l1833 0F51                                     l1729 053C  
                                   l1841 0D12                                     l1579 0C0F  
                                   l1739 0552                                     l1691 04AA  
                                   l1683 047A                                     l1675 0467  
                                   l1667 0428                                     l1685 048E  
                                   l1853 0D3C                                     l1837 0D26  
                                   l1871 0CA5                                     l1695 04B5  
                                   l1679 0478                                     l1793 0FCB  
                                   l1873 0C9E                                     l1689 049D  
                                   l1795 0FED                                     l1891 0CC8  
                                   l1883 0CBE                                     l1875 0CAA  
                                   l1699 04BE                                     l1859 0D65  
                                   l1893 0CF6                                     l1991 0048  
                                   l1889 0CC4                                     l1899 0D07  
                                   STR_1 080D                                     STR_2 074B  
                                   STR_3 081C                                     STR_4 07DA  
                                   STR_5 07EB                                     STR_6 07FB  
                                   STR_7 0797                                     STR_8 0804  
                                   STR_9 0815                                     u1415 06D4  
                                   u2311 013B                                     u2312 013C  
                                   u1425 06E0                                     u2313 0141  
                                   u2305 0107                                     u2241 00B7  
                                   u2314 0142                                     u2250 00DA  
                                   u2242 00B8                                     u1355 0BD5  
                                   u1435 06EA                                     u2331 023A  
                                   u2243 00BD                                     u2332 023B  
                                   u2244 00BE                                     u1365 0BDC  
                                   u1605 0526                                     u2341 0248  
                                   u2333 0240                                     u2325 01C5  
                                   u2430 03CC                                     u2342 0249  
                                   u2334 0241                                     u2270 00E6  
                                   u2415 03B1                                     u2343 024E  
                                   u2344 024F                                     u1705 0F8F  
                                   u1465 0BF6                                     u1545 046F  
                                   u2450 03D8                                     u1395 06C8  
                                   u2371 02B9                                     u2372 02BA  
                                   u1805 0EF3                                     u1725 0FAA  
                                   u1485 0C07                                     u2381 0305  
                                   u2373 02BF                                     u1654 0C28  
                                   u2382 0306                                     u2374 02C0  
                                   u1655 0C26                                     u1495 0C10  
                                   u2383 030B                                     u2295 00F3  
                                   u2384 030C                                     u1825 0F0E  
                                   u1585 0515                                     u1674 0C48  
                                   u1675 0C46                                     u1915 0D45  
                                   u2395 0265                                     u1684 0F6D  
                                   u1685 0F6B                                     u1774 0FF3  
                                   u1775 0FF1                                     u1935 0D73  
                                   u1784 0ED1                                     u1785 0ECF  
                                   u1874 0F57                                     u1875 0F55  
                                   _TMR1 000E          i1RAM_sequential_SPI_write@latch 0070  
        i1RAM_sequential_SPI_write@dummy 007C                             __CFG_WRT$OFF 0000  
                                   _atoi 0C9B                                     _main 0026  
                                   btemp 007E                                     start 0010  
                                  ??_ISR 0020    RAM_sequential_SPI_write@data_out_size 002F  
i1RAM_sequential_SPI_write@data_out_size 0078                                    ?_atoi 002D  
                                  ?_main 0070                                    STR_10 07EB  
                                  STR_11 07FB                                    STR_12 071C  
                                  STR_13 07C8                                    STR_14 07B0  
                                  STR_15 0774                            __CFG_WDTE$OFF 0000  
                        __end_of___lwdiv 06F9                                    i1l151 0E60  
                                  i1l162 0EA6                                    i1l154 0E7B  
                                  i1l172 0DC4                                    i1l148 0E45  
                                  i1l157 0E88                                    i1l183 0DFE  
                                  i1l175 0DDF                                    i1l169 0DA9  
                                  i1l193 0609                          __end_of___lwmod 0C1F  
                                  i1l178 0DEC                                    i1l196 06B0  
                                  i1l198 06B1                                    _RCREG 001A  
                                  _SPBRG 0099                                    _PORTA 0005  
                                  _PORTC 0007                                    _TRISA 0085  
                                  _TRISB 0086                                    _TRISC 0087  
                                  _TXREG 0019                            __CFG_PWRTE$ON 0000  
                        __end_of_dpowers 071C                          __end_of_isdigit 0BC8  
                                  atoi@a 0032                                    atoi@s 0034  
                                  _putch 0BA0                           __CFG_BOREN$OFF 0000  
                                  pclath 000A         i1RAM_sequential_SPI_read@address 0073  
       i1RAM_sequential_SPI_read@data_in 0076                                    status 0003  
                                  wtemp0 007E         __end_of_RAM_sequential_SPI_write 1000  
           ??i1_RAM_sequential_SPI_write 0079                          __initialization 0013  
                           __end_of_atoi 0D0C                             __end_of_main 03E6  
                       _RAM_set_SPI_mode 0C1F                 ?_RAM_sequential_SPI_read 0027  
                                 ??_atoi 002F                                   ??_main 004C  
                                 ?_putch 0070                    RAM_set_SPI_mode@latch 0027  
                  RAM_set_SPI_mode@dummy 002C      __size_ofi1_RAM_sequential_SPI_write 009C  
                                 i1l2123 060B                                   i1l2125 0625  
                                 i1l2129 0627                                   u200_24 0E33  
                                 u200_25 0E31                                   u210_24 0D97  
                                 u210_25 0D95                                   u202_25 0E57  
                                 i1l1937 0E93                                   i1l1939 0EB5  
                                 i1l1975 0DF7                                   i1l1977 0E19  
                                 u212_25 0DBB                                   u204_25 0E72  
                                 u214_25 0DD6                                   u209_24 0EBB  
                                 u209_25 0EB9                                   u250_20 0616  
                                 u219_24 0E1F                                   u251_24 0619  
                                 u219_25 0E1D                                   u252_20 0622  
                                 u254_25 0631                                   u255_21 0665  
                                 u255_22 0666                                   u255_23 066B  
                                 u255_24 066C                                   u256_25 069D  
                                 u248_25 05D2                                   u249_21 05F0  
                                 u249_22 05F1                                   u249_23 05F6  
                                 u249_24 05F7                                   _SSPBUF 0013  
                                 ___wmul 0BC8                                ??___lwdiv 002B  
                              ??___lwmod 0033                                   _bvalue 0067  
                                 _cycles 0055                                   _number 00A0  
                                 _printf 03E6                                   _tvalue 0065  
                              ??_isdigit 0027                                   saved_w 007E  
                                 putch@c 0027                __size_of_setup_peripheals 0046  
                __end_of__initialization 0022        RAM_sequential_SPI_read@pin_number 0029  
    i1RAM_sequential_SPI_read@pin_number 0072          __end_of_RAM_sequential_SPI_read 0F64  
                         __pcstackCOMMON 0070                 _RAM_sequential_SPI_write 0F64  
    RAM_sequential_SPI_read@data_in_size 002F    i1RAM_sequential_SPI_read@data_in_size 0078  
                          __end_of_putch 0BAC       __size_ofi1_RAM_sequential_SPI_read 009C  
             ?i1_RAM_sequential_SPI_read 0070                                  ??_putch 0027  
                             __pbssBANK0 0055                               __pbssBANK1 00A0  
       RAM_sequential_SPI_write@data_out 002D       i1RAM_sequential_SPI_write@data_out 0076  
     __end_ofi1_RAM_sequential_SPI_write 0EC8               i1_RAM_sequential_SPI_write 0E2C  
                     __size_of_read_char 000C                       __size_of_read_line 0084  
                             __pmaintext 0026                                  ?___wmul 0027  
                             __pintentry 0004                                  ?_printf 0035  
        RAM_sequential_SPI_write@address 002A        i1RAM_sequential_SPI_write@address 0073  
      __end_ofi1_RAM_sequential_SPI_read 0E2C                 __end_of_RAM_set_SPI_mode 0C55  
                             __stringtab 0700           i1RAM_sequential_SPI_read@latch 0070  
         i1RAM_sequential_SPI_read@dummy 007C                          __size_of___wmul 0023  
                                ___lwdiv 06BB                                  ___lwmod 0BEB  
                                __ptext1 0C55                                  __ptext2 0D0C  
                                __ptext3 0BAC                                  __ptext4 03E6  
                                __ptext5 0BA0                                  __ptext6 0BEB  
                                __ptext7 06BB                                  __ptext8 0C9B  
                                __ptext9 0BB8                          __size_of_printf 01B1  
                           __size_of_ISR 0124                                _T1CONbits 0010  
                                _dpowers 0712                                  _isdigit 0BB8  
                      __end_of_read_char 0BB8                        __end_of_read_line 0D90  
                       _setup_peripheals 0C55                                  clrloop0 0B99  
       __size_of_RAM_sequential_SPI_read 009C                     end_of_initialization 0022  
                              _RCSTAbits 0018                                  printf@c 004B  
                                printf@f 0035                             __pstringtext 0700  
                              _PORTAbits 0005                                _PORTBbits 0006  
                              _PORTCbits 0007                                _TRISCbits 0087  
                            printf@width 0049                                _TXSTAbits 0098  
             ??_RAM_sequential_SPI_write 0030                           __end_of___wmul 0BEB  
                         __end_of_printf 0597                      start_initialization 0013  
            ??i1_RAM_sequential_SPI_read 0079                              __end_of_ISR 06BB  
            ?i1_RAM_sequential_SPI_write 0070                                 ??___wmul 002B  
                       read_line@max_len 0028                                 ??_printf 003D  
                             read_line@c 002F                               read_line@i 002D  
                             read_line@s 002C                                ___latbits 0002  
                          __pcstackBANK0 0020                  _RAM_sequential_SPI_read 0EC8  
                           _isdigit$1090 0027                        ?_RAM_set_SPI_mode 0027  
                     ??_RAM_set_SPI_mode 002A                i1_RAM_sequential_SPI_read 0D90  
                       ___lwdiv@dividend 0029                 RAM_sequential_SPI_read@i 0034  
               __end_of_setup_peripheals 0C9B                                 ?___lwdiv 0027  
                               ?___lwmod 002F                                 ?_isdigit 0070  
                       ___lwdiv@quotient 002C                                _read_char 0BAC  
                              _read_line 0D0C                           __size_of_putch 000C  
             i1RAM_sequential_SPI_read@i 007D                        interrupt_function 0004  
                         ___wmul@product 002B                                clear_ram0 0B98  
                               _PIE1bits 008C                                 _PIR1bits 000C  
                            __stringbase 0712                               _ADCON1bits 009F  
                      ___wmul@multiplier 0027                               printf@flag 0041  
              ??_RAM_sequential_SPI_read 0030                               printf@prec 0045  
                             ?_read_char 0070                               ?_read_line 0028  
                       __size_of___lwdiv 003E                         __size_of___lwmod 0034  
                     __end_of__stringtab 0712           RAM_sequential_SPI_read@address 002A  
         RAM_sequential_SPI_read@data_in 002D                         __size_of_isdigit 0010  
                        ___lwdiv@divisor 0027                          ___lwdiv@counter 002E  
                               __ptext10 0BC8                                 __ptext11 0C1F  
                               __ptext12 0F64                                 __ptext13 0EC8  
                               __ptext14 0597                                 __ptext15 0E2C  
                               __ptext16 0D90                            __size_of_atoi 0071  
                          __size_of_main 03C0                                 atoi@sign 0031  
                              printf@len 0047                                printf@val 0043  
      __size_of_RAM_sequential_SPI_write 009C               RAM_set_SPI_mode@pin_number 0029  
              ?_RAM_sequential_SPI_write 0027                               _INTCONbits 000B  
          RAM_sequential_SPI_write@latch 0027            RAM_sequential_SPI_write@dummy 0033  
                               isdigit@c 0028                              ??_read_char 0027  
                            ??_read_line 002A                                 intlevel1 0000  
                       ___lwmod@dividend 0031                                stringcode 070A  
                               printf@ap 0046                                 printf@cp 0042  
              __size_of_RAM_set_SPI_mode 0036                        ?_setup_peripheals 0070  
              RAM_sequential_SPI_write@i 0034                       ??_setup_peripheals 0027  
                        ___lwmod@divisor 002F                          ___lwmod@counter 0034  
                               stringtab 0700                               _SSPCONbits 0014  
     RAM_sequential_SPI_write@pin_number 0029     i1RAM_sequential_SPI_write@pin_number 0072  
